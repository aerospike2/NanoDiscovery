(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    414877,       8304]
NotebookOptionsPosition[    410154,       8227]
NotebookOutlinePosition[    410684,       8246]
CellTagsIndexPosition[    410641,       8243]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MAP-Elites Algorithm ", "Title",
 CellChangeTimes->{{3.8133462589815006`*^9, 3.8133462952518115`*^9}, {
   3.8133464558226714`*^9, 3.8133465117995586`*^9}, {3.838455872646558*^9, 
   3.8384558825734644`*^9}, 
   3.838455912805142*^9},ExpressionUUID->"481eda54-84cf-4b60-b5cf-\
c8e46c0abe72"],

Cell["\<\
Yibin Jiang, Abhishek Sharma
Cronin Lab
University of Glasgow\
\>", "Subsubsection",
 CellChangeTimes->{{3.8133462718972087`*^9, 3.813346284413179*^9}, {
  3.8384558561805887`*^9, 3.838455857656348*^9}, {3.8384559152353487`*^9, 
  3.838455921547884*^9}},ExpressionUUID->"b65ee063-db04-4cab-b478-\
15d9b8d4525f"],

Cell[CellGroupData[{

Cell["Define functions", "Section",
 CellChangeTimes->{{3.814273451832561*^9, 
  3.814273453728362*^9}},ExpressionUUID->"285c1564-0916-43b4-b0e7-\
3a1f6033fee9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LaunchKernels", "[", "8", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ObjectiveFunction", "[", "X_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"performance", ",", "attribute"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Define", " ", "a", " ", "objective", " ", "function", " ", "to", " ", 
       "map", " ", "input", " ", 
       RowBox[{"(", "X", ")"}], " ", "to", " ", "a", " ", "performance", " ", 
       "and", " ", "attribute", " ", "space", " ", 
       RowBox[{"(", "Y", ")"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"performance", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{"X", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"attribute", " ", "=", " ", 
       RowBox[{"Round", "[", 
        FractionBox[
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "0.1"], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"performance", ",", "attribute"}], "}"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntializePool", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pool", ",", "indexes", ",", "Xtemp", ",", "Ytemp", ",", "Maxindex", ",",
       "Sample"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "create", " ", "the", " ", "initial", " ", "pool", " ", "according", " ",
       "to", " ", "the", " ", "attribute"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pool", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"indexes", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Y", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
            "attributeIndex"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Xtemp", " ", "=", " ", 
         RowBox[{
         "X", "\[LeftDoubleBracket]", "indexes", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Ytemp", " ", "=", " ", 
         RowBox[{
         "Y", "\[LeftDoubleBracket]", "indexes", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Maxindex", " ", "=", " ", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{"Ytemp", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sample", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
           "Xtemp", "\[LeftDoubleBracket]", "Maxindex", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "Ytemp", "\[LeftDoubleBracket]", "Maxindex", 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pool", ",", "Sample"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"attributeIndex", ",", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Y", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pool", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CrossOver", "[", 
   RowBox[{"pool_", ",", "featureNum_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"indexes", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexes", " ", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "pool", "]"}]}], "}"}], ",", "2"}], "]"}]}], 
     " ", ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{
         "pool", "\[LeftDoubleBracket]", "indexes", "\[RightDoubleBracket]"}],
          "//", "MatrixForm"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"offspring", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"pool", "\[LeftDoubleBracket]", 
           RowBox[{"indexes", "\[LeftDoubleBracket]", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", "1"}], "]"}], 
            "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "]"}], 
         "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "featureNum"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "offspring", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "offspring", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mutation", "[", 
   RowBox[{"offspringOrgi_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"indexes", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"offspring", " ", "=", " ", 
      RowBox[{"offspringOrgi", "+", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "sigma"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "offspringOrgi", "]"}], "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "offspring", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.813735541849811*^9, 3.813735595532751*^9}, {
   3.81373564731514*^9, 3.813735676544073*^9}, {3.813735814964138*^9, 
   3.8137358677196493`*^9}, {3.81373602148602*^9, 3.813736036003356*^9}, {
   3.8137362195852795`*^9, 3.81373622066131*^9}, {3.813737509057868*^9, 
   3.813737536075266*^9}, {3.813737992039117*^9, 3.813738083790639*^9}, {
   3.813738949943717*^9, 3.8137390283497853`*^9}, {3.813739088375793*^9, 
   3.813739208817222*^9}, {3.8137394234543157`*^9, 3.8137394298864975`*^9}, {
   3.813739860410229*^9, 3.813739870506488*^9}, {3.8141268894220114`*^9, 
   3.814126889981372*^9}, {3.814264021995516*^9, 3.814264025861167*^9}, 
   3.8142740768919563`*^9, 3.814274165060122*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"81839cac-37d5-4d8f-90ce-fbe49998178f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateSamples", "[", 
   RowBox[{
   "pool_", ",", "featureNum_", ",", "sigma_", ",", "mutationRate_", ",", 
    RowBox[{"{", 
     RowBox[{"batchSizeC_", ",", "batchSizeM_", ",", "batchSizeR_"}], "}"}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"samples", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"samples", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Crossover", " ", "+", " ", "Mutation"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", " ", "=", " ", 
         RowBox[{"CrossOver", "[", 
          RowBox[{"pool", ",", "featureNum"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", "mutationRate"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"offspring", " ", "=", " ", 
           RowBox[{"Mutation", "[", 
            RowBox[{"offspring", ",", "sigma"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"samples", ",", "offspring"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "batchSizeC"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "Mutation", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", " ", "=", " ", 
         RowBox[{
          RowBox[{"pool", "\[LeftDoubleBracket]", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "pool", "]"}]}], "}"}], "]"}], 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ";;", "featureNum"}], "\[RightDoubleBracket]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"offspring", " ", "=", " ", 
         RowBox[{"Mutation", "[", 
          RowBox[{"offspring", ",", "sigma"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"samples", ",", "offspring"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "batchSizeM"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Random", " ", "sampling"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "featureNum"}], "}"}]}], "]"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"samples", ",", "offspring"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "batchSizeR"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "samples", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8137406931167345`*^9, {3.8137417504632044`*^9, 3.8137417554688587`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d9b20218-0b0c-41b5-b6d3-87e163d8424a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdatePool", "[", 
   RowBox[{"samples_", ",", "pool_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "indexes", ",", "poolindexes", ",", "poolelite", ",", "samplesTemp", ",",
       "Maxindex", ",", "elite", ",", "originalpool"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"originalpool", "=", "pool"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"indexes", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"samples", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
            "attributeIndex"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"poolindexes", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"pool", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
            "attributeIndex"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"poolelite", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
          "pool", "\[LeftDoubleBracket]", "poolindexes", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"samplesTemp", " ", "=", " ", 
         RowBox[{
         "samples", "\[LeftDoubleBracket]", "indexes", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Maxindex", " ", "=", " ", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{"samplesTemp", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"elite", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
          "samplesTemp", "\[LeftDoubleBracket]", "Maxindex", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "poolindexes", "]"}], "<", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"originalpool", ",", "elite"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"elite", "\[LeftDoubleBracket]", 
            RowBox[{"-", "2"}], "\[RightDoubleBracket]"}], ">", 
           RowBox[{"poolelite", "\[LeftDoubleBracket]", 
            RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "originalpool", "\[LeftDoubleBracket]", "poolindexes", 
            "\[RightDoubleBracket]"}], " ", "=", " ", "elite"}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"attributeIndex", ",", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"samples", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "originalpool", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8137689299296503`*^9, 3.8137689463461676`*^9}, {
  3.81376900050595*^9, 3.8137690203622227`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3b04d7cb-01fa-4db8-8b68-a83e9a30b89e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromXtoSpectrum1", "[", 
   RowBox[{"X_", ",", "Qset_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gridweights", ",", "standardD", ",", "spectrum", ",", "griddistance"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"griddistance", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "i"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", "j"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              "-", "k"}], ")"}], "2"]}], ")"}], 
         RowBox[{"1", "/", "2"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Subdivide", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dimensions", "@", "shapes"}], ")"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Subdivide", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dimensions", "@", "shapes"}], ")"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Subdivide", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dimensions", "@", "shapes"}], ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gridweights", " ", "=", 
      RowBox[{"N", "[", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", 
           RowBox[{"0.0001", "+", 
            RowBox[{"0.08", "*", 
             RowBox[{
             "X", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}]}]}]}], "]"}], ",", "griddistance"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"Flatten", "[", "gridweights", "]"}], "]"}], ">", "0"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"gridweights", " ", "=", " ", 
        FractionBox["gridweights", 
         RowBox[{"Total", "[", 
          RowBox[{"Flatten", "[", "gridweights", "]"}], "]"}]]}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"spectrum", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"spectrum", " ", "=", " ", 
        RowBox[{"spectrum", " ", "+", 
         RowBox[{
          RowBox[{"gridweights", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}], "*", 
          RowBox[{"Qset", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j", ",", "k", ",", "All"}], 
           "\[RightDoubleBracket]"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "gridweights"}], ")"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "gridweights"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "gridweights"}], ")"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "spectrum", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.814263097565496*^9, 3.814263100821383*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b36965ea-d38f-4d59-b223-0840122d5a93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromXtoSpectrum2", "[", 
   RowBox[{"X_", ",", "Qset_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gridweights", ",", "standardD", ",", "spectrum", ",", "griddistance"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"spectrum", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
          "X", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         ")"}], "*", 
        RowBox[{"Qset", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             FractionBox["1", "8"]], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             FractionBox["1", "10"]], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             FractionBox["1", "10"]], "]"}], "+", "1"}], ",", "All"}], 
         "\[RightDoubleBracket]"}]}], " ", "+", 
       RowBox[{
        RowBox[{"X", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        RowBox[{"Qset", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1", ",", "1", ",", "All"}], 
         "\[RightDoubleBracket]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "spectrum", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.814262957483354*^9, 3.814263114526353*^9}, {
  3.8142631578961287`*^9, 3.8142631945270567`*^9}, {3.8142635239917727`*^9, 
  3.814263540374486*^9}, {3.814263589368655*^9, 3.814263597283312*^9}, {
  3.814263635400105*^9, 3.814263664760144*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"2938d90f-6d0a-45a8-a58e-bda930cb6dad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fromSpetrumtoY", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rescaleddata", ",", "peaks", ",", "prominences", ",", "class", ",", 
      "fitness", ",", "boundary1", ",", "boundary2", ",", "fitness1", ",", 
      "fitness2", ",", "function", ",", "figure"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rescaleddata", " ", "=", " ", 
      RowBox[{"Rescale", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"peaks", " ", "=", " ", 
      RowBox[{"FindPeaks", "[", "rescaleddata", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"peaks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], " ", "=", " ", 
      RowBox[{"Round", "[", 
       RowBox[{"peaks", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], " ", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"prominences", " ", "=", " ", 
      RowBox[{"Prominence", "[", 
       RowBox[{"wavelength", ",", "rescaleddata", ",", "peaks"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"peaks", " ", "=", " ", 
      RowBox[{"peaks", "\[LeftDoubleBracket]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"prominences", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", ">", "0.01"}], "&"}], ")"}]}]}], "]"}], "]"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prominences", " ", "=", " ", 
      RowBox[{"prominences", "\[LeftDoubleBracket]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"prominences", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", ">", "0.01"}], "&"}], ")"}]}]}], "]"}], "]"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[Equal]", "0"}], 
       ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "False"}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[Equal]", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"class", " ", "=", " ", 
         RowBox[{"Ceiling", "[", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"wavelength", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
               "peaks", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", "-",
              " ", 
             RowBox[{"Min", "[", "wavelength", "]"}]}], ")"}], "0.05"], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fitness", " ", "=", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"Total", "[", "rescaleddata", "]"}]], 
          RowBox[{"Total", "[", 
           RowBox[{"rescaleddata", "\[LeftDoubleBracket]", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "wavelength", "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "peaks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ",
                   "-", "0.05"}], "<", 
                 RowBox[{
                 "wavelength", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}]}], "&&", 
                RowBox[{
                 RowBox[{
                 "wavelength", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}], "<", 
                 RowBox[{
                  RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "peaks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ",
                   "+", "0.05"}]}]}], "&"}]}], "]"}], 
            "\[RightDoubleBracket]"}], "]"}]}]}]}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[GreaterEqual]", 
        "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"peaks", " ", "=", " ", 
         RowBox[{"peaks", "\[LeftDoubleBracket]", 
          RowBox[{"Ordering", "[", 
           RowBox[{"prominences", ",", 
            RowBox[{"-", "2"}]}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"prominences", " ", "=", " ", 
         RowBox[{"prominences", "\[LeftDoubleBracket]", 
          RowBox[{"Ordering", "[", 
           RowBox[{"prominences", ",", 
            RowBox[{"-", "2"}]}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"class", " ", "=", 
         RowBox[{"Ceiling", "[", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"wavelength", "\[LeftDoubleBracket]", 
              RowBox[{"peaks", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
              "\[RightDoubleBracket]"}], " ", "-", " ", 
             RowBox[{"Min", "[", "wavelength", "]"}]}], ")"}], "0.05"], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"boundary1", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "wavelength", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "-", "0.05"}], "<", 
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}]}], "&&", 
             RowBox[{
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}], "<", 
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "+", "0.05"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"boundary2", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "wavelength", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "-", "0.05"}], "<", 
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}]}], "&&", 
             RowBox[{
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}], "<", 
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "+", "0.05"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fitness1", " ", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"Total", "[", 
            RowBox[{"rescaleddata", "\[LeftDoubleBracket]", 
             RowBox[{"Union", "[", 
              RowBox[{"boundary1", ",", "boundary2"}], "]"}], 
             "\[RightDoubleBracket]"}], "]"}]}], 
          RowBox[{"Total", "[", "rescaleddata", "]"}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fitness2", "=", " ", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"Total", "[", 
            RowBox[{
            "rescaleddata", "\[LeftDoubleBracket]", "boundary2", 
             "\[RightDoubleBracket]"}], "]"}]}], 
          RowBox[{"Total", "[", "rescaleddata", "]"}]]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"function", " ", "=", " ", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"wavelength", ",", "rescaleddata"}], "}"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"figure", " ", "=", " ", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"wavelength", ",", "rescaleddata"}], "}"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "i", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", "0"}], "}"}], ",", "i"}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                   RowBox[{"peaks", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"peaks", "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[Equal]", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "figure", ",", "fitness", ",", "class"}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[GreaterEqual]", 
        "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "figure", ",", 
          RowBox[{"{", 
           RowBox[{"fitness1", ",", "fitness2"}], "}"}], ",", "class"}], 
         "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Prominence", "[", 
   RowBox[{"wavelength_", ",", "rescaleddata_", ",", "peaks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "function", ",", "plot", ",", "prominences", ",", "solutions", ",", 
      "leftBasis", ",", "rightBasis", ",", "leftwavelengths", ",", 
      "rightwavelengths", ",", "leftHeight", ",", "rightHeight", ",", 
      "prominence"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"function", " ", "=", " ", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"wavelength", ",", "rescaleddata"}], "}"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"prominences", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"plot", " ", "=", " ", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"function", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "wavelength", "]"}], ",", 
              RowBox[{"Max", "[", "wavelength", "]"}]}], "}"}], ",", 
            RowBox[{"Mesh", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "peaks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "}"}], "}"}]}], ",", 
            RowBox[{"MeshFunctions", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"#2", "&"}], "}"}]}], ",", 
            RowBox[{"MeshStyle", "\[Rule]", 
             RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotPoints", "\[Rule]", "10000"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"solutions", "=", 
          RowBox[{"Sort", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Normal", "@", "plot"}], ",", 
             RowBox[{
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"x_", ",", "y_"}], "}"}], "]"}], "\[Rule]", "x"}], 
             ",", "Infinity"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"solutions", " ", "=", " ", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"solutions", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"x", " ", "-", 
                RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "peaks", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
               "]"}], "\[LessEqual]", "0.01"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"leftBasis", " ", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Max", "[", " ", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"solutions", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", ">", 
                 RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{
                   "peaks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}]}]}],
               "]"}], "]"}], ",", 
            RowBox[{"Min", "[", "wavelength", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rightBasis", " ", "=", " ", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"solutions", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "<", 
                 RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{
                   "peaks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}]}]}],
               "]"}], "]"}], ",", 
            RowBox[{"Max", "[", "wavelength", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"leftwavelengths", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"wavelength", ",", 
            RowBox[{
             RowBox[{"leftBasis", "\[LessEqual]", "#", "\[LessEqual]", 
              RowBox[{"wavelength", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "peaks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rightwavelengths", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"wavelength", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"wavelength", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "peaks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
              "\[LessEqual]", "#", "\[LessEqual]", "rightBasis"}], "&"}]}], 
           "]"}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{"leftHeight", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"function", "[", "leftwavelengths", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rightHeight", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"function", "[", "rightwavelengths", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prominence", " ", "=", " ", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "peaks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
             "-", " ", "leftHeight"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "peaks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
             "-", " ", "rightHeight"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "peaks", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prominences", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.814170797313128*^9, {3.814171223088298*^9, 3.81417122437014*^9}, {
   3.814176824496523*^9, 3.8141768310123587`*^9}, {3.814176963900977*^9, 
   3.814176972263845*^9}, {3.8142083682993236`*^9, 3.8142084145411577`*^9}, {
   3.814255363565926*^9, 3.814255370901895*^9}, {3.814255787989859*^9, 
   3.81425581470287*^9}, {3.814255977901678*^9, 3.814255981973424*^9}, {
   3.814257891798563*^9, 3.814257915823564*^9}, {3.82046162492859*^9, 
   3.8204616392954187`*^9}, 3.8223194128816557`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"fbeb9c1b-2b5d-4233-a67d-dc7520ceccd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ObjectiveFunction2", "[", 
   RowBox[{"X_", ",", "Qset_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "Y", ",", "results", ",", "XNew", ",", "YNew", ",", 
      "figures"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fromXtoSpectrum2", "[", 
         RowBox[{
          RowBox[{"X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           ",", "Qset"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dimensions", "@", "X"}], ")"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fromSpetrumtoY", "[", 
         RowBox[{
         "data", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
           "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
          "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"results", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{"100", "*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{"10000", "*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
           "]"}]}], "*)"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XNew", " ", "=", " ", 
      RowBox[{"results", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YNew", " ", "=", " ", 
      RowBox[{
       RowBox[{"results", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{
         RowBox[{"-", "2"}], ";;"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"figures", " ", "=", " ", 
      RowBox[{
       RowBox[{"results", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "3"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"XNew", ",", "YNew", ",", "figures"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8141777376075172`*^9, 3.8141778090164433`*^9}, {
   3.8141810349197197`*^9, 3.8141810486087093`*^9}, {3.814182344151513*^9, 
   3.814182400101822*^9}, 3.814183622108159*^9, {3.814256382327455*^9, 
   3.814256389192567*^9}, {3.814256445815024*^9, 3.8142564599761963`*^9}, 
   3.8142632726125174`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"4f79cbdc-f42e-4149-86ea-49e21191d064"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run tests", "Section",
 CellChangeTimes->{{3.8142734695936317`*^9, 
  3.814273472473967*^9}},ExpressionUUID->"2cadae6f-cd35-4099-8a34-\
085c94fd7775"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomseed", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "randomseed", "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.8376966576902084`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"384c949a-c509-4136-b380-47624f16cbd8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"shapes", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "20", ",", "60", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "0.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3", ",", "0.2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomshapes", " ", "=", " ", "shapes"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wavelength", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.4", ",", "0.9", ",", 
       FractionBox["0.4", "999"]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"9385949c-8510-41f9-86b8-911de6fd8c6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Qset", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Qset.mx\>\""}], 
    "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Read", " ", "in", " ", "the", " ", "spectral", " ", "data", " ", "of", 
    " ", "Au", " ", "nanostructures"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.813946160363731*^9, 3.81394621735143*^9, {3.813946281710989*^9, 
   3.8139463564260597`*^9}, {3.813946475437609*^9, 3.813946504795007*^9}, {
   3.8139469249672766`*^9, 3.813946943719988*^9}, 3.8139469959774885`*^9, {
   3.8139470427453084`*^9, 3.8139473169822693`*^9}, {3.813947364131009*^9, 
   3.81394744742045*^9}, {3.8139476027334557`*^9, 3.8139476110856476`*^9}, {
   3.8139476914720864`*^9, 3.8139476944593763`*^9}, {3.813947734076022*^9, 
   3.813947760446555*^9}, {3.81394796817122*^9, 3.813947968522847*^9}, {
   3.813948063797364*^9, 3.8139480647568417`*^9}, {3.8139481167783937`*^9, 
   3.81394828838587*^9}, {3.8139483361384315`*^9, 3.813948376298382*^9}, {
   3.8139484434096427`*^9, 3.813948496602287*^9}, {3.8139485563050127`*^9, 
   3.813948568047907*^9}, {3.813948621711732*^9, 3.8139486740409775`*^9}, {
   3.8139487059076333`*^9, 3.813948707213517*^9}, {3.81395000713811*^9, 
   3.8139500090664735`*^9}, {3.814012461919744*^9, 3.814012527721464*^9}, {
   3.814012561860445*^9, 3.8140125971476593`*^9}, {3.814017430586113*^9, 
   3.814017449543023*^9}, 3.814017499607204*^9, {3.814106516964219*^9, 
   3.814106520633925*^9}, {3.814106660180436*^9, 3.814106663836843*^9}, {
   3.814126445601339*^9, 3.8141264457693768`*^9}, {3.8141266594551497`*^9, 
   3.8141267140149045`*^9}, {3.8141271848073893`*^9, 3.814127219241496*^9}, {
   3.814162492567008*^9, 3.814162493232128*^9}, {3.814162735863748*^9, 
   3.814162743932541*^9}, {3.814163718491027*^9, 3.814163718828598*^9}, {
   3.8141816896612463`*^9, 3.8141817118578463`*^9}, 3.8142576477397614`*^9, {
   3.814274111614461*^9, 3.814274117445602*^9}, {3.814274714362812*^9, 
   3.8142747168225937`*^9}, {3.8142756762804213`*^9, 
   3.8142756773752337`*^9}, {3.814275723500198*^9, 3.814275725510036*^9}, 
   3.820494620491028*^9, 3.820554193393125*^9, {3.82058585727734*^9, 
   3.820585868915496*^9}, {3.833775790262768*^9, 3.833775825087223*^9}, {
   3.833783517152811*^9, 3.8337835329170437`*^9}, {3.8376966253741493`*^9, 
   3.837696654249196*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"89d2d4d9-d061-4d35-9dbc-42bef7c98b88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"featureNum", " ", "=", " ", "4"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "feature", " ", "of", " ", "the", 
    " ", "input", " ", "space"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initialNum", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "initial", " ", "sampling", " ", "number"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"batchSizeC", " ", "=", " ", "10"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"crossover", "+", " ", "mutation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"batchSizeM", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", " ", "mutation", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"batchSizeR", " ", "=", " ", "3"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"random", " ", "sampling"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", " ", "=", " ", "0.08"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "standard", " ", "deviation", " ", "of", " ", "noise", " ", 
    "in", " ", "mutation"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mutationRate", " ", "=", " ", "0.4"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "probability", " ", "of", " ", "mutation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"initialNum", ",", "featureNum"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"ObjectiveFunction2", "[", 
    RowBox[{"X", ",", "Qset"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{
   "results", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", " ", "=", " ", 
   RowBox[{
   "results", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pool", " ", "=", " ", 
   RowBox[{"IntializePool", "[", 
    RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Initialpool", "=", "pool"}], ";"}]}], "Input",
 CellChangeTimes->{{3.814253010749196*^9, 3.814253010920369*^9}, {
  3.814255281899629*^9, 3.814255291882531*^9}, {3.814256226353723*^9, 
  3.814256226994844*^9}, {3.82056043236379*^9, 3.820560432706464*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"485d1540-b7a5-4074-84c8-dba5b33455b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MAPResults", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"pool", " ", "=", " ", "Initialpool"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Observations", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"Observations", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"X", ",", "Y", ",", "2"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", "count", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"poolSet", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"samplesInput", "=", " ", 
           RowBox[{"GenerateSamples", "[", 
            RowBox[{
            "pool", ",", "featureNum", ",", "sigma", ",", "mutationRate", ",", 
             RowBox[{"{", 
              RowBox[{"batchSizeC", ",", "batchSizeM", ",", "batchSizeR"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", ">", "1"}]}], "\[Rule]", "1"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", "<", "0"}]}], "\[Rule]", "0"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{"ObjectiveFunction2", "[", 
            RowBox[{"samplesInput", ",", "Qset"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"samples", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"samplesInput", ",", "sampleResult", ",", "2"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Observations", ",", "samples"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pool", "=", 
           RowBox[{"UpdatePool", "[", 
            RowBox[{"samples", ",", "pool"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "50"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Observations", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "Initialpool", "}"}], ",", "poolSet"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"count", ",", "16"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.813735455899255*^9, 3.813735536563998*^9}, {
   3.813736241904977*^9, 3.8137362458970957`*^9}, {3.813737040086611*^9, 
   3.8137370462785473`*^9}, {3.8137380115962095`*^9, 3.813738011925454*^9}, 
   3.8137386210546875`*^9, {3.8137386868587337`*^9, 3.8137386870174704`*^9}, {
   3.8137388627280855`*^9, 3.8137388629212923`*^9}, {3.8137392135541506`*^9, 
   3.813739226350148*^9}, {3.8137395325252695`*^9, 3.813739612464961*^9}, {
   3.8137398846190233`*^9, 3.8137399013042145`*^9}, {3.8137400278941383`*^9, 
   3.813740095460973*^9}, 3.81394434153244*^9, {3.814168447874517*^9, 
   3.8141684742515097`*^9}, {3.8141685056488037`*^9, 3.814168535273458*^9}, {
   3.81416861701902*^9, 3.8141686211764393`*^9}, {3.8141686597924347`*^9, 
   3.814168666721627*^9}, 3.8141825310767403`*^9, {3.814196569727558*^9, 
   3.814196574364094*^9}, {3.814196630021139*^9, 3.8141966685682354`*^9}, {
   3.814196701203045*^9, 3.8141967228607426`*^9}, {3.8141968385128555`*^9, 
   3.8141968491639233`*^9}, {3.8141969046727486`*^9, 3.814196928128914*^9}, {
   3.8141969833052197`*^9, 3.8141969999247723`*^9}, {3.814253003197847*^9, 
   3.81425300958921*^9}, {3.814255151642017*^9, 3.814255156746298*^9}, {
   3.814256014497525*^9, 3.8142560146648417`*^9}, {3.8142561466740217`*^9, 
   3.81425616150587*^9}, {3.814256201366672*^9, 3.8142562227042303`*^9}, {
   3.814256637091144*^9, 3.8142566424895573`*^9}, {3.814256751128944*^9, 
   3.81425675437589*^9}, 3.814256797520667*^9, {3.8142638635537367`*^9, 
   3.814263886307807*^9}, 3.8142639741271057`*^9, {3.814264045936754*^9, 
   3.814264046776643*^9}, {3.814291316619193*^9, 3.8142913166743727`*^9}, {
   3.8205604346370087`*^9, 3.820560439904813*^9}, {3.8317255675267897`*^9, 
   3.831725570936308*^9}, {3.8317840991683273`*^9, 3.831784161464508*^9}, {
   3.831784465612417*^9, 3.83178447002383*^9}, 3.831786278725645*^9, {
   3.8317863884948387`*^9, 3.831786405661306*^9}, {3.8337835401564207`*^9, 
   3.8337835416181297`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f12bc893-543d-4d6e-a459-b14aecd7998a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomResults", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"pool", " ", "=", " ", "Initialpool"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Observations", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"Observations", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"X", ",", "Y", ",", "2"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", 
       RowBox[{"100", "*", "count"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"poolSet", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"samplesInput", "=", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"{", 
                 RowBox[{"batchSizeC", ",", "batchSizeM", ",", "batchSizeR"}],
                  "}"}], "]"}], ",", "featureNum"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", ">", "1"}]}], "\[Rule]", "1"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", "<", "0"}]}], "\[Rule]", "0"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{"ObjectiveFunction2", "[", 
            RowBox[{"samplesInput", ",", "Qset"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"samples", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"samplesInput", ",", "sampleResult", ",", "2"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Observations", ",", "samples"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pool", "=", 
           RowBox[{"UpdatePool", "[", 
            RowBox[{"samples", ",", "pool"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "50"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Observations", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "Initialpool", "}"}], ",", "poolSet"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"count", ",", "16"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.814196735578306*^9, 3.814196745853159*^9}, {
   3.814196864643983*^9, 3.814196900472229*^9}, {3.81419709110468*^9, 
   3.8141971047368684`*^9}, {3.814256016809679*^9, 3.814256028601309*^9}, {
   3.814264050834564*^9, 3.814264054459565*^9}, {3.814264092969966*^9, 
   3.8142641021521063`*^9}, 3.8142913204581614`*^9, {3.8317841129540043`*^9, 
   3.831784133668139*^9}, {3.8317842207839212`*^9, 3.831784227687291*^9}, {
   3.8317864099472437`*^9, 3.831786410338768*^9}, 3.833783549592087*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"c67b06ec-2684-471d-b6e9-6b04e2956f15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<MAPResults\>\"", 
     "<>", "\"\<.mx\>\""}], ",", "MAPResults"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<RandomResults\>\"", 
     "<>", "\"\<.mx\>\""}], ",", "RandomResults"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8142498444713955`*^9, 3.8142498589674735`*^9}, {
  3.814249920733098*^9, 3.8142499332061033`*^9}, {3.8142500487057323`*^9, 
  3.8142500491777925`*^9}, {3.814264647830132*^9, 3.814264703542694*^9}, {
  3.8142686980925083`*^9, 3.814268701323354*^9}, {3.815573725217862*^9, 
  3.8155737279373827`*^9}, {3.820461902224124*^9, 3.820461903424183*^9}, {
  3.8204948272793922`*^9, 3.8204948286393723`*^9}, {3.837696689697913*^9, 
  3.83769669067235*^9}},ExpressionUUID->"5edc334f-12a7-474b-bb0b-\
f5c35e9e5370"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MAPResultsTotal", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<MAPResults\>\"", 
     "<>", "\"\<.mx\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomResultsTotal", " ", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<RandomResults\>\"", 
     "<>", "\"\<.mx\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MAPResults", " ", "=", " ", 
   RowBox[{"MAPResultsTotal", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "All"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomResults", "=", 
   RowBox[{"RandomResultsTotal", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "All"}], "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.814252852926065*^9, 3.814252871921379*^9}, {
   3.814264712588896*^9, 3.8142647185285807`*^9}, {3.814369137534196*^9, 
   3.814369153998219*^9}, {3.820473367969405*^9, 3.820473381504431*^9}, {
   3.8204948331189137`*^9, 3.820494834119543*^9}, {3.831784238773303*^9, 
   3.831784269455283*^9}, 3.831784591419492*^9, {3.837696693754574*^9, 
   3.837696695257201*^9}},ExpressionUUID->"6125f4c2-6ba4-4fec-8f42-\
9ae487c2c517"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mean1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "MAPResults", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "MAPResults", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{
     "MAPResults", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "MAPResults", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"mean1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples1MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"mean1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples1STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"mean1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8142463623537464`*^9, 3.8142464583444567`*^9}, {
   3.8142465714976254`*^9, 3.8142466680319366`*^9}, {3.814246703354166*^9, 
   3.8142467135013847`*^9}, {3.814247105074396*^9, 3.8142471186241193`*^9}, {
   3.814247379994754*^9, 3.814247380085315*^9}, {3.8142685464328117`*^9, 
   3.8142685469358997`*^9}, {3.814270166327169*^9, 3.814270200483539*^9}, {
   3.814270328703535*^9, 3.8142703315839233`*^9}, {3.814270568680427*^9, 
   3.814270571909103*^9}, {3.81427063168044*^9, 3.814270634733197*^9}, {
   3.814271033680892*^9, 3.814271035662335*^9}, {3.814271081934309*^9, 
   3.8142711141601143`*^9}, {3.814369695208453*^9, 3.814369708218985*^9}, 
   3.8322373723351154`*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"a4064425-bc41-4d7c-b0fc-ec44cf96664f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "8"}], "}"}]], "Output",
 CellChangeTimes->{3.832595849377677*^9, 3.833785421918375*^9, 
  3.833785939205134*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"73480002-7c38-4810-99a9-bc859bf290e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mean2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "RandomResults", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "RandomResults", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{
     "MAPResults", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "MAPResults", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples2", " ", "=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"mean2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples2MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"mean2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples2STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"mean2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.814246467303467*^9, 3.81424646819079*^9}, {
   3.814246586095786*^9, 3.814246596188418*^9}, {3.8142466349922495`*^9, 
   3.814246714827592*^9}, {3.8142471458387957`*^9, 3.814247162614313*^9}, 
   3.8142473449602566`*^9, {3.8142473823914423`*^9, 3.814247382470394*^9}, {
   3.814268552150168*^9, 3.814268552501821*^9}, {3.814270170631143*^9, 
   3.814270178958034*^9}, {3.814270336397154*^9, 3.814270341960452*^9}, {
   3.814270583287302*^9, 3.8142705941731586`*^9}, {3.814271047713738*^9, 
   3.814271053321404*^9}, {3.8142710836958933`*^9, 3.814271083784417*^9}, {
   3.814271119378577*^9, 3.81427112210157*^9}, 3.814369722777361*^9, {
   3.814450499244669*^9, 3.814450502938875*^9}, 3.832237367597*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"ffee5c99-45d8-4d6c-802c-4ea69732e67d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "8"}], "}"}]], "Output",
 CellChangeTimes->{3.832595849545237*^9, 3.833785422173123*^9, 
  3.83378593941649*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"e33889ba-4a0e-4317-ab21-d27491b8cedf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"l1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{
         "MAPResults", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"l1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl1MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"l1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl1STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"l1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{
         "RandomResults", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"l2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl2MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"l2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl2STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"l2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8144504925571127`*^9, 3.814450748887911*^9}, {
  3.814450779562261*^9, 3.814450801510825*^9}, {3.814452282463675*^9, 
  3.814452282778357*^9}, {3.83223736094734*^9, 3.8322373625627885`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"1a51f26b-fa62-4cfd-80f5-7db1bc4e3589"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spectrums", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"wavelength", ",", 
        RowBox[{"Rescale", "[", 
         RowBox[{"fromXtoSpectrum2", "[", 
          RowBox[{"i", ",", "Qset"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "MAPResults", "\[LeftDoubleBracket]", "8", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], ",", 
          "Last"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", "4"}]}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineStyle", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", " ", "Gray", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lines", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.4", "+", 
           RowBox[{"0.05", "i"}]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.4", "+", 
           RowBox[{"0.05", "i"}]}], ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8143692114298964`*^9, 3.814369335740267*^9}, {
   3.81436943839613*^9, 3.814369568628227*^9}, {3.814369800486622*^9, 
   3.8143698622178183`*^9}, {3.814369915706031*^9, 3.81436991719071*^9}, {
   3.814370136594174*^9, 3.814370185675345*^9}, {3.814370543572723*^9, 
   3.814370561676425*^9}, {3.8143706015183992`*^9, 3.814370707926787*^9}, {
   3.814370845026794*^9, 3.814370850248931*^9}, {3.8143708821029587`*^9, 
   3.814370882846354*^9}, {3.814370914282984*^9, 3.8143709153678007`*^9}, {
   3.814370982287776*^9, 3.81437110399419*^9}, {3.814371198747428*^9, 
   3.814371215829175*^9}, {3.814371294149416*^9, 3.8143713281107073`*^9}, {
   3.814371463753457*^9, 3.814371468700294*^9}, {3.81437159505155*^9, 
   3.8143715970748663`*^9}, 3.814371688817659*^9, {3.814371876637809*^9, 
   3.814372025728565*^9}, {3.814372097714959*^9, 3.814372107995229*^9}, {
   3.814372231077108*^9, 3.814372240643372*^9}, {3.814372301085338*^9, 
   3.814372360792643*^9}, {3.814372414038389*^9, 3.814372445387947*^9}, 
   3.8143725275726013`*^9, {3.814372736584511*^9, 3.814372744976487*^9}, 
   3.814373757126914*^9, 3.814537240934669*^9, {3.814537354696845*^9, 
   3.8145373825856743`*^9}, {3.81453741365506*^9, 3.81453741525805*^9}, {
   3.814537462263647*^9, 3.814537469461802*^9}, {3.814538169990159*^9, 
   3.814538249115704*^9}, {3.814538356456547*^9, 3.81453836314851*^9}, {
   3.81453840326766*^9, 3.814538485423223*^9}, {3.82047379042089*^9, 
   3.820473841539468*^9}, {3.820494705450785*^9, 3.8204947179434495`*^9}, {
   3.820581624675076*^9, 3.820581643641747*^9}, {3.820581929829782*^9, 
   3.82058193041674*^9}, {3.820582001348559*^9, 3.820582001888446*^9}, {
   3.8317847245424643`*^9, 3.831784725189082*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"34f2b7ed-9d9e-4921-9d90-10eb4740ca82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", " ", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"spectrums", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     FractionBox["1", "GoldenRatio"]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", "lineStyle", "]"}], ",", "lines"}], "}"}]}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"255", "/", "255"}], ",", 
         RowBox[{"80", "/", "255"}], ",", 
         RowBox[{"201", "/", "255"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"255", "/", "255"}], ",", 
         RowBox[{"204", "/", "255"}], ",", 
         RowBox[{"0", "/", "255"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"0", "/", "255"}], ",", 
         RowBox[{"255", "/", "255"}], ",", 
         RowBox[{"0", "/", "255"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"0", "/", "255"}], ",", 
         RowBox[{"0", "/", "255"}], ",", 
         RowBox[{"255", "/", "255"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"0", "/", "255"}], ",", 
         RowBox[{"204", "/", "255"}], ",", 
         RowBox[{"255", "/", "255"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"43", "/", "255"}], ",", 
         RowBox[{"0", "/", "255"}], ",", 
         RowBox[{"0", "/", "255"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"255", "/", "255"}], ",", 
         RowBox[{"128", "/", "255"}], ",", 
         RowBox[{"128", "/", "255"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "[", "wavelength", "]"}], ",", 
         RowBox[{"Max", "[", "wavelength", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Wavelength (\[Mu]m)\>\"", ",", "\"\<Extinction\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
         RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<UV-Vis_example.svg\>\""}], ",", "f", ",", 
   RowBox[{"ImageResolution", "->", "500"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8205820033938828`*^9, 3.820582031659399*^9}, {
  3.820582157346251*^9, 3.8205821578141747`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"72f9cc98-222c-4051-b8ee-6af439940b5f"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwsXAlYjN8XLgoRFZWKUki2ECGS9xdKSYiiJClCSCIU0kaEiBaV0qQ9olUL
0SIqisrS3sw3+0w1oSKS/53+ejyP5z4z83333nPuOe977jlHy9l9u8soCQkJ
hpSEhPj/mGjxXzOCWnO6baqYGB1jLDGP1oxt785v8nrFxLEY/sHClGaE1Zzp
Cy1l4lPM7dqNmc24l5c8gfacibX3Vul/yW1G/uHxWcmFTKTeY8QcLG6GXmWK
5IM8JuRjgyUHSpvhmHZBMyKLCe9YvcOX3zTjem/IQt9HTFCxzXWKdc2QvtBm
si+NCYs4/+VJH5sxbd6RGwZJTOTFzYtd1krGnw00x9GYUL9fP6qC0YwdTpu0
3t9jIui+t+t2XjMmp9OehNxlQnRf6wOjpxlp142E68OY2BVfvcKjvxlO3Jl9
X28yURrvEScx1IyQmO2Cu9eYmEdTlQod1QKvwLru5UFM3KGVHZkh04KTflEa
7/yZ+E1zrX8s14Ia95zY3T5MHEhQMFir3IL3izWuMryYqE0oul87vQV199sl
nDyZWPHASdphVguU732b0+zORPwDmWNd81rQP8pRbdNRJsYlZjecX9KC4rzZ
v3MPMuGRaLdqwsoWZN804Ss7M9GSKEmLMWqBrnuF1CkHJtYnpY+Zv6EF3vo0
typbJh4lWbkVbWoB63n7+qnWTCglDzaaWbWghOOT6riViYvJCaubdrXAOjSg
MGETE9xk84RDe1vw9W53ZLsJE9tSvo79caAFwtZS5ynGTBSlRB8POtqCa6uH
DdevYWJmqvEnpZMt0LqTus5tJRPXU/mGyV4t+F36IvL2Uib6Um8/0PdtwaFk
E9ssXSYc0lbJvLrcgnz1tanVc5l4ncZw33GjBcvGZSS2z2JicXrwZ+pOCxav
v+7WpcFEVLqe0cnoFvx4xJw9oMqEREYzWXELWmbl838pMnEkw3/87ZQWaAdJ
tv2SY6IhY56HZmYL5ubUTBsYz4Thw/ovT3JboBc0ubpLmomkh95rUdyCUHrL
6E4JJiY+0kquK23BnXjtrne/KZx5VD1h75sWBCb0JTwdoND5yONkd20L8l6Z
m8R+pWCWqdp84WMLTnHnDPh0UcjOLINsawvkeSEf7bkU1B67ptxjtMDiSoDE
CopC4GOFiQt4LZg3dlGHbDuFrsdFp4p7WjDrhvtzxhcKNk+cWsz7W2AXlDT9
aQOFF09kjJt/t2DAZb7f9VoKOlnZqYdHtRL92Ht4fxWF0Cy7ST/HtYIdcX8n
KigMZkmeviLXCt/XG99pvqDgnJ3eqqzcCvm4gk0yRRTeZlutS5neiqfBFjt+
5VLQzxlMWz6rFXeH9h3qf0whLidBrnJeKz672IwbSqcwJtf8jPWSVsQsDyqQ
S6bgnvu1jbmiFVJt2wb0aBSacqPXnzJqhUH1ZNMD9ygY5xlnjNrQit1u8+am
RVLIyOPL39nUilCDb+p/b1OYnH/7rJZVK/7E1KQdCaFwIX9VR9auVlRIyW/q
ukqBlc/Y8N/eVshwZgRevkTB8mnww/cHWtH7eNenlX4Unj7Vm+x4tBX33yuW
S12gMKOg2avHoxXLC/Nqus9SuFrg3+nj1YrWpvATfacofC2YZzrRtxX5CZOX
q52gsLuw/lHs5VZ4OvtG7ztGoaLQe8rCG614vrczrOowhYVFWuee3WnFjHNF
e6xcKEQUVdM3Rbdi1cmnjYNOFIaLPDa2xLciUcq3qXQvhUPFqkTCrZAQPduU
bE/hQ3GZ4uCjVvB6lMan2FJY9cz1/NXcVvwqWz5QZkPhwTMFampxKz5qv+r5
sZ3ChOdFZqmlRD5Nro2m2yh4Pnd6suJNKzZHvg/MtKTQ/lxG+XVtK7Q17nfO
t6BgWpJ9weYjmY/uxdclZhSelNgxWS2tmOWvouJiSkHlheQmT0Yr/L8o5c3Y
QMH/RXrWaF4rurs1znUZUxC8sJoa1tOKcQFt5jWgsOPloM/M/la4Wf0YVWhE
4fnLBFb271YUqqpczjOkMLvU3MJ4VBsuR3GfvFhF4Wbp1+wP49pw6vqk/Z9W
UhgojVbZJ9cGjazlF38sp+BYZuwrUmrDzFfSjFn6FKrK+OyL09ugeVnnqN1S
CnrltzdPmtWGJ1nrhyKXUIgpX5UbN68NnmUSnq2LKIyuYKjqLmlD5qjNKdq6
FI5VBPs9X9GG6JlGGzwXUPhUoce1MGrDU8XzPyvnUVj7qtmydX0bgt89clOd
SyH1lX/ekU1tuGXkvcVtDgX5ynnTfm1rg4X9FZPS2RS8K+v9g3e1YY3qxT/y
syhQld48lb1tYB2R0tqrRcHitdbWtANtqFhftjtlBoW819X5K4+2weGuvQ1P
nYL6G4/pbzzasMTu3LOZ0ykEvVEN3OnVhhcXXq20VqMgeiNecBuu9tM9z6tQ
sK1y3Xb6chsmFpxRv6tMoaxKoUDqRhs+5C1sS1akML+6SD38ThusqHT7lMkU
wqqdLs2KbsPkZRGmd+UpDFXLCHPi2xAWE7Hx7CQKLjXiA9wGG9ntMiayFOpq
7IhGt6H5vMeKvzIUVryVnOGU24aEthjvpLEUaG/TL/cWtWH+zNM+y6QpjHtn
1eVb2oYhpHZljKLg8W5wu9ybNoTOa/KQkaDQ8k7skNqw+Aq3wPIPA+trzTUX
fWzDf92bx5/9xcCj2q9BJS1tuGe86ETQDwaU6qK7NzPasP3ewzU+fQxcrDO2
buMSeSqwy/d8ZYBbxy8+2tMG5We/bOb0MLDt/W2t331t2PBE1rxVwEDR+1VX
r/1ug6K0oegCl4GZxPuqjmpHWGPyPVkWA9c/BNukj2tHo55bwnU6A30f9J4b
yLWDsyJ7x+82Bhzqm2dWKbWjbfC2tEMzA6/F4p3ejje3F4/P+cTA4oZ5vZyZ
7ShQysj7Xc9AVEP9zjPz2vE8VsvWsI4ByUbvEukl7RAYPd14soaBI41asyNW
tGO7/NXPCa8ZaGysvjbbqB2SCwp2vS1nYM1Hj6+569sxIXm/Ru8LBpI/qtqu
39QOv4hMH4VnDEz6VPaiYVs7PKbkVy0pYODsJ1dt513t6F0es31rLgP0Two3
vjq0Y5Kiz/HjTxgw+1z0ze9AO1pe+bjfeshAzmcnO/mj7Tjk+DwtN5UBtS8y
BHK0Q/vLfre2RAYCv2TPWezVjibm7VkTaAx0fbELeXGxHSXn1JyNYxmwaZLs
s7zcjqJPwW/8ohh40ZS+u/16O7IWHftWE86ATrNV2bE77bjy0tJf6zYDoc2D
OkNR7VAvL54cFMLAYHPCzevx7bA/AZNfwQw4E2+kltKOmVKHC3yDGHjb8tU+
41E7bAtKx6oEMqDfGk1OcDs6Kz59fOXLQFyr8bzqonbc27+s5MoFBsa08W/Z
lrbj1AcXR2dvBtzbbg9wX7dj44ZBu51nGGhqW+VwtrYdwz+9LVxOMWDczqgY
87Ed3nM9G0JPMJDRHjw/sqUd8bKeIS1uDEzp0LutzWjHtk7paRuOMnCho/lH
HrcdJ1vyVd8fZoDd4b93Q087ulfKz/U5yMCWznmVjX3tiNNLYG09wEBBZ/2C
/b/bcUyyv9vMmQFNuvedb5IdWMW4S7nuY+AqXWvQf1wHesYrO+XtZeAbvdpR
Qa4Dxwp/j53vwMBuhsdrmlIHVKwzT7+zZ+CV2FxN70Duf9PV4nYzsJAqC3s5
swNfo8cMxNoxEEm5/toyrwN+7p2D72wZGKYUnDoWd2BCvaryIjI+xCx647ai
A8Z1cw3LdjHwgem06M+aDlSd8bW7QsarWDIRN9Z3YFtLqJM/GT8g1nnaJvK8
cR/WZ5HxBLad88NtHRivkNWrSJ7nyZasXr2rA2Gjk2yzyLidnb64xqEDb0Ua
xwLJfEw5VpF2Bzpgzw6bdovM9wlncIh3pAOi76d3fSTrUeEm7Pfy6MCyBQby
1mS9/lzzmrFeHfgYY7lCzpEBAffrkrsXO3B++7ziMU4M7OBF351zuQNfnNbe
MNzPwHOe8XD+9Q7cbPob+9iFAW0+/4DJnQ5Yvaa37SPyucm//fZjVAdqVluv
2UHk94O/aumB+A4kmtQ+DDrOwD4BI+p7cgeuDryYNuTBQLUg+G/Aow7oOMRe
yDvNwFKh3sHJuR2YF9z0IovoU4ywmVisDuyy3dj41YcBqS7/ZXqlHVC24/7y
CmCAgOeY0tcdSO8Jm2d2hYHPXfUS22o78Gr0nqNONxhY2+19qLOxA1MCt7x7
Tc5DWrdW3fGWDljvOmd77i4D8j3V+sP0Diw62jPtYhwD3j0e90K45H3pRTM/
kvNIEWul3tMB/yGB18UMBixEZYcf9XXAcevt+b7ZDOSJXN8b/u5Awo1n65sK
GVDvVSAmuhO/73t9uF7KQFBvUezucZ3Q9PjSdq+KAVGv02jBpE6UdHM8xxN7
ZftV5oi3Uieu/81Paib2rUzsfqd3wuD2Dq8JTAbmf7NbGTWzE6dD6n4ndDEQ
9k3yvs68Tgx0LDeMH2Bg6Fu6VMHiTridiFonLUn8x3ero6YryPMWSmt8nkD8
x/fB+k9rOjFm+FrzlKkUVvYlGLisJ5+/N/AvnUn8R595fJ95J95dV9fqIP5Z
pv+r9KVtnfBTN6s8TvDByf7oY1N2dWKn+xtvT4JHWvuNGx84dGLh6H2bvhK8
s2FALOBOpJyfqsTdT+HRwG3CkDqRcbTcdtdJCso/Vo218ujEy1jrq+v9KVz8
wXCjn+2EbVOZcmYoBd6P4I/uFzsxzP1zJoLgzW0/9Qz/XuqEdsTQtOEsCsU/
xQaLfD8924tXRmEmOb0ad8h6euQldjZSuD44zz0zqhNFCydpm7Ep9ImXG9+J
rkVxu0t/UHD45b3mXXInZrzInlJK+MHrX1qJ9o868T4RFWaEbyz+LXbAnTiX
vrrNnvCXqN8eJ84VdYIWFVn/y5QJySFVYqE78WL1RmWdPYR/DJUZRb/uxHa7
/9QpDyYah1yT5tZ2or3ktJ3uVSbW/FGYUNjYiRa9VqPx8Uwk/xEDyk68vXjA
6NxTJiYNOzV9pndi0XHptxfrmDg7LIODXLLf1dl2qlwm6MPZyf3dncBuhz0W
EiyY/7WTvdxH1sP/baKsxkLOX8lTir87IbnOP/i8PgsTJT4RjafjUJTZ3Qtb
WVgnIWasdDD33UpWPcrCGQmfHU5jyTgs8Oq2Kyw8lKgfkz6eDsVowzqNJBY6
JbSLeyfSIdVUKxVQxoKipLebgQId+wq3FZ/tZMFMslbTT5GOvISWC3/+sOAj
qfXxzVQ6sn77t8irs5EtpiPT6GjTdXB6soYNjtg8adDRFR8Q/3kPG2rk9NzX
ouNg0bhZl3zY2DrKI4Ezm44/DOlz+ffZCBxVab1oLh0G/qFLD5eyUThKddyZ
BXS8G37REk2x0TXK7VnJIjpQniphJs2B1uiy49JL6Vi/zGnpibkc2IxWmmm5
nMy3SHJYbjMH10a7fgo3oMPsefzX2Sc4eDG65GqbIR2XEq3uPQrn4NtohTWz
QUfRZ93gpCIOdKRcREfX0RFWssl8fCcHe6SKHuSa0JH48oVrqxQXoVITd/42
o8N7A81LaQEXr6ScZNZvpqMsV1rqqRUXg1L5z69tpWPGaemYYi8udKVlTjRs
p2NUzI9yTRoXzoTtq+2kg9VVwWC+4SJSOpsgADoK3xd4/hZx8VZa+lr6HjpC
vajQvSo8/JW2M/rqSMcW9R0WUsY86I/J7DXYT8ff7ypFTFceDo+RTPI7SEfw
0vWi73d4iBtjs6vKlY5fkxijFj7nQSxdeTc6lr6UlAlk8zBm7J+SXSfIfnnn
KfdO4mM1OY3xp+iQPTXO+IgBH+5jk2dzz5D1UrJxPCc+EscOfll0jg72nw9w
vs5H01jL62d8yPx/7V9bl8eH7LiEtS/86Lgg9ylzVgcfxuPEBoOOSo9liXZj
BTg9zjzZ8godsbtuLju0RICMcXG2EdfoUPjRd2q9nQAd475OaA+hY1zQGW+2
vwCTZUxezr5N5LN6pt2GDAE2ykSfPBZO1rdp7NxdDQJckOnWzrtLx9gu/d+K
vwTIEtPlGDp41sVcTy0hRtznfTr0nqWMOm4mhOp4Pq4n0MG1lnH6cVwIy/FG
3xuS6ChlhmuMixAiYPztFLU0Iv8nD2yji4V4Ol7sYOn4YGsQltophHD8qokZ
j4m8x+akLJbqwowJIYQR0fGVefToorldsJ7AOLUqn46HyuVFNIsuXJ2wXMe/
kOzXG/kjgce7UDIhuKXqGR3ymnnWjaFdEK9W/iXR/43jtofkdGGOrJ6xbTkd
9gddVz9u7MJucrrjK8n8k5dxlvZ14ZZscyq3ig6rhRW6KordqJDVtV/8jujT
bE/+7mXd+CnrP+nsezoe5z34+sOqGwsnigEpHTFjHmp0uXfDaeK802M+07Fw
Hd9MP6QbERN95m5pJuf1VpFZbXo3aibWt0a00XFjqtdAbmU3hidq32rvJM8f
5T+fTe/G0kne67SZdJw/u6TE4Xc3Dk2q7T/GocOaRgWpKfUgdpJWeh6fji9J
3x1VFvXgw6TTe4a66LDLfKlpbdoDKblquQ29dKyhHiTUOPRglZx6xfXv5PtH
B4u9PHtwXM7jTOMAHWdPzNlqf60HD+TEBI4OW92elx7xPfgsp9ru/Iecp6RT
B17m9mCCvFtohgTBhbFPuje+6cF/8mXrv40W48wYWbmWHnjKKxEPw4DbwkUn
Vbp6kCbvmuE/nvjVHc7vD/3pQbt8iUP1RILTVZZ8kpgkgsLIHwMS60P1ueoi
mCq4vLJVZMAo5vx9DV0RzikUnaVNZeAwW1CRYSjCE3E4R43gFOFnm1vmIjDF
8E6D4GBPA+kPO0VQGQl4EFy4cVzgif0ibB5RaIK75sPP010E/8kOP8fMJfPj
fMrsPCdC/uTsh1sWENxrXPk8/7IIgsnSjpGLGEgaPWbvr1siaEyxm9yhx8D9
76HrsqNF2D4ls1J7OQMfm/ZO63ggwpUpYgNNcP25w9GXHorwfIrNwnxDsj+0
FLe0XBF6p6R3Dq1lIFp+srnlMxFmK/65s2EdA0fDEtvOlItgp2hlesOE4FrR
jua51SLcVBQHCAmPW/6l5+B7EcoVBx9N28yAXNz8YP1PIgwoWu7bv5WBunT2
k/AWERYoJUx5uJ3whL++ztc6Rdin1P/6mw3hSes8aCosEcKVzM+tJjj0p5Ke
6zqeCFVKcboBe8j71Vc+H98lwh+lrwRxk/0b+hXlKRJBT9kkXIHgyoW7+oYD
volwUDl6ox3B9c8/xHQb9IsQo9z9i+ZKcKnswQPRP0R4r2z8mHeMgV1Pap1T
B0UYPTXCaQnhEYn25jyX3yIYTOUrehGe4Zm/re/LkAjHphpVvSQ8xHmffZDE
sAgJU2+fH3uO8FoJRhxFxp+mshdtJbhyoYHdav+/IoxXWUVF+jGw7pGhfScZ
r1UJieggPEhi5K8Xp1QYZnMIzvz7WX0uh3yeqrJ8yO0a4X0fZRvDybhNJfhJ
PuFZm+M2SMiRsbxYnUMZaG1c82QXed8GVfGKCc6d7tbp8UcEb9XL1TcIDhWp
WobuI/N9LA43xjDAiYktmEPWQ4npx30G7PL5dyrJepXV/Jn7ExgY79k/ZPhT
BAu1T5EPkwhv0QxMvDoggp/avE3fCa98NnqnfkafCHlqPn9WE94ZfEjPIZ7s
L0+tPivgMeF1EU1vD/aKoD5N+0ANwbEzPk9a9Leb6Ns076mT8wmPOnVX75BQ
hKBptTV2BNfuK1h+KY7Is3ia1sUEwoOvCR410tgiiKad1uMTnnx7Z2mtOyXC
rOnVrCWER3M2LNOUIfphO109yquSgZ7hKq+jrSLcmO5hUUpw8MS6DZcjvohQ
Nr1yeOw7gqN/u36/3ChC/3TVnK3vGTCp/33CkOjjfHU3l7sNDMyKKnmYVyPC
XvUylU7C+yuiT1r1VooQpq70bg7BzYEzOuS6S0V4o+7qe7yNgYaTFeHpRP+H
1EuWPu1kQKGdHTL7qQhLNBQ4fyhyPlPHpe/JEuGAhku0CYcBmemisG0ZIkRr
FG0O4TNwJ3DP0HCiCHUaYoRFeMSV02EH40QYNcMpd3ovA3rLqkKCIkVYMSP/
4IHvDKR2363ZS87v0Rkyao8ILnd8GaovuiICbYZD7fdBMv/svU9X+onwcUa2
n+EfBirfZq428BJhnKa0fqAEhT9T5z/qJfbCSNOOWzOaQsx93/59h0Q4qZkZ
M3kshV2Hd0sG7xUhRVNyy+7xFCZcPFh82EaEFk0byQcTKbjztk6Q2CyCnNg8
y1PYkVXesWWdCOu1/hzSU6Tg2XFkho2BCF5aVkTCFBLO9xVMXiTCSDhcjUJs
6ISwK7NEYIjpsQaFeXP23MtVEUGMrrZpUVA1ufMscqIIm2Ym8O7OpjBrwK5j
ySgRLs7sv9epQ0F9nWOP/0APcmeab9VZQKFCb8vnYEEPuDPjRrkTXkHVNviZ
dfRg+qyv+U/1KBjMiG4qqe/BtlkmrsP6FMIWWVbxX/Xg8qzo6aYGFIqk7q1+
V9CDolnd70MID3HPWKTmktGDnlnGgZ/WUjCNDnPMi+3BzNkRK9TXUVj6X+Xn
Zzd7sHO2mJBSaFByuuTr14Prs43iHhHe8veR463RJ3tQOvv2tj4LCklRRRqb
9/egbzZ79JqtFOKPHrJzsO7BXO1VBYHbKTQWOh00NOmBg3bIkbeE56hPSTgm
WN6DO9oM9Sl2FJwnaoQdn9OD19rL63fvoRC8ul7inXIPfmkHX3rgSMFNN7dt
zNgeLJ7TvlLgTKHX67nlrB/dODBHjzBcCt+fsM9pc7sRNefyfW9X8jwXnesK
X7pBlNmq7BiFqQvPJQtfd0NSR4woKQgjP/cWPO2GGG1sO0XmZ7A8/FxKN47o
fDoadYbC/aSbT1dGdoOQwxl0bwpGbq0Xv1/uRqOOT4OOD4XL2oqKOae7MXZu
/WV3Pwr79+nFnXXpxpqRBVPIylpgbGbTjRNzvbuGgyjCt37PmWvSjeS5tfGm
1ygsaY8+PW15N5rnau24GUJBu3N4xxztbkwSww3C487/jBFtVurGunnigCeF
DJ19+uHS3TgzT3yAKRzW2s6VHOjCQ/F1TQyFgoj1zfc4XaCLwzdxRB/1x7Ye
+tIFxfmqV9YkEP167F5ytKoLZvPdVl9KorAuZ6tVZlEXfOaXdb9NpTDY631o
6cMu5MwXOyTCG9XKPkjEdYEz39Xa/jEFi44fDhq3uqC2oGRsYjbZv67ezlD/
LmxdoPBMkEdh/sBFnb2eXbi0wOX40kIK8hme0jcOdaFwgfiCgMynMGmTpn0X
uhaIARYFZj3jjebWLmgtdLoqU06hOnnYMmx9F8Te16qS7CerNtPHoAvXFsqI
oqoIDzaaWcjW7cKLhQ4P6G8ppDnVGdXP6sL3hdk2c9+T/ZVIljNV68KIeBvI
ean2GjZX6MIeXbvnBZ8osNymt1LjuhCqm+n+t4lCeazzGWXJLlTqSs7a2EZh
zxiNBMGgEIO6Np9vdlJ4ultroct3IRYtEl+oUfCQXJl/vVsI50V/1mhwKEyu
XP14L0+Iu4usel34FHy/tY1uZgrxdlFyYmYXed4FjkM/wb8Siwd39osobLLR
PPC4TQj9xWIETaHTfceL4WYhDi9OKLk0QKH0hZki44sQcYv7T7wbJDxcv3ri
ts9CNCw2J5CDQktF3HbTT0KMWRL3xV6Cic2Ot669+CjE6iVfryWOZuLy4EGH
XDJ2X2KyVjiGCdXL3SdnkO8nLYn+upTw9Ed9wpN/yLhpSXfSuYlMtK9eIG1G
3jcCn+WZ2LjJs36wSQhjvYgJ4xWZCFYK9Z3YKsQZ4o2spjKx7tbGAp92ITLE
14lqTCLf/ZomdCFGwovqTNywzXTeS9Y/ZSm7aa4WE3tDurVfcYTYuHTVjROz
mZhu2K3gIRDiwtIQFOowccj6dJ1jjxBZSxnf/s5nou3tltHXvwnBXro8ZeMi
JqaFr7PtHiD8Y1mw3S09Jl7Eq572/y3ElmXtsl/0yfodjIqMJboQsEyvVMOA
iYI9AaNnSnehYNnlUwcNmTi+dW6O3PguCJc1z3m8loliZ7nWH5O6oKmv29Jv
zMS3iqnhb6YQ/qHvH2JkwoQdTev7URXCP/Q//XfZjOyH9sRJDdMJ/9Cf1/fO
gokxfsW/OJpd+Kbvk6q4lQlhu8z7u7MJ/xCbq+1MrDnWSqvXIfxjufakJBsm
LG3lgvznE/6x3LtMaMvEsfeXw8MXduHV8lrPZXuYYA9rUD+IPv9crjX3vCMT
sorPLkUt6sLCFadby52Z0Fmz+s5+MnZaUX1z/EEmQpMuaJqS70cS67zdlYmb
55xNdBd0oWaFR3/0MSbchW+VxxA+NbyiMo3hzsSV2dEZJeR8LFupumfeKSY0
dmQoG2t04dBKN8IYmLia1HnCZ2oXYleWlRd6MyFnqvreUa4LH1YqnZHwYWKs
y8qNn8h+Shu4zjPzI/u3SE1U80uIVQYlbbcCmTj/IaFNl8jvuIFC6JcgJpwz
d5YLib4/MHBZP+MaE1WyWZ3D74X4YlA0cDCEiV3vlqxweyHEBDEdDGUifaOz
odFDIf5b5eQwEMaEdUvtgdORQniuypdfe5eJX51DOtP9hEgXX3fHMDE3z+vX
ysNCtIvD33FkfTk1Vu+3CDF5dTaxWEzQVlxI5C0TwnS1dMeeJCbUYpVdrk0V
goDn20mpTISsnSX7bFCAJ6szN3RlMHHRe8Ek/xYBWKslfy57zERMWiGdKhJA
xdDm4flsJnx1rAc5dwXYbJi+tyKPiTKrK7VhngL4G4oDUkxwA1obRFsFeEqs
1fZnTEQrt1yUnC+AwDDZK+YF+f1h2Y3vRwmgsWZwAVXGhPbH3zTHFj52rLHs
nFfJxJR8vVFFWXxcXZNwx6OKicGDK+mMy3w8X9NvUvSWiRMmkVl0Oz5615gP
Srwn5+3RF96zhXxoi91vAxNOA5eGvYd5EEc3Qj8xoeinc0jrPQ83jUymNDWR
890eV1d4n4dyo+jXM9qYaK6//maTGw8/jMQBXCYa9820Yq/mYcFaY90nFNnv
cuurkWN52Lc2gj7AZsJwifK1Y41chK/lh63lE3nS7U6dvs9F9VqjjUFdTNyR
neL08jAXf9be/lUrYuKVUP+E7VIuloKdqfSdyPNpTsmW3xwchFjATLgm+R7M
quAgBiGEITExrufmlevXOXgPxpuuISaWvG006tnOgdR/y8/rS7Ag4WmcwlHl
wOC/4EUXRrMQqfm2PYDOxrH/xBceLPSNOyBZn8JGwn9ig8WCkstf3c5jbHwm
p3fHRBY03EL9ni1lY7w4vCHPwjy78cqeP1kYWe4UFtY47Zsw9QULp4z9nedP
ZWFLyWWfnEAW0sTpGGosXEp2C7Y2Z6FNfD2jzsIfqwmbJ8ixIL/O54KkFguF
v6wo1kcmTNbVEwvNQt4XfVcR0VMx2w/VYUFLK/WPgRMTj9d5RzbNZ0HuiuK+
98TuUevEF4QsdEcdtynuIbhkBFCyUBRZWDCUT/zs+tNZT/RZoL2NMowmOMNv
ffX+HytZ8AvIj7hDcFjeevWpMGTBd0z+OSHBqfz1HjVBa1m4+MAoPuUzA+ob
Kn3qjFlITugveB3PwPYRgsTCxy2B3lsI7wva4MZyMGNBr/9G1H/LCK/ZUHY3
2YKFhM7C6vg/dIg2KFl0b2Fhg11m2fEqOmaL4eR2Io9M+eVZYXTYmogv1Fn4
rR3cdNCRjhsmYsLPwmy5kn0RC+goM3FRkd3DAutgspRPbycGiDbvcGTh2zM6
s/paJ+abTvS958xCeK5XlfKcTuw1dVrKdGEhn1k0zbW8A2Gm+ez5riwYU72m
rx07UGUqDmCxYG9yJHfZcDuGTB02F7uzoJ14suZpXDuWbMz+K3mKhdDbO/ut
17bDZaN0rvkZIr8U57gp9DbEEPZ725t834u54GdAG+o2ihNQWNh/X9g2VqcN
o0YCsiwExH7caPKuFSvNbPwOEz0wfDDmd9bJVhw1S1+WFUS+bx941kKtFTSz
P5wfwSw4n9q8VqmiBR/NrIhKsyAbuf/DJLcWyIjDdaEsvD1e89hApQVG4uMb
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
nG23m+gio6z+bdy4/wH7vJbN
       "]]}, 
     {RGBColor[1, 
       NCache[
        Rational[16, 51], 0.3137254901960784], 
       NCache[
        Rational[67, 85], 0.788235294117647]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
WstY8B/a0/9WRAZ/UZKUmx4LB/7FKRxlkqGyeKCwyICFYrlk37gvRL6/ePOp
f4YsnD7/8a99AxkBixNUtqxlwdwrcWV2LRkli3vrw4xZkL1y4GMokZ/3LTb3
azJjIenfryipNwQe0IgxUt3IwuLtcavkC8mw0xADUhZE+yWCnz0n8IGGaVLO
Nhb+LlI5K8gmo1wj0vq7FQue9xqfv31M4AUN7gSTXSxcTpm6TDeNjKWa6175
7WFhisnzfONkAj9ohp0m2xL8tctYKEoiI0qTqTrLgQVbVpPF+gcEntBcTd/v
xML6xqXDuvfJ+K0Z5J96kIXZ8wJnfkgk8MWSjjUiFxaGM5qOyxDfH11iQCBc
FkZdR8lfiev4JQEPvU6xsNmle24AcX9CmXdXnGWh9ZKPWs0jAn9oiTNKFprj
st4UppIhzjasL7JgU2r1zpZ4/9NaTWfiLxP8a94l+YSgjwCHCxleLOh+Sdon
pv+j1o1GrRsEv/NU408T/JFZSg9w82ZB1e5VfCfBP5Mxglm49mqPvlwlGeeX
evX8C2SB+6HZYIhERsZS6qMtwSxc9NK7fP8jGS1L1feGh7GwpsysUaKDDAVx
uhHBwrbGCcu0+GRs1BYXPFloFwaozxwk47K22IBZ+LSlyvrDXzKeio9rElmY
f9rC7T9Cnxji8k0SCwmfQlZlzqVgto7SbZMUFvRl1Gw6NCnYpuO63j+dsA/f
wNvfDSm4oVPRS85k4WCthf+gBYGHdMQBiQWSPUOiw5YCns4pG8dnLPQWdOaX
nKBAeVmpTFoeC6UHqveGX6Vg17IZb0QFLGh+Uoo7FE6B/7Jj51YWsyCTcNjQ
iLDH4mXiAwLCPnQXsWYTeKtnmTjBYuHzDKadVAMF6ssP35F9T+jfh8WWEwUU
iKPv7moWvOvd3NQkqQheLtsfX8uCa/Z2b6f5VJQtP5DKIBP21LJuZZkRFd+W
59kurWfhd/t7Y6u9VIyJt5GFM0Zn9sq6U+Gk6/D2VRMLEceL9f/dpSJCN9dt
9AsLxn36t/VfUFGtK7l4azsL53bum55Gp2JY1/ZzeBcLIzIFPs7fqdDTEx+o
EfZWyEw4MY8GF72/Jgt4LEgHWgirTGmI09v99ZiQhVg1XcaNozSQ9TLScnsI
ezNqHk4IpUFCf9huqJ94H8+beWpFNBjqizNoFtbGO/sqMWk4qZ9S6v+D4NfW
fH6IfD2S9IfOU4YJf2BU7HTLuB6N+pZEysECY06W05/T9ZBekdTsKMGGU2KF
i8yDeqxfMRCcNoGN3+6momxaPdxWbDbrlmYjUGv5q8uSDUhfkTCwcgobJwaW
rD5DxOMvK3rTr8qzYdKfk2NExO+x9Hk6G3nDjm3tNg0wN4iZOmU2G+5C+s3D
BF66TESj3XPZmB+XY1Mb0YBs8XGiMhvb2oKUFV80YKy8qMpGarhMuFVDA2at
5H5Zqs5GR1DlWbeBBmxduS70vAYbARmOl/xnEfhjZRiKtdjY+9rVJdyIwB8r
mYOjOmy0JMd9j9hPB3fl6sdb9digGlwR3L1F4I9VQQ53Ddgo3Zz9JzyDjp2r
OuSaDdlQ1vvVHUkh8Mcqg/IFawn6ZrOuPvhOx6tVARePG7MR8TvV9aVqI7pX
tSx5ZsaGnOOjoOatjVAz1G0dMmfD94XxvWkXG2Fj6BNmupmNQx7te5wfNeKO
YdOGgG1sbNTgBX+gNKLUUPs7xYqN6jWlkrv+NGLQ8Ebm7F1snNSpuf5L5yOW
iN3VHjYyLx+r+OD4EftXayqk27KxIG70XnnYR9xd7VXRbc/Gaenht7zyj6ha
Tb20yokNGRT9Mx36iF+r1ZdeO8iGx5v7C0k6n7DcyKPtvQsb23/Ic8MPf8Jh
o7rwKcfZWH7afXZEwifEEt55zyk2oiN1LtIbP4Fk5D6UcJaNYV5SjZ18E/4Z
VT9hurHxl6P/abFlE1atUXLSvsiGufTmwyaBTTixxpVADGxoV5uvSq9qwoM1
Fe+Lvdg49SB42sGJn9GwRvGyxA2Cn9L+b85v/oxJa09pb/Nmo/VG1Ej77c9Y
t7a0/a4fG4tvKMdnkj/j3NoZEc2BbKwqG3X8NL0ZqWuPbVoYzMbHttNVJ/Y1
o3ltyY/jYWzM0aj9evxRM6aK4WAEG/XfaNLNgmZsWHf4wI9o4vdPjJaXrvqC
S+sKp5vFsTH3YVHgAu8vyBIfdyeyCT2RNpGgfUGHuPydRNz/fbv7CdUWzFyf
R3gsNl49HdjhcK4FW9ZP6nRKZ0N3+8hQa3kLiOQ5Mj2TDfs/+XcHZrfi+fpc
i55sNv5TadiQeroVnPWSv1Y9I/glO1l/sKIV84xtn17LY2Of+ixvnnIb/jPO
cq4sYOPyuycO/h5t8DEWF6TYuGLuzWygt6GI8FZ73hDymrjblK7fDpFxhmdi
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
       "]]}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
niHuf+Se1fYWKhzmhe+1dKDDQO7n1OgiKiLm9f0X5UgneNZYw0AUFZ/n6afz
LtChNC167moiXkyZH2y78TIdc2XblI44UqE5nz/X9SodC6wT9C4ZU3Fhvu7H
0ht0SJlN+XhHnYro+YG3p92iI+Z0/4xH8lQ0z2evP+hBR+mAnYX/CAUzFLQY
IXfpUHCwEw3qpEBPwT+46x6xvhsE5uEkCq4q0Pctf0hHS87P5IR4ChIVtoxe
fEzHt9N3jIp9KehQ8H2X40/YS9RDP9pFCmYLzTmAsL8WqZI5hynYrSiUmI6G
qzPVj2+lwE3Rp8ovlI7LnXe35i6gIF2YboygI2T9ygXrx8lgCOnHazrivX20
SEwCTy3wYp6JpiM9IyjRhcAnRguaQ97G0fE4+rvNjjQy7i5Ytf9nIh1qejuO
rw8i4/0Cj7Htb+mwdlZ9oXOTwFsLGjK80wl7X6w57QLBf5UWLrOrzqRj0SbV
9GJ9Mg4vdJsvl0OHTajXPY0VZDxYWFttmUcHedNvrxopAo8tVLkTXUiHyuDS
ON8fBJ5deF2dX0LHwbwk1sUWEpYuqmJtJBP2fWW5nlsJgW8XKYW5lhPrO03v
bWocCX6LXIzKPhLXtgHLJZ8QeHdR+b9pn+iY5ViS8syFhOFFilkHP9PxWsJR
Q9+CwL9KF+1Dv9AJfK+etxgk2CiRFLqb6ehIzN26ajmBh5XkPy1vpcPQIzLJ
VpqESiVHz0sddFzzuze9aqgMo0rFGh+66VhXMsP0VEcZNi6W5Ywx6LD72+i+
kloGu8X24QYcOgbW3n2gmlqG8MX5B/z5dKRoZ5w7+KIMdYuFCIuwJ9r4wgz3
Mogtsc1e9J2w5wVe+w3sy7B1SY6D3U860ujQnGVSBqclkgtSf9HRmnhDVWZb
GaKWWNf+HKFjC+3knp3KZWhaknlXe4yO/LEt9LeSZZiuLL75nggDYRyHUyGc
UugqW3KrpzCQeXYZfUdBKa4op0XITWMg2W5R6bGnpUhQFjU5PoMBZ0rZtfbT
pWhTNhONkWag3vGh+6dtpZgldM+zGXiryz60RroUu1TGzqrPZYCldvDCH0YJ
XFVMCQ0zYC6+3XBzfgkm0uELGPhBXXC6+1kJ6EJ6vJiBm4YO6v85lECIrg6p
MMB3DVT30SvBftVoXqgaA5Jasp1355Xgjurwy+4VDDQ4H0/v6y9GtqrhwRVr
GJg2hbHkU2UxuKqRYs7rGYhtWZS6KLoYi5YO5nxQZ8Dpq2dt961iHFpq4Phv
MwPHGZ7/5M2K4bM0fNEeTQY0GYH5pRuKkb+077O/NgO/C1e7dc4oRv9S/XvN
egyIlYRlO3OKoKoWvFVpJwMepSZHbpCLYK4mJKQMFEhEhn1/XYQnarqRqfsY
CDrul995uwhlaoGHhowYGPNa1qtjWYQhNfYUnYMMDO5ycZDeVoSVy7Ry7x1m
wPCsq42JfBGsl/mfrzEj5M/aNWP8ZyGCltGV5lgyUNbX/mZxYyEqlm1pOG7F
wMcuQ7PUrEL8t8z3fsxJBjoOhJxKDCrEhuWd2wSnGej6V/Vb5moh7JarEwyX
AVJh3yHGkUKELfd57ebIgOv+GTHKWwpBGLMp6QKhL5eVKlXzCiG6QogoGWD+
OTS1/U8BhGjj0FUGbiT4eZm1F+D8imansBuEPeiz6raVFIAgh0toboQ+Ak6p
ekUXoHGFx5cVHgxcODEja6NPAaatbPBxvssAzgmyDRwLoDMhMAPL7kjalBoX
4PJKt95/DxiQt7vMeaVRgPiVtW/2PGagl7biXuf8ArSuVDny1J+B14Wa5++O
5UNGCDcCGPAKKKXfZ+Zj5yphwpOwj7Dzkr1V+bixSriBGfjPymtRfkY+3gqP
ayIYqJNJuDoQmg+aMH0TyYBs562zQZ75mLta8aFONAMGv6MPxZ/Nx77VF7ff
j2OA61f8cM2hfHisJvXVJBLy1Drbr9TKR9ZqYUBiwIJ3fOcb1XxwVjsePZHO
wDZplZvPpfKxYE3xtNhMBryd7Kym/87DwTWyhYL3DKRoVO4XZeTh/hr7Sxp5
DOgE9UR41eYhb43wgICB4vyr8X75eehdIwRYDCS2iFKWJeRBZa3tI0ky8fzF
mgcOPc+DMPqalhP2XZAXPssrD4/XSg6EfWQgv2PZ1LPOeShZax1Dq2Fg63sV
lqVNHn6uzTRb+ZmB8MsmQT3GeZhQ7xcGbPVNzi7Ry4PVOsui3GYGpM0phX/W
5yFgXZrzeAsDi7oO8m4p56F8nejSvR0MyEiGGCTL5WFkndnXp90M2Elorn0o
nof164UHagzoSaT3zh/Jxen1YzqLOQx8uhg7xaYvF6HrTb/b8xn4vCpj5glG
LmrWx8em9TKQo+fwYnZLLkQ2jJgPDxD2mnFs3d26XGzeIETQhP+5P8/hbXku
zm2ILr7/iwH3ks11z4tzEblh+PKnEWK/nd49vP1DLr5sMCQgBwOl17+dj3mX
C4mNkd9OiDDx+69nSU1yLrZvHHwcO4WJspHPnnlxuXDeaKDXI8GE61VLvfNR
uYjbGD6oMYOJBxfTfRmvctGysS/uljQTpr2nBlUjcjEBn2czsXVITHxdWC70
1YNnzpjLRLDv8qNiobm4QUQj0/lMNGVYX4oLyUWK8DhxARMWl7Yz5xJ/n0gv
KjHhXmGy04z4/RwNdstKFSZSi9cuPEvcf6+Glt9lNSZ2WziMGUXmwl3DH3kr
mEiM8HcVj85Fhgb9x/hqJrb7bl4UHJ8LtsaWhL3rmbBZ2XdzNCUXipt8LZ+p
M3Hd3XChbmYuTDZ1Sn3bzIRMqONDi7xceG9SL1usyQQpb+OgSVkucjf5XHXQ
ZmKVqYH+kqpc9GxqXZ6ux4RUZ7vpxy+5UN68rm1YnwnN1pVj+zpzcXSzl7+u
ARNO5FNKUbxcPNrcvMNnHxM35PP8Pg3lonjzqqFPRkwsPXhmWa1oHn5s9kic
e5AJnd4QUtSsPCwXuqvDTHg4PtTeszgPx7csk4kzYyJnl+PFonV5eLbFjdRj
wUTu78vqYoQ9UrfUXttkRayHWKPtvIN5+LNFZeXtk0wspFFafp/Kw9qt19vJ
p5mYJeN6Of5qHmy3Vj2d4cBE33S1KYsf5iGE8M6HHZm4aTx6/tTLPFRvdRkO
v8CEs8UWb6eMPPzbWp5Ed2YiLmHKUr2KPGzapmi16ioTvPcvV3zryMPZbRcJ
xsDE4Lj6+S1DeXi1jUTOc2MibOpf6jFif9dvk78h4sFEKNbI6S7Lh7im46p9
d5moXvd7DUsvH1qaxR3P7jHBMHrea2SZj0uasgHfHjBB33p889Vr+YjRtN+1
5DETy7+QbS0D8vFNM/+Xgz8TY5GOhv9S8zFTSAcDmPjy05VqW52PHVq21r+e
M2GwbmHqPV4+rmnlzNYLZaIi9lbrmWkFSBYed0cw0Z9BWia2ogCdwvR3JBPq
6QvO2+wtgNz2TMJjMbF2+J2n67kC7Nku3mUVx4Rh91scelwAAjwHxiUyoVqh
eY+dWoB329N296YwoTvFa6lmfQFY20X/bEpnQvl7+sjeoQIoaJu9vZ3JhD6n
t2uuYiEOaCfbUN4Tz4N96mu9QnhpCxNSTHgf3anNtivEB8JbHS5kItMz3Y73
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
PCjWPR0eOlaG048kyXIPeGgdSbvQvbwMIY+EBImHLM1NVfJ9pah+lLkyxo8H
kfkLi3j+pRh/JN7Bf8bDie1PstU3lmKz8PjoOfE8k78ZgsYSnBPCyRAeTosw
c6TdSjDRLhnOQ+N/+ZQXS0rQIGyfiCR4Ef93u1tlMSQeJ1sdiuKh2m2uSO7l
YmwnrDkslodD5g/V9ywsxqXHppTuBB4sbiefVaksQuzj+BsrUniI4yqc3Xmt
CC2PhQW1PDxKC2HFqBZB6okwgcUD04PxQudLIXY8iQ74l82DpWTRWsl7hbj2
ZHjXnlwe4kWYp8S2FCL5ieFv/wJC/3Pnc1R4Begi2G9zMXG/4fkutq8KIOc3
SDBCHuqOxn8oMC3AnomELA8Mxh2nFdMLcNsvnJpayYPLIbvd0aX5yPDruzlU
zcMBE/lfKq75YPnpr9Gp42Gfv+mWWPV8TJTnNPAgVdLyYXFvHoyF6bomQv+B
5zc8TcyDt3D7tvCQn1txpOdMHj74B/453s6DMSO1ZYNKHgT+7LcxXTzEkjqu
mHXnYslTrZMCOg+nJOZ9M3udi6NP/eU02DyctFUoWG2Ti0dP6eVuPB4u3Iut
r12ci6KnwgMzHjSUbn7WpH3A4FPftZIDxO+7DzvZx3zA8med3Yd+8EC+9cvC
2P4DjhPaDRvmYU2UirFg5Qc8feazh/aHWJ+k38Fb+3JAeSZs2ODBzD9y/4as
HPx5JjwA5oF0Rcf0y80crA3wOpUrxsfjrVMClPRycCqgec64OB8HPij3yYjn
IDhgVeUeST6iP1NM4j69R3WAx62nUnwcPLXwZfuL9/hHsMGvs/iYvcc8L8v6
PTSEx6Fz+LhnE+u3YsV7TNCjeXyYPVT/t20wGy+F7byKfKi93vCTXpiNemF7
zyI+3t39ZLr0YTamBl1P11EmcLbUNpH/DmdDM0jY4MTHlyWvWWeWZONikLBA
h4+k0I1sm94sxAS5fJyzmo9BUyUeLz8LX4PKb59Yx8fFtc8bxx9mYcZzxQ2x
G/nIm0ryjzbPAp5fZAg28XEzr3m0ZlkWrj0nBWts4+PkMpFpHsOZSHouLDjj
Y9Mq56Cs8kx0PHccJenyERht6nM+JBOyL4rfSerzoXDha3nM2UzseSFLMGA+
7jus3W6plYlbhLThe/kIuuT98cnMTKS/EDYE8sG0nXZMsysDzBfCAko+FBcL
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
       "]]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
YN3gvP+Cfy8E368dujC7AuQGmUKRB72IVH0sYixSAY3GYqUnIb0YOvexSeB3
OUIb7W+rRPbi9DzDqNQv5fjdKD6Y87IXV10XlmGwHI5v+Abci2edSf4VtHI0
v7EhNJpYb4mu2fLucmx4K7jEPrcXVe4iNp4t5Xj1NsX/c3EvEq2PzYhvKMfM
dxZD10m9ON7mn1hUWQ6Pd5MHpOp7cXhbzd3MgnJ0v+MHpF5oGiYJ3M4ox/Ym
s6Vr2nqR/n2Ppl58OdKbxgLKu3txLPXniXdR5ZjfHDm8h9qLiY6yw9sel+Na
s9GhXnYv5IRflT+7Uw52M7fEdYRYf2bWnm7fcux//1j519de1Nr+KvrnVY7i
9/p37/0i5BH8oFDSpRzLiOgrL9SHhnfn/oj+V477HwItU2b2oSc0DzzLcnz9
oFOmJ9WHe04O68p2l+NYS9eyhvl9uNb0IMjXqBx1fPEu6oOjySZh7Y3l0Pq4
8jNrWR9GDnibta8ux9OPLYcvruxD9eXD892XlUOw1btcVLsPIfr9iv8WlsOl
VVk1bEMf5sgpzb0jWY7W1sZ7qoZ9aA9fkjFTuBwGbR5judv78FxvPMb/RxkS
2uStt+/qg+SNmIR/w2WY006u+Li/D52j+mcu08twqd15+QmrPqRJNGSMdZaB
0i7zYOxYH1YdtF50prkMOz8Vj99wIK7f8/3MUHUZcj7Z20i79uHLpWwrj+Iy
KHSIE5CjD0Nzsx7+ySzDrY5sNa3LfdC10f8ZEl+GoQ6boIprfRCd4SSkG1UG
y07Br+b+fVB5SFahPypDRWfKkb77fdj939vuWP8yqHdZkN1C+qA5KhF/4WoZ
grsm1X8/7cOtdNHfxzzKMNkV8/D+yz5ISxgdtztdhhNENFJI7MNd7227vI+V
4W332NHU9D7Euj3Szz5YBt2eSMKC+7DIMiNl5q4yRPcYrWws7kNKvPJCv61l
EOvlPrIm9UGiyePvko1lcO99/I1d14dxqPQyNMvQ2at/7FITsV730tWtqmUw
6qNWi7X1Yd+7SrdhxTKk9gVqhHf3QacxX27DvDLM69d5vJzah9sdyzJeS5TB
p7/rex67D3+cHiTaCpWB2X/TznikD8dHL93Ez1LsHVhZ2/q1Dza9LiVHxktR
ONCy6uSvPqTH8JqyeKVYSvEOGRfsh0S2j54xvRR3KcqTN2f2Q98n8eLC3lKM
UxqPy0j1g3V+WESzvRRHqB51r+b3I7S47Pid5lLU8N3Von7ctWxgrGgoxWoa
ObRyWT+yxQyS51WVIpzm/HPvyn5YO/jmmpWV4i9Nxr5fqx/NouNSTQWlOE0v
rj+zoR/mfv/qXmaX4gPdfs0fg36oe8yiVaeXQp8hHvZgez8SnK+6bE4uRSzh
nRV39UNMON95ZnwpZjFtTqTt70d0mxJ39atSnGcKNm6y6kf6BcXx1Oel6GOm
aL051o/rvvMe3o4shSnLItzGoR+2t1zrSsNL8Zo1+Zvj0o/7iwPjDzwphRw7
5uRlj34cZrXo7A4pxU222ZsZl/sh4pl2KSm4FDz2mHbEtX70W1+97vyoFAc5
kRFq/v3QWpt0IPRhKco4Rn/z7/djU9iTn2rE9+VcroNJSD/2yKfc4H9/yH38
tu1pPzIsd43wf/+dq7/W4WU/Yql9ezyI+/3Hoz79ktCPy4caE0jE8xp5gf/8
0vvhZeIpdJtYz9pBnVNzc/vRvXuLWzmx3qjBLsJj9aP3B2PobEQpRIZurtMh
9UP0ncDHqKhSEOA5ilTXj+KJWAHjF6X4NNQisL+pHy8XH/U8E1uKLcPepwda
++E4WrRUIakUycPKzWe7+1EkvUfUnHj/0iONun8p/di+Kl5ePKcU3iMez4LY
/Uhh77eyKCoFjfBWSiP9eD5CLVxRWYrdo2Sn9K/9qOKwdEPqSpE36vx+869+
1F8brQ8m9EXpswzhogdwxOa+i3pHKQI+Fz8/MnMAysq7FthQSjH62V6YN2cA
NddKa1YQ+mk9Ju7iPX8AXxXc3SO/loLMD7+LiOtffJXK/FcKjXGbjU+XDSAq
u+el86wyhI4LvlBfOQCHP7ly74mQ8Xs8RaRQawCOGpLnqYR9OX6xcDXdMIDt
1ItpcWvL0PxlsqXdYACv39wokjMqw8avMXqO2wdg/qjkyfb9ZXj11ezlV7MB
1Hbk6qv/VwbxiTHR2/sH0Ljn96u6c2XwnIh0m2c1AKEIlRpVvzL0TBi1xh4b
gKXkpyjjJ2Uw/sYX8AB2GkZ/UU8qQ/q3xwRDGsCbody1zSVlWPBdf4aFxwC2
VGm6b3hfhmvfqWcolwYg4LCYdJxRBs73wDb3awNwuRxpYPazDPt/6Gz+d3sA
HxNyfo1Jl6PkB99hDSAuxFfWZgURPwjrXRwyADWm5AvfrUT8mFzpnvF0AHXb
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
B/Qn/AJKLvZvD52wWNgDOX65mQUXZz5FNKO2G3v46edDXGjvEyWNexH8gx+O
rLjIXOZPOqPSjfywY7t2HOXiTy2pLre1C7yw7D8P7bg4lWnfWH+7C4unCoK5
0LKQqUzf0IUD4TYOix258FLxfuHI7QQBNhaecuLCLmqb3cTzTpSGC77NcOVC
dNXCCTuLTnwOtyQiMBf5u17ZJIh1QjWC30DLRe7ZO35vyzpgHfGHcfsCIe/Z
F0+1eXUgKMLi6TvCb/2ImP+7alUHqiISdsv6cPHsjtSmKMYnfIuY/Hv0Ohdm
+yUXHnvxCRpPzXPi/LhYdLoocI7NJxx/GuM46M/FSqOSu9myn/Dk6YTcukAu
Sg6WSZi1tKPhqdm7Kw+4kJF1Eut82I7fT6OvVz3iYsf3U5725u3Q4R/vhxL6
6HnChDO7Haf4dD+ci+Gfwhfdm9rwf/3mXFBEJ35OPmzDVPvZcy6oqm8pJIu2
6f5zLo7qDVbbzSf4blRY7rk4Lj4otqz50NU63Y/OxfnUH2kyL1vxKspQQYDw
29WVfbVLHFun+9O5GNvwW+z7qlZIPGPeeJTFxdXB95OhXz5O96tzEVnUtuJL
6Ud4PgtiLy7kotY7YLGM/8fp/nUu1kvYO/L2fkTvs/V7M8sJv29CuXNV/uN0
PzsXd8RuSJMZLTB+3pdnWMOF4sqywMKsFlye6m/nwvqu9LWjvi3IeO6v2PSG
i6J/Py6l7GqZ7nfnwtNlTPCFXAsW8MsnWwj9ibuQuJ79AVPHKW1cRNwR/OxW
8AHX+fCqg5D3Z2nnrQEfpvvhuQguWfI8/fAHcKJ9910lcH4MKWVepvoHLJrq
j+die5llnt/4e1i8WF4gweRiQZ/h19rw99P98lysihL+vdjgPUpeNC2KGiTW
k/qCEkBrxshU/zwX12rECr8FNkPl5QUCcXDBeLHuyem1zbCe6qfn4uHnRUEf
e5rw4KUSr+gHl+ChJQXaAU3T/fVcSLQJq13VacLEy9r9O/8R62n9PJra9w4a
U/32PFxX9V5ZfO8d7Aj03CHKw85rT9gv9N5N99/z4B2xCZbst6h/NX/xaSJu
R6idNGkPf4vfU/34PNyiiUrJ7XgLbX65ylweSDcVshf8eDPdn8+DdunTrW9S
3mBKneV5OGBy+eMq2zfT/fo8zOjIuqor9QZCsZIH5i/l4ZPaJou+qsbp/n0e
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
DQBHeg==
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwsXAc4lf8XR1NRKRJRoUVLy8j4JKmESpnZolJUUqIQlULIDpmJstK1R0tl
JWWWdbl7ESXqp6j/e/3dx/N43ufe932/53vO95zPmXKO5486CwkICFBnCgjw
/ycm8D9dsFor/zJLtxwzEnUEFNO6YDyZsll2VzlcE7kny7O6UCd1vzRIuRwd
iZFN+/O7kKyifoG7thzaD9R3fCnqwtsFxZchW47HD6iJJyu7IGujQg1ZUo5F
ScGCP18Tv+8d+tAoXA7vpK2nA+u6sPqAyDEhgXLQkro+in/sQurxF2Gbf5bB
IDlg56P2Lvz3Ufn+kcEyFCcrJm3v6cIK+9jg07QyyKa0CL2ldoFdL3Xds7MM
t1O8XY5yumD0bjDy6scyDKfINVOHurBLVKv30rsymKc2qLiPdSHCVt3LubIM
r1PdkwUmuqDmscjf8FkZFNOkZkYIdUN+9ndRpawyRKVVn1kp3I0trcKafx+U
4U+aS8vThd0wjgpe3RBZBqd0MTXtpd1wEUylhtwpQ1N6RUqTTDdOdnuF6fqW
QeWhwywbhW5s79Tb8+NiGVIfCrsOKnajsGSHdOLpMszNILVeU+5G26ZLW9Rs
y+CeYak+X7UbXn+2JTUdK0N3hmBaolY3IrpSrx7XL4Puo+zZSnu7Mecml9Gn
XYa8R8ZuFQe7UV2oPXZ8RxkkMsfbDhh347HCx5qPimXwy0zf1WnejcyI2gu7
VpaBnamffsq2GxnFZotSxMtwJOv7nF9O3Qg/mP9yXLgMFVkJ526f7cZ+0fFY
o3+lkH+s0yFxkXh+2elnCaOluPuYq5Hp1Y3emRvW93FLMfo48uGO6924W3BO
cnl/KWyeqAu/C+xGwUXH+CPtpah9Qj1/LLQbKsI7a/waSrElO/gzLYpY/2aJ
8syXpYjP3qp1MaEbC5K23q0pKoVAThdBcTd2Lqiw6HtSijM5AfMis7phi+5d
35JL0Zqj6L4qvxtXeW8N/kSVQiO35UtBUTfOvn+U+e9OKR7lemujshtrEnMd
J31KIZonl/nxdTdCxOckj7qXwjOvYb5tXTdujDLPMU+Woj/P/eLXpm78N+o5
8smqFAfypbp82rvR3czRKT5SClJ+NUR6uiGqe+ZKlF4ppJ+6ZD2gdsN+3sb8
M7tKcfOpmOgGTjdcTbX3aW0pxeDTCo/KoW48vPw0bf7qUpgWOHTrj3WjJCjo
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
H7pFRfFX9c2GrtrT+B9CckZ+
       "]]}, 
     {RGBColor[
       NCache[
        Rational[43, 255], 0.16862745098039217`], 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
0A==
       "]]}, 
     {RGBColor[1, 
       NCache[
        Rational[128, 255], 0.5019607843137255], 
       NCache[
        Rational[128, 255], 0.5019607843137255]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwsXAk0VW0XTlLpSxMqiiiapCgphSeVIhUqQlFEJUoSUSlzEWUOmecx0zXP
IpGEkunizpM0KJVS/ef6u8ta1ln33HPe/e797r2fPclaORyzmTljxgzqrBkz
+P9jovmffiiqdaWLhldAMEZrxobEfnTah3NePqiAfQz3fHl6Pz6onPS/7V2B
npiQVwfz+iEx5hMnf6sCmk/UVHqL+zH86b5ay7UKZDyhxpyv7Efrkw5Hy0sV
WBTrL/Ctvh8Oug1mXy0r4BarfNG3pR8mRu1zPUwrQIvt7xDr6MeyFaeCZxlW
QC/Oc3vq237s/NYn5KVTAVLchthtg/3Q21vo/gMVkIrvmvmM2o8BM/35F3dU
wC/ezfYYpx/Xn0g/79xcgY/xsp3UD/0oOBNQt3VtBU4mtKo6TvRDTPDP/IdS
FahPcIybMdUPJSqjkSZWgQ2JErOCZw4gzCh7Qml+BUITGy6tEh5Aa1VFhatg
BX4l2nY9XTiAiw531lT+LId10uKdmksH8PXluYMTn8vxKqki/tXKAQgq9qht
5JZDNdlSyHzNAGQ+aCw0pZQjIVnY/v2GAQxeEiZ79pZjbkph9y2lATz7k0xK
7SiHY4qp2n87BnBWyCWvobkcAykCiTEaA9AdGBvoqy7HvtSs2Rv3D2B2v7Mh
r7gcuamGlysODWCTuZv8t+xyiKdNvtExHMC+xnN2U0nluJOWtKvv5ADI5xJ3
/I4qBztNN+mCxQDuxcXE/3hUDoP0z3O+Ww/gdVsN6YNfOSrSo6/42Q1g/0Hn
hyPu5VidodUjfm0AN65s2vPyejkeZHB3p7kO4MOTo8OFduX4mhGSrHJ3AHsU
DrqHWZXDPFNNuMl3AD9veCpfNS3H80yqw/HAAWQOXVyoY1COLVn+72ihA+gr
u6iw4mA5orKUNa5FD2Cl1ftorkY5ZmT3ExQP4O+OMw7FKuW4lO05LyR9AIsj
NtW7KpSjO3uDo0zeAEbe1iWqrS7H7pyu3vziAfw45iP/bXk5UnPcNFE5AN4l
ptXTheUQyZVN66gfwEHXo5etZpfDJbf1P4uWAUS/22i65HcZRnIdr429GsAV
KnNX7Zcy6ORJ9N9+OwDjr7y153llKMxrwPzBAdAvpSnPo5ZB8qlt+hPqAEir
vRyye8vg/XSxiAJnALb2NxQOdpTh/dMKp8oPA6DlGdpTm8pglG85oDsxgPOi
ByxvVpWhNl9Yq//XAJRa/dVEi8qwrqAw4+LMQVz9ZSiXl1mG4ALTBT/mDsLu
3RsD3YQyTBYION9bOIhjfvs/cCLKYFWYNbh06SBsd/QrBAWW4WWh4d70lYNg
iLfs3OFdBpWiycztawYxeWTffo5bGeKKkhY2bxgE7z9v96SrZZhdrOtyQmkQ
H25ViVpfKIND8WcyXXUQaJNVVbYoQ19x9D4njUEsXTMqOs+oDFokreyZ+wdR
WHSY/FGvDNkk7qLQQ4PYn3arlr63DEtKQm7IGg5i0bo8LkutDLdL1IYLTg7i
oPXSoJ9KZWCUUPfvsRiEov/73lXry3Ck1D/ntfUgJhqsJ0+uKkNpqfKSM3aD
GNhFkkldWoZVZf2uHxyJ98sschdaUIb7ZZ4j7q6DYMblabgLleFz2YYDIncH
4UFpCJn/uxRm5V25sb6DWNvlmkn6Wopn5W6imwIHcT0g5oDL+1JsqpC9WRU6
iOOCRWQDRikiKloph6IH8WDy0uN95FL8qXA8OJAwCPpGx5Qjb0txoVKC4DCx
XqOrilfaS9FZ2SA2mTuIDapiVqlNpVCrsr11v3gQmQ/mXvlYXYrkqsW0ZZWD
cBKddD9aUor/qit0MuoJfj0Iqa3PK8X1ast81ZZBLCh0P62dXoqhauGlz18N
wnWvrc9gfCkO1BTeNnpL3P/7r5XX41Lk15jSGQODuJQwJqcWXIrltQKHrlMH
EcQa+vbnfik8a7MKBDmDuBl8W+iNZyl4tYbLwj4MYu4pZ3fSzVIcr5t0Xz0x
iJ+C1x8kO5Wiui6JUfhrECt15U7H2pdCrl5XT2smGaoc5ZVJNqV4WP+5sHMu
GWIJOj/yLUrxrT56+dmFZHgoiEm9OFmKMw1adz+Kk7FXb08Zx6AULxq4zDsr
yVhf7fpl0aFSKDeGHF6whowfu23/YF8pYhrViuM2kOF/oHKWs3opBJ9RJRSV
yKh0Vl6dv70U9s/8PapVyWi+d2HP2OZS9DxTZutpkMGyfYrN60uh2dR/ZHAf
GSeFTWY4ypYio8mTdOkQGdrHS61IkqVY1LxhxU8DMr6rrDj4XbQUbs1dnv4n
yYh50he0U6QUtGY3znILMi5f37PsxuxS6D2X1c+0JiM5N/VZ4d8SkJ63luyw
I+OG8kkn9o8SSLU4rmxxJGPNp6zZy8ZL4Nci4W3sSsZAzwdzjJbgYwufYDIG
X98wPcMogckLWwNnX2J9LyP7nYdK0PBicdmsQDICSuJqPd+VYGNrhVR4KBnZ
t4Y5nq9LENZq6bMmmozP83J2Or8owVSr8GhRAhnRBkYPzRpKYNPGP8Bk9Klt
aVOqLEFHmykh0WQwiwPavxWVQPWlwCrLYjKmciqcc3JKkPgyy/dTBRl6Cxek
H0ktwdx2w/d368lY8bJfgxxbAsf2yWMLW8iIaL8iZRxRgoF2vkEiw/24vnxl
UAn2vdKV2fyWDDn93to5fiXIffXZr2aAjL+HXV/hTgnEO6LHDlPJ0LW1cj7n
UoI7HVonyGwylOqbB5yulIDdwa20+0Ds/+Vu2WvnS2DwOkT211cyXjwsv3LG
ogQVr9XuB/wiY0gzk6luXILVhPWVmDmEqzFd2f8dLcGDTn+jrLlDKKqxprVr
l+Brp3L1zoVDGGwKKfDUKIF5V//qF+JDWN1+X01hewme89m7cgg1H92S2jaV
YEv3hk+s1UOg6EXMt5QrQVR3l7HLhiE0T81L+LiiBAJv3GqElIaQIP2f+w3R
Elx6IysXoTqEzFfNbZPzSvDmTWuAnMYQFq61y70xswTqbx0/F+8bwpL9CgfG
J0lIeythsu/QEKj7VKsvfSZhQU9DbbfBEEq1qrfSOCTc6LGVtzo5hBbTsVem
FBIoPYsDP5sPQSdzsrC7lwSddxXjHtZDcNRdLHj0NQlF7yxNF9kNwdXUmtn+
nATJXmHC5RjCok073A1qSfDuLVy7xXUI3++ILhkoIeF9r2lQ7Z0hSOduOWCX
R4JRn8DXI75DWNMo0yaURkJtX5bZ0IMhJL2+dTQnloR1/YYN9qFD2E7v8TYP
JyG4f3LdVNQQ3P5rkpQOJGGyP+nhg4Qh/Hdy8NkHbxKsCGskmT4E37cFW7pu
kfBy4POp7NwheIf2L2hxIkFlMJo4wcTzE3iLu+1IiBvU2tBaMYTb89y4X86R
MJvMfWRSP4SnVIkDm0+T4EAO+cZ+PoS326z6vE6Q0EdWM7/xaggPFrINvhwm
QWuI+mz22yFc9tY466lNQvaQ/8bIgSFIxv8s3axJguiwcog8dQjyV4qFfquS
cHu4/zuJPQTFmb+nxraQwBz2tNj/YQh9F+2PCG4g4ejIhuY3X4dQWBCZobma
hLKRLoVzv4ZgxVlUnbSCBBmKW+i4wDDuSF/dvVmchPsU2UnPucPItNR9x1xA
wjil9czihcNwrlfWaJtLghnV8Xmi+DAme0kyQzNJaOKrq5XDmAg2XSvzuxib
aA1hdauHwZl9oD/8ezEiabY/j24Yhh6nsV59vBh/aIsth7cMI4++3FpirBgX
6BUtl1WH4Z0RfGgTpxiddMvNv9WHYUS79suFXgw1hnBE4L5hZOyd++fncDGS
Ce284tAwPrtE91cMFOM/pqlVjsEw6hUdxEveFeM6U6B118lhBIp37/zQXYwh
ZtaWNvNhjJDnvTz/uhgHWIaRptbDUNlqdVymvRj5rMkpzqVhiDTJmK5sLcZy
dtI5V0fi+XsenTv9vBiebN22Oa7DOH3y2yT1WTF47M9Kj+8M401JfMrThmIc
50Q/Xus7jN55XexndcWo5mj9KXlA0D/r3ZE1tcWQ53KttUOHEXDs2+mO6mI8
5Ia8fBs1DCTfjH1eVYzvXLWt1gnD8ErOCRMhrs/yqFFf0oZBEehuTa0sRivP
/69X7jC6r6g+DyKut44qn19SPIz+x7KL2ojrmNF+QmMRv49aueUU8ftZ7z23
KdcPQ79nHmUv8T7CeY6pfz6ModX9xt41xXj3vmuGwSvi+8ePeqWJ9WqOuV0Y
eTOMZh3V9GUEPZljsh1XBoZx6UjP7KsEvYs+tKr8oQzDuOq6xkZiP9w+OD4J
YhP8y1z5UIfYLxqhraQ+DOOhQo/6K2I/9T42XMz9OoxVZulBlZ3FIH20fb37
FyFfh6KalvQUQ+rTYkJFj6BrSbF8X38x/D5VxJrNHcGO1j9f548U4+MnS0He
ghG89vZ2KWYUw+Sz8CU38RHUm+h+eMUrRgPf/K4cwXoLk0SLz8XYOG66I2r1
CNZll3de+FGMsHGB+HUbRkA/du3Z6N9iTI1nzSrbMoKbV4Kq388hweaLod0B
1REsEl0y4/IiEjq+THb1qI+gxXhu9xUJEnZ8Tdpps28ENfquLl+J85L4VTfh
q+4IxMUuKc9QJEF44rOQj8EIxiuYB8J3kHBtItpe9OQIXE5++Vm0l4TBCa03
yeYjOHjQIdjiKAn7v/EZPILkF59CosxIyP0WQiCkETz7GjvP8gIJS7+rzTF0
HMHf9fU9ZddJuPOdeplyYwThjekdsV4kcL77v3W4M4I30nGdC0NIMPihvPuv
zwh+xXwsXZRIQuUPvsIawalw3umEfBJWE6dXOnQEyhcH4qrqSITftsEhL2oE
nU7/Gdl0kvCVT27CCNzE2sxjqSSY/3RTb08j9ifDKuzsFxKe/5RNOZU7gqUB
sl2FQoT9+MU3wCMIkzg+/mg5YT9+OV69WTGCPcX7un8qEPZjSoLQ0COwIuHw
OAj7MdWgEf18BJo3w3a7nCDsx5Rt6vpXI5CyenDLz5awH78X/1f+ZgQ6rU7s
1XdLkPab71COYI5ItJkeYX8X/LHse0cZQUrAwYK/hP2+8UcY59kjOJfw8hme
lYDypzBtYmwEjzIdr/43WALdv6bzfb+OwFHQL8TqSwmK/go4if0aga6I0Uzt
+aUQmdFDSDwFuyx3RRfJl2LvDD5ipSDwbfO7TJTCZYb7ccs5FAz+9SmSMStF
zoyu2VnzKHAUSIpf4lyKkRnylZ9EKLj7fa/IDcK/FBNwu7xzMQWHZ4RfPZBb
Ch2BVzIeYhQI7KrZ5faiFO4Csm9bllEw3sgemsMsRSEfjqyg4GCFejtPoAws
vnqSJn6/m3lDkvDnJYnTEy9LwZYL844/Ui+D/kzHJJYcBTtP9bzWMiPw0szm
E5vXUxC53eHsRtcylM+UmOuiQFyLCdzQiiTw08zLVTWbKTi7lOR7l1QGWcGG
K0JbKdhrWviH3E3gKUHx1Ue2U2D3S/bEsc9lCBC07QnfScGqFVt+9BJ4r1aw
5j55NwWh7wTMz28ux7jgYnU5UCB0+NnXicPlWDfL5qPdXgqqomOV7xL49fSs
iuRibQpGh0p9f/qXI3iWiPEvHQqeq+4+dzazHE2zLIX3HaYgpPGYetbzckzO
KqkO0Ceen7DW+xWjHIpCwle7j1Hwl5ue2jyzAlYE2pc0pqD6v7WS92UqEClU
SHgAFOwQrOqeo1mBl0JCAVmnif2qbDXfcaoCf4VMNT6foaBAsvSQsGsFVGbn
fdp5jrh/AWP91fAKXJwtkOpxnoK4O2X3LAoqEDfb6OQLWwpIRuHfnr+sAJ+7
iy5ToOI+PCuWVYHZc37XnLxKwcfhSa3OGZXYRZzGBCcKkq0PaRhLVsJhTpoc
24UC2R/b/GS2VSJlzmTv5psUyHlL5srqVaJvzpEHLu4UuH+01DxsVYn5c5M0
az0oYK690h7qWgmtuXyFQcFW0RQmO6gSznN1047co2BFvLWEZnIlsufGmUQE
UHC9cOn3eyWVGJ77+b+hIAq+qUotKG+pxBJh7Tq5EOL75eSx+r5KHBSOvmYf
TiFOWpl8BKcSt4XH5EmPKXCOXKK97nslCvhwOYaQ19nHBm1nVWHafMZTEO3W
f0N/URUk5nHxIImCB/3zs9skq3BknsaX7lQKmlpCxDrWVMFrXki6ZCYF879/
UTimUIXSeXwDS0GZ3a69pspVGJ2nJpL9lIKaHpF41vYqrPoviEBEFCxlLvX7
vbMKJ/6jOqmVUFCu+2dP0q4q3P9v+zrPcgqiiu3Fe4jrmv/8B15UUZDVPe9Q
rFoV+NQuqqNg2NhT/qdqFdbOV9YyaaRg2yfXD5+3VsGMON0JzRTEHI0Z9VOs
wqP5/RnsFxTMWv3wXPXaKjybr3hqSzsFlyV/x0ZIV+HHfM8FN15T0MJ+NCwu
XoVNInyHlIKFuz5e2TOvCpYiG5xnv6NgQ8Oz8OV/KhEh4r7+aD8FkoqlkUmf
KtEm0jUYQaagR9GhaphaiT8i8o+GRijQc3qs+6arElsXuO2Vp1PglNd7z6u+
EhcWvJqwZ1GwJ7Cv+mNeJWIXyGaRuBSk1e3dIh1Tic4Fzqen3hPX32vlF/tW
YtbC1oX7PxHnnTHBenmlEmoLpZ49+EKB4vbgCsOTlbiy0NHlzTfi/hjZD2ma
lUheyAdwFHyfSjvSIVeJdwslhqx+U/BBzu7BW+FK/LfocnD2DCoU+qOLG8cq
sGdRw75xQSrMKWbdyZ0VuL5InLAwVKgK9H65U1SBzEW22Z7zqDCduUPOMqwC
Q4tqzFtFqLDKTnE47lSBxdMfKhbVa9POHKvAgcU2TSZiVEwKH7gfrFSBm4sr
biQuo+LN0VeXP4pUIJ8fzpGkYrfRrAQ/XjnofPdOmopRuuj6s8T5Xz4d8KDi
RoOcuF9SOQ5PCzQVcaQz12beLofnEvMfs9dTMeY9pjdiVI6SJYU5RxWoUP72
LW/tlnLwlgididxMxeeu1FTanHJIi5ouGVam4tPQKnUpShmOieY1y2+n4hUl
2INSVoZ7onwFTcWqJJk7qo/KUC1qtKlkNxVpzO97NpwvwyfRrJEpTSpEnNHT
SOhbObHfofv3UjEhLnNQRLQMpmKGBwK1qfj1sDF5CZfA+2L8ACEV30xS2OTa
UjSKTeauOEzFfu2iq07hBP4XO3L2nD4VZO2WvH7bUiiIJ4nmHCP2vzKoZglh
X86KTzwfN6LCa2ZhraxYKcLFdW/uMqXiuzv5tTC3BC/E4xS9TlNhHVi1sKOm
BL/FPxMeN8GPoMlYx9ASKC/VDl98jgoSRSvyO4Efzy+NPmh6ngo2E5Lndpcg
ZunYz0RbKlqm4g+WLSzB66VaTzn2VAz7zNP4TidBcFmEpdJVKj4OKUqsLSdh
5zKumKsTFUEXSD8PEHjHfpnGizoXKm566s4wP0tC0rKQW3NuUqH3IErHToWE
nmXMzfruVNQxDo9fJ/z/ecvVaJEeVNiMLV7pTib8x+VBEcPeVAgIhTH8Corh
tJyqs/YeFesf3LoU4VOMjOXbpy4HUPF4xKU9x6QY5OX++SVBVDAslTa82kT4
l3xxDqaiy/F4wtSMYuyX4FNMxc8rD45o9BTBTcK3NfAxwY9y72OhWUV4yg83
xlBxbLCw5Y97EWh8+BFPxe8h/wGfY0VYKulJP5dExYUNsx3l1xVBT7InMieV
injBmabUX4XwkNxw6EsGFa+LTM5WdBaCJOn+e1cOFcvcmSeephWCI9lV4PWU
ipBM71kNNwshtULeuq2Qin23FmiM6xfi2Aq3ZUtKiPOz27J9r3wh/Fa8ajMt
J/i5+aRH8c8CVK6QvZNURcXW2JdrtTsL8HGFszK3ljhPrdFBP9IKsGZlK0Op
kYr2X7FeHbcKYLJSKsq1mVjvzYI3LYYFCFzpqFf/gorFD/KPMtcVoGFl8585
7VQks3le+lP5mFgpUaT/moqiicovq7LysVHqss3jbiqM230faBjnw0KqYflI
D7Ge7wKsLMF8hEmJt6/tpyJ2Fiv+fOFTtEjZ3r1CpiLnDsfQ+cxTTEnVbC0d
oWLNeF1Mr8hTKEkvZv2mUeE8ulr8UXUerKVtorVZVJR9azkdZ5eHaOmKw0Fc
KhYk2ojMWpGHDmm+h0XFRd+s501tuZi5yrJ45ScqKEvON1Jv5kJ1Vcl56y/E
+/KzZ1oo5MJulbBk7jcq7sZzItXJOUhcZf7qyyQV51aHPPQIysHbVYUeu39T
gTvik5uQg7kyQireM2gY/Mpi7v+cDQ0ZU3abIA1/XrhYv0zJxjWZvJglc2gI
11D1eWacjXQZgaNm82hIjIg8oTQvGwMyRgLJIjT0iQozxWqzsJCvnhfRIPzr
z/7r17KwT/b3BWUxGrY/5HobrsuCq6whwWEali7aVZhPzsR0OFyShuJnluSQ
0ExQ+fBYmrge7RL7pZMJvndlIEvD+pe/bD/8zcCh1Umcx3I0VKcajF4py8Cd
1RNPRtbRcLtKK/OuQwaKV+vqr1OgQeLYnoI16zPAXh0302Ezsf6cmiUW1HSs
XPO5pFSZhtR5CiPKT9JhsEbb9o8KDUeLJuWSjdLhuyZ65YGdNOgxY74ULkpH
xZqx10G7aQhj3TWzbk/DhzVa3j2aNLiuWmJbfT8Nq+UiVKX20jB0p0ixRjsN
xnJ8QErDhKpHia1gGh7IacTl6tAQKnxPpLkhFfVyIQZf9WgoL+/e2+2Riq9y
TEF1fRqsZjtYhe9JxXp5tTLvYzRcIl1wWyCQCnP5oEsvjWjI9XkRvq8xBaHy
VClRUxpk1OIaVH1S8Fx+e5fZaRpawz7PHz2Qgp/y/j7JZ2i4Y9zlfW5eCras
HdrBs6JBep/OtpSOZFivVSYQLg1xK6zW54UlI2qtb7ybLQ0CyRuv+pgmgxBm
wwZ7GtZE5S3bJJMMgXV8j5KG3rpvChnsJPC9DQMnGpQHF1f+yE/CpXU9dlEu
NEzmzHu9xi0JBDhcRXGjYffX9zcU9iXhzTr37nXuNDQ5NzUsWZCEOeu7fB08
aIgfj60g9ydCfZpgGiI3edkHpifi6nq393/8aKhk3mXLXU9E2vpXCQcCaHgz
krQja28i+tfLHn8YRAOP/MV25ZJELOC7G8E0bOkaYcxsTsDeDfyAJw0hJw82
F1xIgMsG/gEm9r/TWUh9fgJy+OmaGEKefu4YiCuKB4UfvomjwS/UzPW1WTzE
NkrcU0+iof1ktljbrHjobLy8yyeVhm9zvtL9CuLgvrFh7GUGDX/Pzlrx1zwO
RRv5BokGIdnMDwoicWBttD1x6ilB/+zcsNm1sZBUqJmTUkhDdAdZ8/7VWOgr
LK7ikWhYtnOOfLZcLHwUbK5sLaehY8aPmzYDT1CuwE8Q0PCbdcu5OOQJ3ivw
HSwaHmee0Q069ASymyzvCzfSCJxxVeH9rCfgW1/DZhpWlboZtNbHIGCT8Meo
FzRsvaM7JnUnBrWbzJMpL2mYKZmrSlePwZdNhUbrX9PgdfCK5ZLf0ZhmbzfB
36bTyam10TitaFpd1kO8X3//5jDPaAQr5jn87aNBPOOzWq92NJoVBdYcJNOw
8r7yT9v/ojGpaPTu4QgNews7U/Z3R2HzZn5CjQbGNe/7Z2OiYLX5t7o0i+DX
piF2xbkoPN5s+MmGS0NO2KCsweYovNyclpL3ntAf6t41q38+xowtk8YTH2mg
1fRpKbc8hsoWvgdNg3EuZfutiMe4uCWpxucbDfVxCTIzbB4jbsvE1fZJGoLX
SfrXbX+M7i26hMtB3D9y4lv5nMeYrRTXe2oGHVlmJz6ODkRil9LngBRBOgS2
SP06mR8JByVtzdHZdHR/Lk6c8olEqlL0563z6MjbKXWh/1Qk+pTGUm+K0KES
bd4zti0S0+7zIjreZLpdUxOJhJZyxH/zxOj4O+XcXMWOgAthjQyX0XFc4aTR
9WcRyOanEyXpONcqm2WVGIHp8KIUHTH2Awf97kRAdCuzb70sHT7ZvuXD5hE4
uFUt8KocHQXL13vZaUbg9tYglK+jI+Lwc4VNMhEo2Eod/7uRjheD1uoyghFg
bt2efnAzHU2n5u4+yA6HxDZ/00fKdIhalTxNbA/H0W1D83tV6Li+qeaXQnE4
vLYp10vvpMN96YmLzJhwlG3zdTq/mw6r6JCVz73DMbqtf+1TTToK3/VLtVwO
h4yK4sCEFh3jH4MdqSbhOKHiGaShTUfi7BVSC7TDcV+lZ4+vDh1H1MnyB7aG
o0Zlw9d2PTqcinaGeMmEY1zFPUNMn47UgHDr6oXhWMtXV8foOMM6nvb+bxjM
tssvSDWiYzN7wGT+5zA82u7WMGpCR9jTIB8xehiatr+6vu00HQssOhX/9ITh
x3bZ9bfOEPxYNsessTUMm1SdBxut6Lj9K2KBWW0YLFVbH847z6eXalBbHIZI
Qjsfs6Uj5eXhtZysMLSpOk5E29Nx76d6eGdiGP6oNmdSHQh6B8QTr0aFYdsO
idMbnIj9Dtqt3xAchgs7LhOIgY5mlSUZVf5hiN3R0FjuRuz/59+5Jt5h6Nwh
7jLDnQ5ZltX5EPcwCO203aDjQYfJtrQ+C9cwqO2sIT/ypuP9z/XClU5huLJz
cXCvH0Hvo4qQJw5hSN5ps29VAB2uVtaXv9iFoXdnxbfzQXTsCuz2zroYhv/4
cDCYDqGgKfs0mzDsUbM0/xZGhzdzoL7DKgzX1UoWaT6m4+TS88tEzoYhi5/u
jqFjTWLkXB3zMAzxw99xdEQJ2my6YBaGJbsKCY1Fh35Dq+Sxk2E4sEto+HQq
HZ9Ma+w+HQ8D4TyHpGbQsfbozrINBmHI35W3/302sV/S2yKYemFg7BL4se0p
HQ166XH/HQzD8t1GObcK6bhrHHDRWysMh3dnWTwj0WFZ1xuksjsMnrv5ASk6
Zsy5lzZbJQylhLY6VkXHwqfBB6kKYeDtTnONqaVDafvYf7mrwyCtPqlAa6BD
WCoi4OjyMBxXPzKyoZkONZbHqYL5YbivnhTq+IKOK4uzllb8DUW1+oR2xUs6
NFfNPmHwORSf1HUnZ7ym42xwcI45NRTyfPPbTYctc0/Ji9eh4Ec3gnvomJ+w
UNitOhQPNbRF+/roGKbZLDyZEYpGjejnq8iEfgg/ut4sOBTfNfgBXDoGP0W+
87sRCgVNLcV8Gh0/9VQX0k6H4qxmBOUbk45n39e0XN0TinBNbpgml9AnB05+
2bE6FK2aGgf93hP796DlvvrMUPzWDPn56iMdDsvtb3tTQrAVzDzxL3R8hfqz
xTUhOA8+g+lIOrHl2PvHIYhBEIGQ6JjIVJde7hiC16C2vJ+iw+DRqZUxOiGY
tWf7LZUZDGibeWvdkA7Bzj3+m28LMmB0OseLNB4M+z38hAcD4+y2t8bNwUja
w1dYDATo9286FxmMd8TpPS7CwFPmq7vDNsGYxw9vLGKgfyqh8dW2YEyTK8rA
XfYB3vYZwXDS8rTauIwBiU9OvTsiHyGTX44hyYDUTOoN4Q2PQOanZ6QYWJ79
LIFX/hCL9rrfFpBl4EPgPDWm9kNo7+0iNDQDZ/RTFQU7g8BH+8HrGOiOvHvh
6MkgPN3rFtm3kYHLekv/dA0GgraXnyAknr+0816ueSCWTTuUDBQseZ00f+gB
9PY5F+SrMHAz6oeVrNkDeOxrPfd9BwMffyvTJHoCQNontQy7GRCPOasqfzQA
3H2ObX6aDNx+ZutyrdkfUvub3Tu0GDjdtbVCabc/jk0DJAYkJZPEH+Xfh9/+
ywxzHQbefY1Orl59H1X7Gx6n6TGwqXzmDU74PXzcL643dpSBpVX1WVqz70GO
704eY0D+RIXhdxc/mGjzE+oMRA50+e5k+yJQmw/4GRhM/Xha5aQvGrRtls8/
zUCd8I8xiRYffCOk+fgZBnae7dRfvsMHGw+I3H1ixcDev+bRFhnesDhguZVu
w4Cjhh91xXJvhB0oYW60Jeh33Iy7/l54cYAfwGLAdHx3a9kvT0wdMD9c6cDA
1NLwyK9XPKF0sPCvgBMD0qora63pHrA5KFSs68KAWXqF8Q5TD8QQ6DfEjQE9
95QPqkl30XGQX4DCwPuXg7HuYXcwczogy0DbGckJJ3937NAx8rjozUDZksbn
G71vw04na1uBHwPcD1n/FXncQqLOb9Z3fwYu/c6skfC6ibc6hoRIM3BSJ/Kd
4z03CPPDdcEMPO7TMWgLdoUG//iGMRBc/lhuW/wNXNM9Qlr6mIFtn02PVOe7
IJ1fLhTDQGLg+SbnZmcM8tOHcQxUhoV7O4xcx8JDuh1jiQxMLKryqfjthP2H
+AVbDIiKFDack3GC66HPhEViwDL0iMqdg9eQe0ib05TNwLrsC++WOzmCeij6
yfynDMSav0val3IVSwnunihk4NFlqoxUgQMO6WnNjCUxUH5nxU7RNVdwRy+i
hF7GQKmAsLt/gj2K9bgXFaoYYMw1oSfI24Gjp7HSqZaBVZmlFi4ltlh5OOR1
ZQMD7ePdtE36F2FwmOk1s5ngx5TZOfr4efgeVlM99IJYz7upNxWJNqgk0GDI
SwZEIs6v7zSxxofD1Nj+Dga+naiJ27/iHKbhUTcDgoLRW6Q5ljh5xF/QtoeB
GOnPS4/XnUXgkaHSgj4GPPrmnC7SOoP6I8qXfgwyYGi5Kv6whDm+HvGV2jPC
QM2ZtMyzQqew4Wh/5z0aAxVmS5UGhExhcVTR5zWTAXXyB06q5EmEHvXcsYzL
gMHlnHu5+4zw/GgPz+I9wf/wF/Vkj+P4eXRDfPpHBnaRG3Vkuw2xRd/d8MM4
Ax1tS9/a7DCAtX7XLNVvDFx/67l5k+URROnLl7tPEvrH71bQ7luH0K7vZtc8
xUBIpejmruqDEDB4RSBgJto997k1yWtDlaD2hCATuWOCfe9L9uKSgbNv7Gwm
7i48Wix7eQ/iDVp3MoSZkP+8nXM9Uh1vDKQIF5oJWYeW2VKJOzGXH35exIRY
/d5w3jcVqPPNkSgTojNjrAJjlHHVUGK24DImXIru3LMSV0Qav5xNkolXHbqi
ix6uwwA/vS3FxLtIt/l341djwTFxmQEZJrY/XjpnfuBKEM7GG1k5JjhRZGWd
OeK4cazGz3YdE09EL7x2NhFB7rHFhAVm4nsZxevtp5mgHLMZ+6HIxNXohDOO
aROaYscrEvcoE+vpc11VyaBr6h4XOXFfhYkp9VMv13xt1rxz3HJO5w4mZvz7
FB0vqVy2m4nLRsP2Hh2VmqzjwlfOaDIhY5HcdHxsWHPFCXPZDC0mqp+fW31G
dlxT/0Th2w/7mTC9zL3z6NIM+JwQuq+qw0RPi7WTMUsY5SdMd9/RY+J451qD
+3VL8P5E3ofmo0z8HEtfwXwsAVk+3D/GhH2H9wC9WgbGRvwPE67Uh5KnlOUR
YJQ1N86EiYgVZ8xWrN+IWqPfVYxTTBj/tEhnJ2zBFyNDh01nmHh8/bZvw8ut
WG+ctvq6FRPBeXqH+mar4rTxZE+VDRORlt0Z0R5qCDbmCzQTzBZtuQs7NdBs
nKSuZ8+E18Ox1V2Re/CTQAuhDkz0t5/TfZe/F5tP6qYMXGOiWX3TxXHWflid
jDNe7UJ837narHn3QTw+yU94Es97lKLIzNMlcB5fQTOhaFTcylY/jBkm0Vcn
7zIR/ctY/BznKFRMxgjEz0TG09Zb33oNYGui1Xvfj4kNOaU5QbrHEG8SEdDp
z8Q96leRxhfH0W3C1VgeRKyvZnakhZERZk87HEzk513ZsfmjMXbz3aswJgpW
5TN/RZjgqinz5MdIJlo9DoWH6pohlV9uGcPETY1nqjXCp9HHL7+IY2K06Un9
gXfmmD9dIEDIg7ex/M+nZ6A17UAzsf7rrk1drWfhYubfZ5RBvG9L7VqhRktk
mw09iMtmgrvx260/dVYYNlMmPA4mBlampiU/OwfRU77jmwqZ+K3uL9Xbbg2d
U/1p10lM6DacN/cctMHtU3xAyMQWyu9hv4/nUXDKc/6sKiY2di1c+WruRTBP
9dTp1TLxtc38odo6W0gS3nNYAxMswaz8wkOXcPS0+9rBJiZWLvRJXuFkB6/T
/IIaJpaxDUysE+1Rdpof4GDib9KT57e7L+P9abc9RR1M1Ons+mQk7AAZfviq
iwmSo4D91dVXMS3OPUy8r7HZc6/xKvzNnQmKCX0gUvKNbe2IWvNWka5BJnbZ
mC16IHwN4+b8gB2xvhf1C2wLrmGtheP1szQmrmkcd7pp6oRTFs3rMplM3Gm5
XVc26zqCLSQGP3KYsLPLvC5RdB1NFpcf7njPhKOilliUpTN+WPAL0Jg4sqRo
1SZRFyie4QegmXgpfX55x3MXWJ6xzVzwjdAXxi/uuty+gcgzNaeMJ5nwqNvX
K6XiStjNxQvjp5ioOr0vsXrMFX/O2DQy/zKhs23rab0sN2w7W+GsKMjCPJ1b
gY3nb+LiWX5ChQXZBP8iybW3EHvWklwtzMJz9Rf6h9m30Hm25NEsERY65ZOZ
+tm3IcRPDy5iYcrCa0LKwR27+HBBlIXg929m5G+/gyuW/IJNFo7pL5WY+n0H
0+XAkizk16xPFXxxF7388iApFgTlFtym63pgvlXesyIZFuqcHSpSCjywx0rg
xs81LIQc26K2b7knrlsZbdy7jgXViv3ZjR6eyLLKGvLfyIJrZnrVap4nhq1+
B3cpstAjfXil9QkvLDlnSHhYxHolN926V+eFA+fSvp9VYWHHE417QQreuHVu
MjtzBwv18Tc+ukR5o+DcEYtPu1gQkuuy2j/bB4xz/AJnFi5s0Ar+dt0Hy60n
mu5qsTCQV7v2IcMHR6x1XVv2s/Apf0/Pf0a+8LKOU1iow4L+5tpDV5/7otT6
87CxHgsu6zarVu/0A89aOzT+KAtLY+4d+JTjh+lwrCELbJ+GjSIy93Ccr56N
WIhndYeIRtzDfRutXGcTFgZrijbO+u8+qm0iCA6zMDnXJHXE8z4+2XCXCJ1h
oeN5RV765H3In9d4ftiKBfVvHROm1/xhRnhX4TYsPI54qPBz1B8PzzM3kS+y
kJ2l1Op/PgCN59Uoa+yJ329cw5KkBeD7+aAwOwcWeK7fU1osHmDTBeqB4mss
yJ3W2p5NfoCzF7b//OnMQmFseDv5VCDCL/jn7XVj4cdM31g3ciBaLwydDbjN
gsPJ9N4YiyD8uaAs1n2X4JdVYIEZLQhbL/q2SHizcGu0zfTNhYc4f7H/pqUf
8byqCaFVHx/iyUXFzVn+LBg9SWSfdH2Ezoue1E+BLOzOyl/eLhCMWfx0dzAL
aW9p89x1gjENf8NYWE0qpusFB+OyrfuvlkgWxhTsq7X7g5HML1ePYUFUxvjp
jTUheMcvX4tjIet6VfeHKyGYd8lNPCGRhfcirL3lVSHApVcvWCksLO9ctZwq
HAqnS7K3N2ewsC6hyM7FNBSZl5y3uGSzYHuGY+ybHQrypVZaTR4LQ1/nfZH8
HQpCmCOFClko3Wdtut8wDNp2joRHyYKakmbKggwC7xLeRngZQX88jev3JwxP
7SQKyJUszM/Qmyg/GQ6a3eVzcrUsfPBR/ZNWFI5l9g1L7RtYuM05vPHQwggc
thdvK24izpvD98ikyxHwsOcTTJzPinjLzFcRINnXKO17SZw365wMsy2R4Nov
ZgR0sCC9wM+PFBoJaX56oYsFD6PHK4q+R+IY393oYaGs76CPvsVj+F0W+WPZ
R/xedcbw/eePUXWZf4AJ+Zi/4YCZUhQ+XS4hJJqFKz83DtQ9iYLcFeHlajQW
7sRdKSuZGw2TK+YvPZgseIWf/rXjRjSCrhTeecFhYcEd82d72dFovCK0ddF7
Fsx+9G/qNonBtyt8g8RCTtIuI9rLGGx0yItKGGfhwXKOqcOeJzjjIHCYPcHC
3V+HTJxLnyDcwejv5kniPHBeXv6kGIsXDllFLlPE+u68KSOnxxL78tum9i8L
H0+1HVeVjYPStIPFRpS0xJnJ2DjYXE1rPzKbDSub9d9lJeMRQ1jfCGE2vDvO
quVGxaPj6pFtQ/PZkA0d7g9dnoDp8o1FbDzR9pV+Hp2AHfxwjigbc0u3dy5f
kAh7PnuXsnFEwdONop+IRH47hQQbGjlDb7eEJmK6vFKKDZ9hwdypt4kQvqZ9
4YEMG6zLuS/UlydB81q05Js1bPwSCP7KPJWEa9fGXkmuI56378LkWEIS0q/x
ATAbiQO8xEOMJAxei1DJVmQj7+ob0uf1yVjkxGV/VmJD5Gn/n77LydjvpPFE
TYUN3d2lOt+KkuHqFEJ40Gysb5A9jR/JyHPiF9SxYcF5OzNbIwU0J35Ahw0/
0/uzN3mnYOn1oIsmWmwo13xVqnqRgkPXqSsS97MhWd2td2RBKu5e3/6afZCN
n38GZPqOp4J03d9rix4bFzc/dzOMTgXn+tD2G0fZ+D1+WCZ/OBUr+ekyQzau
TKwbZq1Jw7T7bMSG9fBC9w8X0+Dr3K9/1ISgz7jmeVVeGioJaxR5io2S2Vyf
/eNp+ODsWTpkwcbfWy+n7qqmY7ULvwCVjQCFghCHm+k4OR1wZ+P57BeU5bXp
CHRx7yRdZCNtLz3AUyAD9S5d3lN2bMiLdSvl78/AVxf5Hfsd2LApsHbKuJeB
DTfceA+useF+2O6LQ1sGLG68invjzIatVKnhApFMhN7gJ5DYkDIR33JfPxPP
bzjPOnebjXJl0030kEz8utFaln2XjTMjhjy5t5lQcpWyG/diQyDytfDxpVmw
dnWU3uXHRmhAsoKTSRaiXPkF22zsHo/5FBCThVeu/IQoG0tn+k8mkLMwk1+O
FMyG2Ed1dpl0NlT54ckwNnZ98DPrO5uNaXUVyUaMyo6vs1OykcBv94lmw/i7
lJEuMxtv+eW/ccT67f6TTluXg7nTCX42mppff1x1KQfqN23s61LYuLd7t11d
bg4cb1asmpPBxhsBaWX/jzlIvyny5mg2wY8jOjSvrbkYILRzZB4b1OMBq4qc
c7HgFr/BgY0vc5mnVlbkYu8tfsEKnz+HuM1TubhxyzzxchkbC5arZxXtyUPu
rUICMbCxrufnbZZPHii3hOb8rmHjQE6Ltk1rHsRum1bubyDOVyidsXXBU+je
zrsc2ETwx/vR7uPHn+LObX4BFhuPnecrtEU9RdFto7crXhL7Yfkk/MnwU7Bu
Z90718GGp6a76Uu5fKzgp3+72IgX+mJmbpcPAz4cfMtG4FONm0ZF+fBx5zcE
sWGkHB9VNpkPAgye8BpkQ/xZ9stnMgUYcz8yt22YWM+x7hzG/gKsvpNUtZjG
BvadN99jWwDjOxOExmJDePGcrr6gAgTc0V2dxGFjzk6j7/lFBai7E9fDGWXD
VOVzfUtvAb7e+Xxf6SNxXjxvSa/+XYD1d7XVXceJ/YsNn9GwuhCn70Z/rJsg
7hcYOpmuU4iQu2PJcybZ2KcwIfb2SiGe39Uy1p9igxTpvv5wRCF+Etrq8V82
ntYt9V5UXYjNHtzq4ZkcyIQOuayhF8LKQ+Pq2tkcKL/b8ch/XhEee4SsuSLM
wcPOaHmdrUVo92C+K5nPgcL9+jBrsyLM8FQL+L2Qg0+CttsYXkWYDreLcvDh
kIFFe04RbPnmdykHitbbrqzuKUI8vx1NgoN449fVo3+K0M0vT5fiYOcGaori
hmLM9hqaZy3DwS+avPvY8WLs9lKuzVnDwY8As2Slu8W46uXr+GUtB6vXq1+e
yi5Gqle/3O6NHFg03Nth3FuMPi9F4o+D5+Y/zfbNIkHE2/NBmxLx/SxD5VZl
EvZ692guUeFArFpHbOwMCS7eG8ZNd3Aw8iDenPSQhGxvPoM5aLi58IJcLQkj
3l0EQuKg/ZFJwN4PJIj5yM9X1uLgc5eqrNiqEuj4uNW57udgpc4F33iDEtz2
eXWt/iAHpybTF7G9SlDoI7t2rh4Hle+LVn4pKQHLh6+wOJDfoCP4glsCSX45
gyEHwSVrpO2kS3GUH944wQEjQtOGerwU3nxyTYjvO5/XKQaUoty3Of3KKQ76
aF+sjjWU4r2vhFmpBQfCEwPehpOlkJk2wBwEbgk5qbi1DCf8Guq1bTiorVQQ
5diVwd9PnNDQxP11daPe6WWoJdB+jx0H1dZWSwVpZRj3qxlY6cDBirfrX1yQ
Lsfae4sfWl/jIGT7elXSqXKcusd3KDkIL3SO4EWXI/hexdcvrhzCLq5dIdJf
jqZ7Ipm7b3NgEKM/JSVRgR/3LE953+Wg/uTsK6vMKqB4v2TBSy8O5LrOpInG
VsDqvnDjEj+CX5sde6eGKxB5nw+QCPmJ0lcbWl2JtvuF65MDifXuXDSj7EIl
/t4XInMfceCp8uJsYF4lVPjpozAO0ksDg898rcRFvjsZyUEF61rTVvUqTLdL
RhPyOvZIea5vFbr47RNxHFwZ/zGf1lGF2QFZpw0SOXgm/exBo0Q1dhHSHJXC
gVOMID3HphpXAgyfjaRz4GVjL5NYVI2UgDSXddkcTK7SCEycUYO+AH5BLQf+
P78rPdWvwfwH/AAWB3+aJSTaEmqw50FS8J9iDo4dX6U/8akG1x9M7DtQxsE5
J98hpX21yHqg+z2okoN13190uEfWYphAvz01xPryzysO8WqxJPAzgQg5+G4/
KGiwpw4HpgOyHNTNSD3dG1mHW4HRTbktxP7u1th7/UMdCgLHbnxtI57/PWQk
bE09GIFaCuodHBxy5l1xM6jHdHlOFwcLPc6fGHWvxxF+uO4tB9s99ovzcurh
xT++fQT/hxtVXQbqURoU8sNskIO1M2U0g4UbwAti5iQPc9B1IqZgp1oDVj1U
O8OjchCneVX0qm0DTjwMWrKVycH7dZRR1ZgG3H9IbXbjcLDKbX1d0MsGVD/k
J8w4KIm5t8T5dwM+P/TfJPyRg80Tu+3GtjRi7aOhEYNxDnifvI9+t2qEGcHd
qAkO9L7FaYVFNuLhI98DlB8caJjcFGxsa8SzR/yGDQ4ei6md8f3biB+P+Alg
Dpb39l4eUXmGTcGeZ8tmctF0zVin+9IznA3uEf0rxEVlJWnO2aRniAje0HJA
mIuVXuNNAX3P0BbsfvPhfC7GnyyMPrGoCX8INPhuIReqg//F1ek0YSs/HSrK
xWJRNveVZxOm4dFSLkKWJkV5VjXhCb+dV4KLkXK1RvJEEzr57T0ruZhoL7hL
VWrGrFDnp+oyXPTLz+aF2DdjZyi/wYmL7Eg1yU+Zzbgcyi/Q4SJ8/NCGP8xm
JIc6vhDdyEXw/F1KtWue411o861Tilwklc3W2Wr1HPPCJLakKHHBe17gfzrp
ORB2mcbbxkWEyM4FoD7H9bCGiK07uIixiP0wKNuCzDB+wRkXfwKH9m0/1wJy
mO1UgwYXDLtfa4+ktWBxeE2+sBYXjh0TBfKcFhwIX0wgYC7S77X/rFd4gZsE
tdEHufC4dFdK9uoLPA3nNwRyIXdowVadkhegh/MLKLmon3Q13PnrBZbzy80M
udA+XBf+RasVh/nh5xNcVIlRxW77t8KDb45OcrF/7TDvTVcrSiLMDx08xcV/
J0q3/JZsAy+i8PdDC+La0XZq0roN0tMFwVzA4Ltte34bjkWaWkvbcPG26UyI
y682EM7GsvMXuehNSn7w8+BLVEUKvMyzI+iprHM0i3iJT5FGhAXmIoVaejqK
/hJyj/kNtFxY8u7ZlG5th8nj3wwfZ4J/GVvTSr3aEfTYMKrdlQv1sVKVJ2/a
0fg4TU/sNhfOQWKK5+Vf4dvjyT+n7nLhd0ovQ8L1FTZGHSlK8eIiduOp6rKX
r3AmKslm1Jd43qt9vntlOhAeNbF8mz8XusuFVlQ7d+BFlG77zUAuusnxkWvb
OzAVFXe38REXaR8WLfZZ8xrK/PR+GBdfZE6lvLv1Guf5cD+Si6ID7udlel7j
//3mXFyKrqooXNaJ6fazWC4urkWI+8HOf/3nhLw+z+CF3OjEzpiI4qspXNxs
6w0cz+j814/OxVffQs2Uvk4kxmhIzsjmwv/QspYM4a5//elcBF0afS+4uwvz
njA9HhVwsWDnohtV9l3/+tW5OC10cVN3fBeuPQliS5dxcV+u541eV9e//nUu
qGw1lU2zukF+sv3o0xpi/5JcxW7s6P7Xz07Ia4rTbiW7buyPHSJpNHFhuEfk
6qmEbrhO97dz8aN1ndvUm27kxfqueNXGJfy9NKllwm/+9bsT631/US5f8w2W
8ssnu7jo3HDixIvrbzCdTnnLxbNY3evnc97gLt+96uXC4bGCXhDtzb9+eC7W
2pMT9ki+BSfOXf/WMLEf9ppqPsfeYuV0fzwXm95vGz714C0M4+VL5zG5GNqd
YPSy6e2/fnkujJ9anX/35y0q41+tjBklzkvE2V4PtR58mO6fJ/Zr/y2Hjus9
WJPgTHgcXLz+L2KisaAHJtP99IR+0AxWshrrQWCCFK/8ByHPW/TZ+Rvf/euv
58JViUTJv/gOEwnNBjp/CX0UlkS3yXiHjdP99jwsyZ4s7WG9gwXhPfcK8WDf
Ei8ruK73X/89D9oaTrzPF3rRkigufWE+D5Pmpn1pWb2Ymu7H5yHw1rai1e97
ocQvV1nCgymHrmm/pe9ffz4PNt8Oa/s59WFanCV4mPfDIPB6ed+/fn0ejqB7
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
WvwPjH1XMA==
       "]]}}, {
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[16, 51], 0.3137254901960784], 
       NCache[
        Rational[67, 85], 0.788235294117647]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[43, 255], 0.16862745098039217`], 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[128, 255], 0.5019607843137255], 
       NCache[
        Rational[128, 255], 0.5019607843137255]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}}, {
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[16, 51], 0.3137254901960784], 
       NCache[
        Rational[67, 85], 0.788235294117647]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[43, 255], 0.16862745098039217`], 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[128, 255], 0.5019607843137255], 
       NCache[
        Rational[128, 255], 0.5019607843137255]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[16, 51], 0.3137254901960784], 
       NCache[
        Rational[67, 85], 0.788235294117647]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 1], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[43, 255], 0.16862745098039217`], 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 
       NCache[
        Rational[128, 255], 0.5019607843137255], 
       NCache[
        Rational[128, 255], 0.5019607843137255]], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3895895895895899, 0},
  DisplayFunction->Identity,
  Epilog->{
    Directive[{
      Thickness[Large], 
      GrayLevel[0.5], 
      Dashing[{Small, Small}]}], {
     LineBox[{{0.45, 0}, {0.45, 1}}], 
     LineBox[{{0.5, 0}, {0.5, 1}}], 
     LineBox[{{0.55, 0}, {0.55, 1}}], 
     LineBox[{{0.6000000000000001, 0}, {0.6000000000000001, 1}}], 
     LineBox[{{0.65, 0}, {0.65, 1}}], 
     LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 1}}], 
     LineBox[{{0.75, 0}, {0.75, 1}}], 
     LineBox[{{0.8, 0}, {0.8, 1}}], 
     LineBox[{{0.8500000000000001, 0}, {0.8500000000000001, 1}}], 
     LineBox[{{0.9, 0}, {0.9, 1}}]}},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Extinction\"", TraditionalForm], None}, {
     FormBox["\"Wavelength (\[Mu]m)\"", TraditionalForm], None}},
  FrameStyle->{{
     Thickness[Large], 
     Thickness[Large]}, {
     Thickness[Large], 
     Thickness[Large]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->{{
     Thickness[Large], 
     Thickness[Large]}, {
     Thickness[Large], 
     Thickness[Large]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  LabelStyle->{
    GrayLevel[0], 
    Directive[
     GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 16]},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.3895895895895899, 0.8996996996996998}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.832595849980982*^9, 3.833785423717407*^9, 
  3.8337859397824287`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"59683322-7893-4cce-afa1-3b4a6682f776"],

Cell[BoxData["\<\"/home/group/scapa/group/Yibin \
Jiang/Projects/Nanobot2/Nanobot_Experiment/test_Algorithm/MAP_elite/Toy1/MAP_\
elite_mathematica/UV-Vis_example.svg\"\>"], "Output",
 CellChangeTimes->{3.832595849980982*^9, 3.833785423717407*^9, 
  3.833785945172887*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"b4caed87-4630-4232-b32f-c24d3604fc60"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot the whole phase space according to the shape and the mixture rate\
\>", "Section",
 CellChangeTimes->{{3.814276439419458*^9, 
  3.814276468676649*^9}},ExpressionUUID->"e1c5df26-8349-43d5-806b-\
c3ad12c8c57d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spectrumAll", " ", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Qtemp", " ", "=", " ", 
       RowBox[{"Qset", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "j", ",", "k", ",", "All"}], 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"spectrum", " ", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "mixturerate"}], ")"}], "Qtemp"}], "+", 
          RowBox[{"mixturerate", " ", 
           RowBox[{"Qset", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1", ",", "1", ",", "All"}], 
            "\[RightDoubleBracket]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"mixturerate", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<SpectrumAll\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], ",",
     "spectrumAll"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.814272495886149*^9, 3.8142725263980007`*^9}, {
   3.814272693945416*^9, 3.8142727152896757`*^9}, {3.814272817276226*^9, 
   3.814272822348844*^9}, {3.8142728710893517`*^9, 3.8142729691996717`*^9}, {
   3.814273363034169*^9, 3.8142733937565804`*^9}, {3.814273760554997*^9, 
   3.81427376071207*^9}, {3.8142743382213306`*^9, 3.814274418567541*^9}, {
   3.814274463728181*^9, 3.814274464062448*^9}, {3.8142746024660473`*^9, 
   3.814274604129065*^9}, 3.814275325973844*^9, {3.814275385349567*^9, 
   3.814275435000482*^9}, {3.814275520737762*^9, 3.81427554268934*^9}, {
   3.814275598418792*^9, 3.814275599794183*^9}, {3.814275781837345*^9, 
   3.814275788282901*^9}, {3.8142761494718227`*^9, 3.814276149705325*^9}, {
   3.83259572547261*^9, 3.832595728243428*^9}, {3.8376967155869427`*^9, 
   3.837696727601963*^9}},ExpressionUUID->"a60966a2-5010-45e4-a8d5-\
fde788d4df7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"spectrumAll", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<SpectrumAll\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8145396022049093`*^9, 3.814539611485014*^9}, 
   3.814539649821204*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"0c380ae2-559e-4c16-b1f2-a84047bdea2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Grid", " ", "search", " ", "to", " ", "find", " ", "the", " ", "upper", 
    " ", "boundaries"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"resultsAll", " ", "=", " ", 
     RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"spectrum", " ", "=", " ", 
           RowBox[{"spectrumAll", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j", ",", "k", ",", "mixturerate"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"fromSpetrumtoY", "[", "spectrum", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"mixturerate", ",", "1", ",", "21"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<resultsAll\>\"", "<>", 
       RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], 
      ",", "resultsAll"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8142761921264257`*^9, 3.814276306544425*^9}, {
  3.8142834501013813`*^9, 3.814283456133451*^9}, {3.8337845746195393`*^9, 
  3.833784585319562*^9}, {3.8376967215225334`*^9, 
  3.8376967602173767`*^9}},ExpressionUUID->"5e3502fb-3955-4bf8-9e64-\
8a16d6f223c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsAll", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<resultsAll100\>\"", 
     "<>", "\"\<.mx\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8144418196327972`*^9, 3.814441849069723*^9}, 
   3.814445974787368*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"0a667c9c-7e45-4900-a6d6-3c7d5b33b97c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxfitness", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"classAndfitness", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"resultsAll", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "j", ",", "k", ",", "mixturerate"}], 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "2"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"resultsAll", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "j", ",", "k", ",", "mixturerate"}], 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
              RowBox[{"4", ",", "2"}], "\[RightDoubleBracket]"}], "\[Equal]", 
             "classindex"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultsAll", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j", ",", "k", ",", "mixturerate"}], 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"-", "100"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"mixturerate", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "classAndfitness", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"classindex", ",", "3", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.814447513683413*^9, 3.814447700249372*^9}, {
   3.814447746348991*^9, 3.814447748452736*^9}, {3.814448047058346*^9, 
   3.814448049735229*^9}, {3.8144481132192993`*^9, 3.814448147593981*^9}, {
   3.8144482342131453`*^9, 3.814448235257516*^9}, {3.814448306521744*^9, 
   3.8144483831047153`*^9}, {3.814448417503923*^9, 3.814448478732938*^9}, 
   3.8205537196055326`*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"ecbca38e-3d1d-40b6-b23d-cb1b5260d483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "maxfitness", "]"}]], "Input",
 CellChangeTimes->{{3.8205858790842333`*^9, 3.820585880720832*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"808b699b-215f-4bbd-9c96-7330867eb5d9"],

Cell[BoxData["0.6027248305573373`"], "Output",
 CellChangeTimes->{3.832596304394273*^9, 3.833785550381826*^9, 
  3.833786112544076*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"b245d4f5-59c3-40f1-8a89-000176b6b33a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "deviationslLLP", "]"}], "\n", 
 RowBox[{
  RowBox[{"deviationslLLP", "[", 
   RowBox[{"ave_", ",", "dev_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fill", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "@", "ave"}], "]"}], "\[Rule]", 
             RowBox[{"List", "/@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "ave", "]"}], " ", "#"}], "+", 
                RowBox[{"Range", "[", 
                 RowBox[{"Length", "@", "ave"}], "]"}]}], ")"}]}]}], "]"}], 
           "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], ")"}]}]}], ",", 
      RowBox[{"apd", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"ave", "+", "dev"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"amd", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"ave", "-", "dev"}], ")"}]}]}], ",", "p1", ",", "p2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"p1", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Join", "@@", 
        RowBox[{"{", 
         RowBox[{"ave", ",", "apd", ",", "amd"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", "fill"}], ",", "opts"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.832238319836965*^9, 3.832238320260516*^9}, {
   3.8322383737405214`*^9, 3.832238392204585*^9}, {3.8322384823336315`*^9, 
   3.832238482524045*^9}, {3.8322385365189877`*^9, 3.8322385510900364`*^9}, 
   3.8322388995789623`*^9, {3.832239031412622*^9, 3.8322390339529076`*^9}, {
   3.832239115655593*^9, 3.832239121720295*^9}, {3.832240548921994*^9, 
   3.8322405493125424`*^9}, 3.8322406268699017`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"aa7f7277-fb11-4448-a9c1-26ed7ab0c432"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanoversamples1MEAN", "}"}], ",", 
     RowBox[{"{", "meanoversamples1STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.62"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      FractionBox["1", "GoldenRatio"]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<MAP-Elites\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f12", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"meanoversamples1MEAN", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<MAP-Elites\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.62"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", "f1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanoversamples2MEAN", "}"}], ",", 
     RowBox[{"{", "meanoversamples2STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.62"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f22", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"meanoversamples2MEAN", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.62"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", "f2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", " ", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "maxfitness", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "meanoversamples2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Upper Boundary\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.62"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Step\>\"", ",", "\"\<Mean Fitness\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_fitness_50_steps_random.png\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_fitness_50_steps_random.svg\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8322379441809883`*^9, 3.8322379711747727`*^9}, {
  3.832238424568849*^9, 3.8322384367261305`*^9}, {3.832238818305961*^9, 
  3.8322388212238493`*^9}, {3.8322388647060766`*^9, 3.832238865798195*^9}, {
  3.832238901922789*^9, 3.8322389183678007`*^9}, {3.832240600764982*^9, 
  3.832240630836061*^9}, {3.833786177034947*^9, 3.833786179408864*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"415f9b4d-fef6-4678-96c1-8e4f91eb0a6d"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, GraphicsComplexBox[CompressedData["
1:eJzt1ms01HkYwPFhWoTO2FIpUsaQRW0YZhDzzAwzXXYrRNu2pXQybbnErJLE
CLW5bFnJqS2nU6vbumxDqlFRVmmVlctZjdYQZYquFEnbzp6d5//rdHq9r8Yb
5zPPuzm/7zyPTVh04Dp9Go3mqkej/fv/v79nvPX6VquE6Uqe9gPgSSe2z9/4
l9ZGELvtcFV2v0prMyhfe/a7rfc7tTYHCV+eXra5S2sLeGx7jH5IgbYCtrdj
tv8IegY45Q6oKp3vac2EopNNUb6+aBb8YOh2dVYI2h6C97DoBhFoBxDnliSI
k9GOsOLhpfAle9DOwOX6HTx/GD0b6p/Wd8lL0HPAINtEGSZHu8Ca22ddBs+h
XSFTlHIgvAbtBkmq4ieMOjQbUhKM2VENaHdItnQq+qIR7QHSUP9191rQHHhT
sLVsURuaCwPrn5hebUd7gtKsPK9ShfYC69Ee+zg12hs29G6MVzxCz4XGnIGe
zc/QPpAg/+wbn+doX/h1UWRSI2UeqL2mTN/3Ag3AEnbGBL3UWgZg2TrOnf4a
53zwkOaYM9AyPqTc5groIzgXwOdc03FxaJkAMuQObeepuRDyhx+Nbvwb50Lg
Wxnz3qJpfpA/szg2Ub9bO/eDywvOjHcYozXNH05z7xyhf4Jzf7hgZO3Si6aJ
wKMueK7HWJyL4Nz9WyeOoGliEKRmNUQa41wMr5feO/8ITZsHrxK+XJxpgvN5
wHVlsvimOJ8Pgb0TO1rQsg/8kV6kV5oKU/SwDyPoMCgpsCnBPszA5etddpG7
8f2bg8Ubm3D2NPw+LGBWf4rjpkC0FTACDyoGpegZsD/YYnTCZtKL8VT3jLR0
0ovYIILWX0B6MYyWVB0oJ72MSYyJWn2D9CI0mRNefJ30smBy2RHHJtJLgIRR
7d1Benl8ozTgOfU+XcDUO2ZLwQPSS8lQ+wvDx6SXaedYq6yo98aGLoek5J1D
pJfOi5OXeVLvzQPKrdiqfOr9cODa7VRxzjvSi2F+pSKWjt+/J/yiPDnURtkL
tifNZG43Q3vDlqlp9VIGei4ccvhzdpk52gfifrwkU1D2hfh3wSGLKfPgkMnu
Ir2JaAB9wcs7YrSml6BJYQsTLXDOh5c3R3yy0ZpeZj3IfLZ8Cs4F8DZzX7kc
remltSSvWUHNhSDKzXgQMA3nQlhWm9Ncgdb04r23rpAxg/QS3jLixLMhvbRd
So9iMkkvS1VSkZJJehlKjtpWa0t6KRVZZkXYkl6yzBsuKlmkF4N4hlc+i/SS
NShvjrEjvZQqVtQus3+vl2PDVRNmvtfL+/5ILyZ2X5mNb22nenF42MFvS+yg
euFEdtek88l+qdglKHRtRFtA8Yrf7l5nkv2ynKUI3S8j+6W6saFmbTeaCYs4
m4KGX6FZ0Go0kho9jvRyrLRLFGtLesk43bdztjvpRXp9oWQghPRiv7w1V/Qt
6cU//nu6YzLpZfoSSVhLGumlQjLSN3836WV9nj3UHiC9qAw5yfQC0ovNzf3q
4ELSi3WCr97qE6QX16Mhfc6lpJc5EdHTTc+QXlReNqGfUv17wlhxlVtBJdkv
VVuPOkVWk/2ysjzITu8a2S9j3jB+8rpJ9ktyUx6n+hbZL+rDaccD/iD7hb3h
VI49tf8ARH71Y0NbyX7pzr1gnXGH7JctUxz69qI1vbRevJ9bpCT7ZU1P6joO
7kdNL7yKyrsV1L4Ugnrlwgk78fdI04uTdMdpYSfZLwOXc3gPe3DuB5OuSF6b
9eLcHxLLnJt70JperF3rLAepfSuCODOft8ef4FwEVWmympanOBfD8PMFnTTc
v5pe+l3OcnypfTsPVuupf/8Zrenlyin1Dkfq91DTh5PbaB5a9oF195juHtPd
Y7p7THePUb3o7jHdPaa7x3T32H/z/+8e+wfCgJck
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90,
             89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 
            73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
            57, 56, 55, 54, 53, 52}}]]}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
             114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
            127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 
            140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
            153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 
            36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
            20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 1}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51}]}, 
         {Opacity[0], 
          LineBox[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
            67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
           83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
            100, 101, 102}]}, 
         {Opacity[0], 
          LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
            115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
           128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
           141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
           153}]}}, {
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133501, {2}}]& ], 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133501, {3}}]& ]}, {
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133501, {2}}]& ], 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$133501, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}, {
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133501, {2}}]& ], 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$133501, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJztlm00lGkYx8dU8pKaZHdrDWFHrC2GXibTxDVjZhCKGNpKMUVJm5ddMWip
Q51ahmrb3chKoldU27Yldcpspqisl7RJaDi2tq0lrRQz1p7meu5Tp8/7aZ4v
c37z/3A/Z+b63f/LWhqzNIJOo9Fc9Gi0/z7fPL3u6+nMVR6Zre7aL2BE/ZnC
7nKblg2gsj8g2NGkXcsMKOJKav7O6dCyGaRK41Z3sDq1PBXWnItnLPsKmQly
A/UvigJkK1jfbTWXewHZBtZUmBZW30VmweoprrJZFg+1PAMelGXkZ85BtofG
taLXT0XIDhDASNr2YzDyTKA3/hY9LQzZEWr0fAR7opDZ0NDGdJ4Tj+wMdyZY
VciSkF3AKOG45mAa8mwYG2aRfDQTeQ5Y7rgdpcxCngsxgYtX5vyAPA/Etxw/
4R1F5sCx+idOFWXI82FguqRLdgrZFRRhDyUXLyJzwXJcvbddJfKCd5gHTfqq
y8O1yAvhRkAL90g9shtEMRJ4yS3I7rAne0qAqA0ZQB7U3VraruV0gKbhdT8V
dWDOh4jSSbJxKsz5kDVmhvRRN+YCeH7f0O7AY8wF4JfWMrFCjbkHjNRE89fo
qbS5B+TH1bGS9bVME8IXTc7xY8djLgSBfN7i9QaYi0Dkvsz3niHmItAseZkm
NMZcDJPSl0f7m2AuhvLLp1fHafB8T+hq21J2bSzmnvD1UPEdZ+p8Lwjfaiqb
heele0HL9uMveqnzvUF27tudVUaYv8Pv8cUkeUNdiS/6YQDNmxQLfTLRDwYE
tWWp+lJwvs2g+LqFX3Yt8WVJbadXPBvfnwkWCQ6mzSHIVqDU439wl5pfG9jc
ZWTnQ80rC7Jrd08zSyS+FNbJvtkvJ748NItOCqfm0wHabQaO+xYSX8yHcmVF
pcSXlf0e352k5pcN4y41Vol/Jr4wt5SWvKDmzwVuRrDZ0tvEl4aiJPnERuKL
VSiXtuM+8cXHyTrv5F/El7xP6WF5g8SXXrb3OaD+z/lQ3n5+6+Qx+Pu7Qnjd
IUPLichciBW43w3BeRj15W3mwWuj5lobW+SFUCCJbbCwR3aDXpsxG2MpdgfJ
xmtik5nIAINlPiucHXEeAHqa0+qnUDkfJr9UZ3OonA9+9VF9cuRRX4Y5wRuC
2JgLIHXwSVglF3MPGN4en67mE1/8o0QJj8TEF7cjB/NzPYkvQdVc79xFxBfN
7JIAiS/x5cOrZ7v/8CO+tJqGtkQuIb4omPeKSzdg7glflo+c0UQRX4xtZ6eE
RhNfYpTl4euiiS/B82sTIzYSXwTb7G+lxRBf3uL3+NK39WnlMaf7lC8Hkzo3
Td6HfcOAvKpc5ZAd+mQGJwZ3dkk1yFPhmdDwVEos+sUENafwYqQS2QoMlTRJ
gQHpF/+Ujz/icki/OK/s/F2sQJ4B5rk5J+Jake1BcXZ6anI/sgP8qn71ea8J
8eXxUcaq3dOIL2zG0meJDsSXguHIEmsn4ov8wP7zGlvii1cG61YHm/jCsayO
ELgSX5inpU3j3YgvexNTLOOFxJfnsSt6HoQQX6Sb5McsQokvbuF9QhXFrmA7
MP3QMur+4MJN5aqqgUjSL28zD07Se8+0xJJ++cePd5hN3S9uoFL3TMjIIP1S
Xx6+YgvVhwCsodTlzBzSL1dY/t877SX9ckFivbZpH+mXOo6qkZ9P+uVR2qWu
rkOkXyz1r1YVXyH9Qh8fQb+BPOpLjyyg2bgGcyEcGKn2SkIe9YW93CUQqFwE
WYuMPUOVmIugp93VvOg65mIQPg2hceswF8P+sF3mvD2kXwKNh49k4f056ktf
gxlbvwhzLwhcsDm3/zDmo77c2RWXWoK5N5z6kyZ+hZz+Duv2Md0+ptvHdPuY
bh+jfNHtY7p9TLeP6faxN/n/t4/9C+ovi7g=
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90,
             89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 
            73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
            57, 56, 55, 54, 53, 52}}]]}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
             114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
            127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 
            140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
            153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 
            36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
            20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 1}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51}]}, 
         {Opacity[0], 
          LineBox[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
            67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
           83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
            100, 101, 102}]}, 
         {Opacity[0], 
          LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
            115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
           128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
           141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
           153}]}}, {
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133602, {2}}]& ], 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133602, {3}}]& ]}, {
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133602, {2}}]& ], 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$133602, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}, {
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$133602, {2}}]& ], 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$133602, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, {{{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdyTtqQgEQQNHBKqWFhUWKKCIiQeL/m7ynib/WJSjWlrY2rkBcoRtwCSoJ
BM/AMJy5hfVutc1ERPO+j/s71+S02Z+Py0vy90if/YKzOIfz+BW/4SIu4TKu
4Cp+xzX8geu4gZu4hdu4g7u4h/t4gId4hD/xF05w+uwDjjEdx4SO45uO44eO
Y0rHMaPjmNNxLOg4lvR/3wDulOgw
          "]]}}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
         1.6]}, {}}, {
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
         1.6]}, {}}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"MAP-Elites\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Random\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Upper Boundary\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.99, 0.3}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.4},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"Step\"", TraditionalForm], 
     FormBox["\"Mean Fitness\"", TraditionalForm]},
   FrameStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->350,
   LabelStyle->{
     GrayLevel[0], 
     Directive[
      GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 51.}, {0.4, 0.62}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, 
       GraphicsComplex[CompressedData["
1:eJzt1ms01HkYwPFhWoTO2FIpUsaQRW0YZhDzzAwzXXYrRNu2pXQybbnErJLE
CLW5bFnJqS2nU6vbumxDqlFRVmmVlctZjdYQZYquFEnbzp6d5//rdHq9r8Yb
5zPPuzm/7zyPTVh04Dp9Go3mqkej/fv/v79nvPX6VquE6Uqe9gPgSSe2z9/4
l9ZGELvtcFV2v0prMyhfe/a7rfc7tTYHCV+eXra5S2sLeGx7jH5IgbYCtrdj
tv8IegY45Q6oKp3vac2EopNNUb6+aBb8YOh2dVYI2h6C97DoBhFoBxDnliSI
k9GOsOLhpfAle9DOwOX6HTx/GD0b6p/Wd8lL0HPAINtEGSZHu8Ca22ddBs+h
XSFTlHIgvAbtBkmq4ieMOjQbUhKM2VENaHdItnQq+qIR7QHSUP9191rQHHhT
sLVsURuaCwPrn5hebUd7gtKsPK9ShfYC69Ee+zg12hs29G6MVzxCz4XGnIGe
zc/QPpAg/+wbn+doX/h1UWRSI2UeqL2mTN/3Ag3AEnbGBL3UWgZg2TrOnf4a
53zwkOaYM9AyPqTc5groIzgXwOdc03FxaJkAMuQObeepuRDyhx+Nbvwb50Lg
Wxnz3qJpfpA/szg2Ub9bO/eDywvOjHcYozXNH05z7xyhf4Jzf7hgZO3Si6aJ
wKMueK7HWJyL4Nz9WyeOoGliEKRmNUQa41wMr5feO/8ITZsHrxK+XJxpgvN5
wHVlsvimOJ8Pgb0TO1rQsg/8kV6kV5oKU/SwDyPoMCgpsCnBPszA5etddpG7
8f2bg8Ubm3D2NPw+LGBWf4rjpkC0FTACDyoGpegZsD/YYnTCZtKL8VT3jLR0
0ovYIILWX0B6MYyWVB0oJ72MSYyJWn2D9CI0mRNefJ30smBy2RHHJtJLgIRR
7d1Benl8ozTgOfU+XcDUO2ZLwQPSS8lQ+wvDx6SXaedYq6yo98aGLoek5J1D
pJfOi5OXeVLvzQPKrdiqfOr9cODa7VRxzjvSi2F+pSKWjt+/J/yiPDnURtkL
tifNZG43Q3vDlqlp9VIGei4ccvhzdpk52gfifrwkU1D2hfh3wSGLKfPgkMnu
Ir2JaAB9wcs7YrSml6BJYQsTLXDOh5c3R3yy0ZpeZj3IfLZ8Cs4F8DZzX7kc
remltSSvWUHNhSDKzXgQMA3nQlhWm9Ncgdb04r23rpAxg/QS3jLixLMhvbRd
So9iMkkvS1VSkZJJehlKjtpWa0t6KRVZZkXYkl6yzBsuKlmkF4N4hlc+i/SS
NShvjrEjvZQqVtQus3+vl2PDVRNmvtfL+/5ILyZ2X5mNb22nenF42MFvS+yg
euFEdtek88l+qdglKHRtRFtA8Yrf7l5nkv2ynKUI3S8j+6W6saFmbTeaCYs4
m4KGX6FZ0Go0kho9jvRyrLRLFGtLesk43bdztjvpRXp9oWQghPRiv7w1V/Qt
6cU//nu6YzLpZfoSSVhLGumlQjLSN3836WV9nj3UHiC9qAw5yfQC0ovNzf3q
4ELSi3WCr97qE6QX16Mhfc6lpJc5EdHTTc+QXlReNqGfUv17wlhxlVtBJdkv
VVuPOkVWk/2ysjzITu8a2S9j3jB+8rpJ9ktyUx6n+hbZL+rDaccD/iD7hb3h
VI49tf8ARH71Y0NbyX7pzr1gnXGH7JctUxz69qI1vbRevJ9bpCT7ZU1P6joO
7kdNL7yKyrsV1L4Ugnrlwgk78fdI04uTdMdpYSfZLwOXc3gPe3DuB5OuSF6b
9eLcHxLLnJt70JperF3rLAepfSuCODOft8ef4FwEVWmympanOBfD8PMFnTTc
v5pe+l3OcnypfTsPVuupf/8Zrenlyin1Dkfq91DTh5PbaB5a9oF195juHtPd
Y7p7THePUb3o7jHdPaa7x3T32H/z/+8e+wfCgJck
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
              90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
              58, 57, 56, 55, 54, 53, 52}}]}]}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
              114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
               127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
              139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
               152, 153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
              38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
              22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
              5, 4, 3, 2, 1}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51}]}, {
           Style[{
             
             Line[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
               67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
               83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
               99, 100, 101, 102}]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             
             Line[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
               115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
              127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
               140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
              152, 153}]}, {
             Directive[
              Opacity[0]]}]}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$133501, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$133501, {
            3}}]}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$133501, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$133501, {
            3}}], {}, {}, {}, {}, {}, {}, {}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$133501, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$133501, {
            3}}], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, 
       GraphicsComplex[CompressedData["
1:eJztlm00lGkYx8dU8pKaZHdrDWFHrC2GXibTxDVjZhCKGNpKMUVJm5ddMWip
Q51ahmrb3chKoldU27Yldcpspqisl7RJaDi2tq0lrRQz1p7meu5Tp8/7aZ4v
c37z/3A/Z+b63f/LWhqzNIJOo9Fc9Gi0/z7fPL3u6+nMVR6Zre7aL2BE/ZnC
7nKblg2gsj8g2NGkXcsMKOJKav7O6dCyGaRK41Z3sDq1PBXWnItnLPsKmQly
A/UvigJkK1jfbTWXewHZBtZUmBZW30VmweoprrJZFg+1PAMelGXkZ85BtofG
taLXT0XIDhDASNr2YzDyTKA3/hY9LQzZEWr0fAR7opDZ0NDGdJ4Tj+wMdyZY
VciSkF3AKOG45mAa8mwYG2aRfDQTeQ5Y7rgdpcxCngsxgYtX5vyAPA/Etxw/
4R1F5sCx+idOFWXI82FguqRLdgrZFRRhDyUXLyJzwXJcvbddJfKCd5gHTfqq
y8O1yAvhRkAL90g9shtEMRJ4yS3I7rAne0qAqA0ZQB7U3VraruV0gKbhdT8V
dWDOh4jSSbJxKsz5kDVmhvRRN+YCeH7f0O7AY8wF4JfWMrFCjbkHjNRE89fo
qbS5B+TH1bGS9bVME8IXTc7xY8djLgSBfN7i9QaYi0Dkvsz3niHmItAseZkm
NMZcDJPSl0f7m2AuhvLLp1fHafB8T+hq21J2bSzmnvD1UPEdZ+p8Lwjfaiqb
heele0HL9uMveqnzvUF27tudVUaYv8Pv8cUkeUNdiS/6YQDNmxQLfTLRDwYE
tWWp+lJwvs2g+LqFX3Yt8WVJbadXPBvfnwkWCQ6mzSHIVqDU439wl5pfG9jc
ZWTnQ80rC7Jrd08zSyS+FNbJvtkvJ748NItOCqfm0wHabQaO+xYSX8yHcmVF
pcSXlf0e352k5pcN4y41Vol/Jr4wt5SWvKDmzwVuRrDZ0tvEl4aiJPnERuKL
VSiXtuM+8cXHyTrv5F/El7xP6WF5g8SXXrb3OaD+z/lQ3n5+6+Qx+Pu7Qnjd
IUPLichciBW43w3BeRj15W3mwWuj5lobW+SFUCCJbbCwR3aDXpsxG2MpdgfJ
xmtik5nIAINlPiucHXEeAHqa0+qnUDkfJr9UZ3OonA9+9VF9cuRRX4Y5wRuC
2JgLIHXwSVglF3MPGN4en67mE1/8o0QJj8TEF7cjB/NzPYkvQdVc79xFxBfN
7JIAiS/x5cOrZ7v/8CO+tJqGtkQuIb4omPeKSzdg7glflo+c0UQRX4xtZ6eE
RhNfYpTl4euiiS/B82sTIzYSXwTb7G+lxRBf3uL3+NK39WnlMaf7lC8Hkzo3
Td6HfcOAvKpc5ZAd+mQGJwZ3dkk1yFPhmdDwVEos+sUENafwYqQS2QoMlTRJ
gQHpF/+Ujz/icki/OK/s/F2sQJ4B5rk5J+Jake1BcXZ6anI/sgP8qn71ea8J
8eXxUcaq3dOIL2zG0meJDsSXguHIEmsn4ov8wP7zGlvii1cG61YHm/jCsayO
ELgSX5inpU3j3YgvexNTLOOFxJfnsSt6HoQQX6Sb5McsQokvbuF9QhXFrmA7
MP3QMur+4MJN5aqqgUjSL28zD07Se8+0xJJ++cePd5hN3S9uoFL3TMjIIP1S
Xx6+YgvVhwCsodTlzBzSL1dY/t877SX9ckFivbZpH+mXOo6qkZ9P+uVR2qWu
rkOkXyz1r1YVXyH9Qh8fQb+BPOpLjyyg2bgGcyEcGKn2SkIe9YW93CUQqFwE
WYuMPUOVmIugp93VvOg65mIQPg2hceswF8P+sF3mvD2kXwKNh49k4f056ktf
gxlbvwhzLwhcsDm3/zDmo77c2RWXWoK5N5z6kyZ+hZz+Duv2Md0+ptvHdPuY
bh+jfNHtY7p9TLeP6faxN/n/t4/9C+ovi7g=
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
              90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
              58, 57, 56, 55, 54, 53, 52}}]}]}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
              114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
               127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
              139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
               152, 153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
              38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
              22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
              5, 4, 3, 2, 1}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51}]}, {
           Style[{
             
             Line[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
               67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
               83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
               99, 100, 101, 102}]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             
             Line[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
               115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
              127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
               140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
              152, 153}]}, {
             Directive[
              Opacity[0]]}]}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$133602, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$133602, {
            3}}]}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$133602, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$133602, {
            3}}], {}, {}, {}, {}, {}, {}, {}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$133602, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$133602, {
            3}}], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJxdyTtqQgEQQNHBKqWFhUWKKCIiQeL/m7ynib/WJSjWlrY2rkBcoRtwCSoJ
BM/AMJy5hfVutc1ERPO+j/s71+S02Z+Py0vy90if/YKzOIfz+BW/4SIu4TKu
4Cp+xzX8geu4gZu4hdu4g7u4h/t4gId4hD/xF05w+uwDjjEdx4SO45uO44eO
Y0rHMaPjmNNxLOg4lvR/3wDulOgw
           "]]}}, {{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}}, {{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {}}, {{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {}}}, {{}, {}}}}, {LabelStyle -> {
        GrayLevel[0], 
        Directive[
         GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]}, 
      FrameLabel -> {"Step", "Mean Fitness"}, Frame -> True, FrameStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, FrameTicksStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, ImageSize -> 350, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0., 0.4}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0., 51.}, {0.4, 0.62}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {"Upper Boundary"}, 
         LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
         LabelStyle -> {}, LegendLayout -> "Column"]]]], {Right, 0.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.832596305588551*^9, 3.833785550724771*^9, {3.833786151411118*^9, 
   3.83378618069881*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"6a18b462-3e16-4b3e-9bae-65c0df7bfa0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanl1MEAN", "}"}], ",", 
     RowBox[{"{", "meanl1STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "8.5"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      FractionBox["1", "GoldenRatio"]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<MAP-Elites\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f12", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"meanl1MEAN", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<MAP-Elites\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "8.5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", "f1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", " ", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanl2MEAN", "}"}], ",", 
     RowBox[{"{", "meanl2STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "8.5"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f22", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"meanl2MEAN", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "8.5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", "f2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", " ", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"8", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "meanoversamples2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Upper Boundary\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "8.5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Step\>\"", ",", "\"\<Elite Number\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_elites_50_steps_random.png\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_elites_50_steps_random.svg\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8322380656311407`*^9, 3.8322380657560463`*^9}, {
  3.8322381001988907`*^9, 3.8322381563018785`*^9}, {3.832238217055805*^9, 
  3.8322382227846146`*^9}, {3.8322406445245414`*^9, 3.8322406590629473`*^9}, {
  3.833786213218431*^9, 3.83378621557135*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"979fb606-bfbc-4651-af7c-4d2cf970baa9"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, GraphicsComplexBox[CompressedData["
1:eJzt1jssQ1EcBvCDRLqIK2m04aK9uaqhEUrrVXrcetRgkRjqlRImwmIQMXSQ
mIVJGotXYjKJUSwShkZqk0gsRkzCROSev/R8sXXT0+XLr1972+F+Odc7tzK2
UMwYCxYx9pP26y1qp8bFGyKrRDrsvNS5/LlakU47U2S3yDqROthjJycbYFNc
j+wD+8GN4v+RA+Bm+XdZC7gVHAS3gdvBIXAY3AHuBHeBu8E94Ai4F9wHjoK5
7BSY9UMPZhb0YBaDHswGoAezQejBbAh6MBuGHszi0IPZCPTgP/bysD+xe6PR
fe7gxxWHp/czdP9pfHvTDN/F6PtOPpW9ynxtkN08WJJY3Tsh62APNys/MvPL
ZANs8rLIUvrp1z6wHyz2kiQHwGovstVe5D7/vdTPHi2GXl3CDj7xMjne5KXz
RuOP7+c702vVwk4eT6wnWSnty83Tn6Ou2zOyDvbwi2x5MnxQI2yATf681XAd
Mei88oH9YDpfyAGw2otstRe5z38vdqjnMTvVXuTegh5cgHtRz2O5VnuRewt6
cAHuRT2P5VrtRe4t6MH/eC/f7eKtJg==
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90,
             89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 
            73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
            57, 56, 55, 54, 53, 52}}]]}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
             114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
            127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 
            140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
            153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 
            36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
            20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 1}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51}]}, 
         {Opacity[0], 
          LineBox[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
            67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
           83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
            100, 101, 102}]}, 
         {Opacity[0], 
          LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
            115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
           128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
           141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
           153}]}}, {
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134081, {2}}]& ], 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134081, {3}}]& ]}, {
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134081, {2}}]& ], 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$134081, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}, {
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134081, {2}}]& ], 
         TagBox[
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$134081, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJzt1r1rU2EUBvC3DiVYhCJX2mpaY4gxhDSY3HynSU60TaoihUIHbQeVdFFo
FzcH38U/wF0QbHUWdRALGtBBsWsHFwWnDoofuGSxvnrPGc5DJ+eb5fDLk1xu
wn3uPSeurS+uHjDG5IeM+TuD1/dWMEeJ3wimHWdHgklHSX/uGE8vmH0xf89G
2TInecbAcT6+OAFOglPgNDgDzoJP8/mJc+A82AcXgtkXF8ElnlM8y+AKuAqu
8fmK6+AZPh9xA9wEt8Ckbdl9ydvaFmzOQA42ZyEHm1nIwWYOcrDpQM42x3l2
tS3YzEMONucgB+/Tl9259qeRK3L9R2j+7sojeiPX/Sj1hp/sFhbk+vDozuCr
sSPye6Qv4ih9/L288vOdOAaOkzfz9rOflvNJgJPgFDgNzoCzYOmLOAfOg31w
gU49m93Z3BYXwSVaW5g+vxqR+0IZXAFXwTXyLj+4vpgU18HcFxI3wE1wC0za
ri8Hp3o/JpYkb2tbsOuLzsGuLzoHu77oHOz6onOw64vOO7S+N50d9CTvaluw
64vOwa4vOgfv05fxFy9jv+4fYUfo+drGpVdbYySfuze4OPb+sTx/PLo1fHjv
9s0JtvRFnkdRig9tbhwqSf9i4Dh9eV2e3F4SJ8BJcAqcBmfAWbD0RZwD58E+
uEAfLmyll5+Ki+ASnbz68Ebxm7gMroCr4FpwPF/uT3WwPF/EDXAT3AKTtuvL
v/9nR/K2tgW7vugc7Pqic7Dri87Bri86B7u+6LzD15Pcv7vaFuz6onOw64vO
weE+Bg73MeVwH4M83Me0w30s3MfCfSzcx8J9LMj/fx/7A7JxBEw=
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90,
             89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 
            73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
            57, 56, 55, 54, 53, 52}}]]}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
             114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
            127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 
            140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
            153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 
            36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
            20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 1}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51}]}, 
         {Opacity[0], 
          LineBox[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
            67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
           83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
            100, 101, 102}]}, 
         {Opacity[0], 
          LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
            115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
           128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
           141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
           153}]}}, {
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134182, {2}}]& ], 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134182, {3}}]& ]}, {
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134182, {2}}]& ], 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          
          Annotation[#, {{Style}, Charting`Private`Tag$134182, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}, {
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134182, {2}}]& ], 
         TagBox[
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]},
          Annotation[#, {{Style}, Charting`Private`Tag$134182, {
            3}}]& ], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, {{{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdycsKQVEYhuE/I0MDAwMDJEmS85m9nZm6BGXsFlyyS0CUPKtWX8//li+3
8zUTEb3Xf+/nPZLPltLvIf13FudwHhdwEbsVXMU1XMcN3MQt3MYd3MU93McD
PMQjPMYTPMUzPMcLvMQJTv99x7Gi41jTcWzoOLZ0HDs6jj0dx4GO40jHcaL/
/AThODIa
          "]]}}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, {
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
         1.6]}, {}}, {
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
         1.6]}, {}}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"MAP-Elites\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Random\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Upper Boundary\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.99, 0.3}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 4.},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"Step\"", TraditionalForm], 
     FormBox["\"Elite Number\"", TraditionalForm]},
   FrameStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->350,
   LabelStyle->{
     GrayLevel[0], 
     Directive[
      GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 51.}, {4, 8.5}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, 
       GraphicsComplex[CompressedData["
1:eJzt1jssQ1EcBvCDRLqIK2m04aK9uaqhEUrrVXrcetRgkRjqlRImwmIQMXSQ
mIVJGotXYjKJUSwShkZqk0gsRkzCROSev/R8sXXT0+XLr1972+F+Odc7tzK2
UMwYCxYx9pP26y1qp8bFGyKrRDrsvNS5/LlakU47U2S3yDqROthjJycbYFNc
j+wD+8GN4v+RA+Bm+XdZC7gVHAS3gdvBIXAY3AHuBHeBu8E94Ai4F9wHjoK5
7BSY9UMPZhb0YBaDHswGoAezQejBbAh6MBuGHszi0IPZCPTgP/bysD+xe6PR
fe7gxxWHp/czdP9pfHvTDN/F6PtOPpW9ynxtkN08WJJY3Tsh62APNys/MvPL
ZANs8rLIUvrp1z6wHyz2kiQHwGovstVe5D7/vdTPHi2GXl3CDj7xMjne5KXz
RuOP7+c702vVwk4eT6wnWSnty83Tn6Ou2zOyDvbwi2x5MnxQI2yATf681XAd
Mei88oH9YDpfyAGw2otstRe5z38vdqjnMTvVXuTegh5cgHtRz2O5VnuRewt6
cAHuRT2P5VrtRe4t6MH/eC/f7eKtJg==
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
              90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
              58, 57, 56, 55, 54, 53, 52}}]}]}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
              114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
               127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
              139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
               152, 153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
              38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
              22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
              5, 4, 3, 2, 1}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51}]}, {
           Style[{
             
             Line[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
               67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
               83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
               99, 100, 101, 102}]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             
             Line[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
               115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
              127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
               140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
              152, 153}]}, {
             Directive[
              Opacity[0]]}]}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$134081, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$134081, {
            3}}]}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$134081, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$134081, {
            3}}], {}, {}, {}, {}, {}, {}, {}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$134081, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}, {{Style}, Charting`Private`Tag$134081, {
            3}}], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, 
       GraphicsComplex[CompressedData["
1:eJzt1r1rU2EUBvC3DiVYhCJX2mpaY4gxhDSY3HynSU60TaoihUIHbQeVdFFo
FzcH38U/wF0QbHUWdRALGtBBsWsHFwWnDoofuGSxvnrPGc5DJ+eb5fDLk1xu
wn3uPSeurS+uHjDG5IeM+TuD1/dWMEeJ3wimHWdHgklHSX/uGE8vmH0xf89G
2TInecbAcT6+OAFOglPgNDgDzoJP8/mJc+A82AcXgtkXF8ElnlM8y+AKuAqu
8fmK6+AZPh9xA9wEt8Ckbdl9ydvaFmzOQA42ZyEHm1nIwWYOcrDpQM42x3l2
tS3YzEMONucgB+/Tl9259qeRK3L9R2j+7sojeiPX/Sj1hp/sFhbk+vDozuCr
sSPye6Qv4ih9/L288vOdOAaOkzfz9rOflvNJgJPgFDgNzoCzYOmLOAfOg31w
gU49m93Z3BYXwSVaW5g+vxqR+0IZXAFXwTXyLj+4vpgU18HcFxI3wE1wC0za
ri8Hp3o/JpYkb2tbsOuLzsGuLzoHu77oHOz6onOw64vOO7S+N50d9CTvaluw
64vOwa4vOgfv05fxFy9jv+4fYUfo+drGpVdbYySfuze4OPb+sTx/PLo1fHjv
9s0JtvRFnkdRig9tbhwqSf9i4Dh9eV2e3F4SJ8BJcAqcBmfAWbD0RZwD58E+
uEAfLmyll5+Ki+ASnbz68Ebxm7gMroCr4FpwPF/uT3WwPF/EDXAT3AKTtuvL
v/9nR/K2tgW7vugc7Pqic7Dri87Bri86B7u+6LzD15Pcv7vaFuz6onOw64vO
weE+Bg73MeVwH4M83Me0w30s3MfCfSzcx8J9LMj/fx/7A7JxBEw=
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
              90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
              74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
              58, 57, 56, 55, 54, 53, 52}}]}]}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 
              114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
               127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
              139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
               152, 153, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
              38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
              22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
              5, 4, 3, 2, 1}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51}]}, {
           Style[{
             
             Line[{52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
               67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
               83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
               99, 100, 101, 102}]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             
             Line[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
               115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
              127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
               140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
              152, 153}]}, {
             Directive[
              Opacity[0]]}]}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$134182, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$134182, {
            3}}]}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$134182, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$134182, {
            3}}], {}, {}, {}, {}, {}, {}, {}}, {{
           Directive[
            PointSize[
             Rational[1, 72]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$134182, {
            2}}], 
          Annotation[{
            Directive[
             PointSize[
              Rational[1, 72]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]]}, {{Style}, Charting`Private`Tag$134182, {
            3}}], {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJxdycsKQVEYhuE/I0MDAwMDJEmS85m9nZm6BGXsFlyyS0CUPKtWX8//li+3
8zUTEb3Xf+/nPZLPltLvIf13FudwHhdwEbsVXMU1XMcN3MQt3MYd3MU93McD
PMQjPMYTPMUzPMcLvMQJTv99x7Gi41jTcWzoOLZ0HDs6jj0dx4GO40jHcaL/
/AThODIa
           "]]}}, {{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}}, {{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {}}, {{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {}}}, {{}, {}}}}, {LabelStyle -> {
        GrayLevel[0], 
        Directive[
         GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]}, 
      FrameLabel -> {"Step", "Elite Number"}, Frame -> True, FrameStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, FrameTicksStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, ImageSize -> 350, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 4.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0., 51.}, {4, 8.5}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[1, 60]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {"Upper Boundary"}, 
         LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
         LabelStyle -> {}, LegendLayout -> "Column"]]]], {Right, 0.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.832596318325392*^9, {3.8337855605437603`*^9, 3.833785562984249*^9}, 
   3.833786216790132*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"1feafeb3-2418-462c-91f6-939f649b73dd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>0.8 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"219a6cdf-46ef-4f42-8a18-48239c1aa8f2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 297, 5, 78, "Title",ExpressionUUID->"481eda54-84cf-4b60-b5cf-c8e46c0abe72"],
Cell[880, 29, 321, 8, 74, "Subsubsection",ExpressionUUID->"b65ee063-db04-4cab-b478-15d9b8d4525f"],
Cell[CellGroupData[{
Cell[1226, 41, 161, 3, 42, "Section",ExpressionUUID->"285c1564-0916-43b4-b0e7-3a1f6033fee9"],
Cell[1390, 46, 7183, 171, 524, "Input",ExpressionUUID->"81839cac-37d5-4d8f-90ce-fbe49998178f"],
Cell[8576, 219, 3564, 88, 353, "Input",ExpressionUUID->"d9b20218-0b0c-41b5-b6d3-87e163d8424a"],
Cell[12143, 309, 3754, 85, 263, "Input",ExpressionUUID->"3b04d7cb-01fa-4db8-8b68-a83e9a30b89e"],
Cell[15900, 396, 4760, 124, 225, "Input",ExpressionUUID->"b36965ea-d38f-4d59-b223-0840122d5a93"],
Cell[20663, 522, 2113, 51, 126, "Input",ExpressionUUID->"2938d90f-6d0a-45a8-a58e-bda930cb6dad"],
Cell[22779, 575, 19982, 463, 904, "Input",ExpressionUUID->"fbeb9c1b-2b5d-4233-a67d-dc7520ceccd7"],
Cell[42764, 1040, 8830, 207, 278, "Input",ExpressionUUID->"4f79cbdc-f42e-4149-86ea-49e21191d064"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51631, 1252, 156, 3, 52, "Section",ExpressionUUID->"2cadae6f-cd35-4099-8a34-085c94fd7775"],
Cell[51790, 1257, 298, 6, 38, "Input",ExpressionUUID->"384c949a-c509-4136-b380-47624f16cbd8"],
Cell[52091, 1265, 1008, 26, 68, "Input",ExpressionUUID->"9385949c-8510-41f9-86b8-911de6fd8c6c"],
Cell[53102, 1293, 2480, 40, 22, "Input",ExpressionUUID->"89d2d4d9-d061-4d35-9dbc-42bef7c98b88"],
Cell[55585, 1335, 2736, 75, 203, "Input",ExpressionUUID->"485d1540-b7a5-4074-84c8-dba5b33455b6"],
Cell[58324, 1412, 5198, 101, 249, "Input",ExpressionUUID->"f12bc893-543d-4d6e-a459-b14aecd7998a"],
Cell[63525, 1515, 3894, 87, 249, "Input",ExpressionUUID->"c67b06ec-2684-471d-b6e9-6b04e2956f15"],
Cell[67422, 1604, 982, 21, 38, "Input",ExpressionUUID->"5edc334f-12a7-474b-bb0b-f5c35e9e5370"],
Cell[68407, 1627, 1341, 29, 68, "Input",ExpressionUUID->"6125f4c2-6ba4-4fec-8f42-9ae487c2c517"],
Cell[CellGroupData[{
Cell[69773, 1660, 3605, 91, 83, "Input",ExpressionUUID->"a4064425-bc41-4d7c-b0fc-ec44cf96664f"],
Cell[73381, 1753, 392, 8, 25, "Output",ExpressionUUID->"73480002-7c38-4810-99a9-bc859bf290e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73810, 1766, 3654, 91, 83, "Input",ExpressionUUID->"ffee5c99-45d8-4d6c-802c-4ea69732e67d"],
Cell[77467, 1859, 391, 8, 25, "Output",ExpressionUUID->"e33889ba-4a0e-4317-ab21-d27491b8cedf"]
}, Open  ]],
Cell[77873, 1870, 5022, 139, 128, "Input",ExpressionUUID->"1a51f26b-fa62-4cfd-80f5-7db1bc4e3589"],
Cell[82898, 2011, 3442, 73, 53, "Input",ExpressionUUID->"34f2b7ed-9d9e-4921-9d90-10eb4740ca82"],
Cell[CellGroupData[{
Cell[86365, 2088, 3726, 98, 138, "Input",ExpressionUUID->"72f9cc98-222c-4051-b8ee-6af439940b5f"],
Cell[90094, 2188, 204413, 3454, 174, "Output",ExpressionUUID->"59683322-7893-4cce-afa1-3b4a6682f776"],
Cell[294510, 5644, 350, 5, 41, "Output",ExpressionUUID->"b4caed87-4630-4232-b32f-c24d3604fc60"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[294909, 5655, 223, 5, 52, "Section",ExpressionUUID->"e1c5df26-8349-43d5-806b-c3ad12c8c57d"],
Cell[295135, 5662, 2842, 62, 113, "Input",ExpressionUUID->"a60966a2-5010-45e4-a8d5-fde788d4df7d"],
Cell[297980, 5726, 464, 10, 22, "Input",ExpressionUUID->"0c380ae2-559e-4c16-b1f2-a84047bdea2a"],
Cell[298447, 5738, 2216, 54, 113, "Input",ExpressionUUID->"5e3502fb-3955-4bf8-9e64-8a16d6f223c5"],
Cell[300666, 5794, 408, 9, 22, "Input",ExpressionUUID->"0a667c9c-7e45-4900-a6d6-3c7d5b33b97c"],
Cell[301077, 5805, 3096, 67, 158, "Input",ExpressionUUID->"ecbca38e-3d1d-40b6-b23d-cb1b5260d483"],
Cell[CellGroupData[{
Cell[304198, 5876, 213, 3, 22, "Input",ExpressionUUID->"808b699b-215f-4bbd-9c96-7330867eb5d9"],
Cell[304414, 5881, 214, 3, 25, "Output",ExpressionUUID->"b245d4f5-59c3-40f1-8a89-000176b6b33a"]
}, Open  ]],
Cell[304643, 5887, 2451, 61, 99, "Input",ExpressionUUID->"aa7f7277-fb11-4448-a9c1-26ed7ab0c432"],
Cell[CellGroupData[{
Cell[307119, 5952, 5639, 150, 245, "Input",ExpressionUUID->"415f9b4d-fef6-4678-96c1-8e4f91eb0a6d"],
Cell[312761, 6104, 48369, 1021, 194, "Output",ExpressionUUID->"6a18b462-3e16-4b3e-9bae-65c0df7bfa0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361167, 7130, 5433, 148, 229, "Input",ExpressionUUID->"979fb606-bfbc-4651-af7c-4d2cf970baa9"],
Cell[366603, 7280, 43511, 942, 203, "Output",ExpressionUUID->"1feafeb3-2418-462c-91f6-939f649b73dd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

