(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    568900,      11249]
NotebookOptionsPosition[    563780,      11168]
NotebookOutlinePosition[    564304,      11187]
CellTagsIndexPosition[    564261,      11184]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MAP-Elites Algorithm ", "Title",
 CellChangeTimes->{{3.8133462589815006`*^9, 3.8133462952518115`*^9}, {
   3.8133464558226714`*^9, 3.8133465117995586`*^9}, {3.838455872646558*^9, 
   3.8384558825734644`*^9}, 
   3.838455912805142*^9},ExpressionUUID->"d5cba4f6-30b5-4420-abe2-\
51c097d78476"],

Cell["\<\
Yibin Jiang, Abhishek Sharma
Cronin Lab
University of Glasgow\
\>", "Subsubsection",
 CellChangeTimes->{{3.8133462718972087`*^9, 3.813346284413179*^9}, {
  3.8384558561805887`*^9, 3.838455857656348*^9}, {3.8384559152353487`*^9, 
  3.838455921547884*^9}},ExpressionUUID->"00e65c47-0df5-4887-ae6d-\
82e78d497849"],

Cell[CellGroupData[{

Cell["Define functions", "Section",
 CellChangeTimes->{{3.814273451832561*^9, 
  3.814273453728362*^9}},ExpressionUUID->"285c1564-0916-43b4-b0e7-\
3a1f6033fee9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LaunchKernels", "[", "8", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ObjectiveFunction", "[", "X_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"performance", ",", "attribute"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Define", " ", "a", " ", "objective", " ", "function", " ", "to", " ", 
       "map", " ", "input", " ", 
       RowBox[{"(", "X", ")"}], " ", "to", " ", "a", " ", "performance", " ", 
       "and", " ", "attribute", " ", "space", " ", 
       RowBox[{"(", "Y", ")"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"performance", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{"X", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"attribute", " ", "=", " ", 
       RowBox[{"Round", "[", 
        FractionBox[
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "0.1"], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"performance", ",", "attribute"}], "}"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntializePool", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pool", ",", "indexes", ",", "Xtemp", ",", "Ytemp", ",", "Maxindex", ",",
       "Sample"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "create", " ", "the", " ", "initial", " ", "pool", " ", "according", " ",
       "to", " ", "the", " ", "attribute"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pool", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"indexes", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Y", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
            "attributeIndex"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Xtemp", " ", "=", " ", 
         RowBox[{
         "X", "\[LeftDoubleBracket]", "indexes", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Ytemp", " ", "=", " ", 
         RowBox[{
         "Y", "\[LeftDoubleBracket]", "indexes", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Maxindex", " ", "=", " ", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{"Ytemp", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sample", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
           "Xtemp", "\[LeftDoubleBracket]", "Maxindex", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "Ytemp", "\[LeftDoubleBracket]", "Maxindex", 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pool", ",", "Sample"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"attributeIndex", ",", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Y", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pool", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CrossOver", "[", 
   RowBox[{"pool_", ",", "featureNum_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"indexes", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexes", " ", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "pool", "]"}]}], "}"}], ",", "2"}], "]"}]}], 
     " ", ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{
         "pool", "\[LeftDoubleBracket]", "indexes", "\[RightDoubleBracket]"}],
          "//", "MatrixForm"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"offspring", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"pool", "\[LeftDoubleBracket]", 
           RowBox[{"indexes", "\[LeftDoubleBracket]", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], ",", "1"}], "]"}], 
            "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "]"}], 
         "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "featureNum"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "offspring", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "offspring", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mutation", "[", 
   RowBox[{"offspringOrgi_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"indexes", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"offspring", " ", "=", " ", 
      RowBox[{"offspringOrgi", "+", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "sigma"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "offspringOrgi", "]"}], "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "offspring", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.813735541849811*^9, 3.813735595532751*^9}, {
   3.81373564731514*^9, 3.813735676544073*^9}, {3.813735814964138*^9, 
   3.8137358677196493`*^9}, {3.81373602148602*^9, 3.813736036003356*^9}, {
   3.8137362195852795`*^9, 3.81373622066131*^9}, {3.813737509057868*^9, 
   3.813737536075266*^9}, {3.813737992039117*^9, 3.813738083790639*^9}, {
   3.813738949943717*^9, 3.8137390283497853`*^9}, {3.813739088375793*^9, 
   3.813739208817222*^9}, {3.8137394234543157`*^9, 3.8137394298864975`*^9}, {
   3.813739860410229*^9, 3.813739870506488*^9}, {3.8141268894220114`*^9, 
   3.814126889981372*^9}, {3.814264021995516*^9, 3.814264025861167*^9}, 
   3.8142740768919563`*^9, 3.814274165060122*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"81839cac-37d5-4d8f-90ce-fbe49998178f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateSamples", "[", 
   RowBox[{
   "pool_", ",", "featureNum_", ",", "sigma_", ",", "mutationRate_", ",", 
    RowBox[{"{", 
     RowBox[{"batchSizeC_", ",", "batchSizeM_", ",", "batchSizeR_"}], "}"}]}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"samples", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"samples", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Crossover", " ", "+", " ", "Mutation"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", " ", "=", " ", 
         RowBox[{"CrossOver", "[", 
          RowBox[{"pool", ",", "featureNum"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", "mutationRate"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"offspring", " ", "=", " ", 
           RowBox[{"Mutation", "[", 
            RowBox[{"offspring", ",", "sigma"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"samples", ",", "offspring"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "batchSizeC"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "Mutation", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", " ", "=", " ", 
         RowBox[{
          RowBox[{"pool", "\[LeftDoubleBracket]", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "pool", "]"}]}], "}"}], "]"}], 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ";;", "featureNum"}], "\[RightDoubleBracket]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"offspring", " ", "=", " ", 
         RowBox[{"Mutation", "[", 
          RowBox[{"offspring", ",", "sigma"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"samples", ",", "offspring"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "batchSizeM"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Random", " ", "sampling"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "featureNum"}], "}"}]}], "]"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"samples", ",", "offspring"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "batchSizeR"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "samples", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8137406931167345`*^9, {3.8137417504632044`*^9, 3.8137417554688587`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d9b20218-0b0c-41b5-b6d3-87e163d8424a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdatePool", "[", 
   RowBox[{"samples_", ",", "pool_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "indexes", ",", "poolindexes", ",", "poolelite", ",", "samplesTemp", ",",
       "Maxindex", ",", "elite", ",", "originalpool"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"originalpool", "=", "pool"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"indexes", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"samples", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
            "attributeIndex"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"poolindexes", " ", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"pool", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
            "attributeIndex"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"poolelite", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
          "pool", "\[LeftDoubleBracket]", "poolindexes", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"samplesTemp", " ", "=", " ", 
         RowBox[{
         "samples", "\[LeftDoubleBracket]", "indexes", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Maxindex", " ", "=", " ", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{"samplesTemp", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"elite", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
          "samplesTemp", "\[LeftDoubleBracket]", "Maxindex", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "poolindexes", "]"}], "<", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"originalpool", ",", "elite"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"elite", "\[LeftDoubleBracket]", 
            RowBox[{"-", "2"}], "\[RightDoubleBracket]"}], ">", 
           RowBox[{"poolelite", "\[LeftDoubleBracket]", 
            RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "originalpool", "\[LeftDoubleBracket]", "poolindexes", 
            "\[RightDoubleBracket]"}], " ", "=", " ", "elite"}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"attributeIndex", ",", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"samples", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "originalpool", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8137689299296503`*^9, 3.8137689463461676`*^9}, {
  3.81376900050595*^9, 3.8137690203622227`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3b04d7cb-01fa-4db8-8b68-a83e9a30b89e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromXtoSpectrum1", "[", 
   RowBox[{"X_", ",", "Qset_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gridweights", ",", "standardD", ",", "spectrum", ",", "griddistance"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"griddistance", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "i"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", "j"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              "-", "k"}], ")"}], "2"]}], ")"}], 
         RowBox[{"1", "/", "2"}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Subdivide", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dimensions", "@", "shapes"}], ")"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Subdivide", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dimensions", "@", "shapes"}], ")"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Subdivide", "[", 
           RowBox[{"0", ",", "1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dimensions", "@", "shapes"}], ")"}], 
              "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
             "1"}]}], "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gridweights", " ", "=", 
      RowBox[{"N", "[", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", 
           RowBox[{"0.0001", "+", 
            RowBox[{"0.08", "*", 
             RowBox[{
             "X", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}]}]}]}], "]"}], ",", "griddistance"}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"Flatten", "[", "gridweights", "]"}], "]"}], ">", "0"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"gridweights", " ", "=", " ", 
        FractionBox["gridweights", 
         RowBox[{"Total", "[", 
          RowBox[{"Flatten", "[", "gridweights", "]"}], "]"}]]}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"spectrum", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"spectrum", " ", "=", " ", 
        RowBox[{"spectrum", " ", "+", 
         RowBox[{
          RowBox[{"gridweights", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}], "*", 
          RowBox[{"Qset", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j", ",", "k", ",", "All"}], 
           "\[RightDoubleBracket]"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "gridweights"}], ")"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "gridweights"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "gridweights"}], ")"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "spectrum", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.814263097565496*^9, 3.814263100821383*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b36965ea-d38f-4d59-b223-0840122d5a93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromXtoSpectrum2", "[", 
   RowBox[{"X_", ",", "Qset_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gridweights", ",", "standardD", ",", "spectrum", ",", "griddistance"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"spectrum", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
          "X", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
         ")"}], "*", 
        RowBox[{"Qset", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             FractionBox["1", "8"]], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             FractionBox["1", "10"]], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             FractionBox["1", "10"]], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"Round", "[", 
            FractionBox[
             RowBox[{
             "X", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
             FractionBox["1", "3"]], "]"}], "+", "1"}], ",", "All"}], 
         "\[RightDoubleBracket]"}]}], " ", "+", 
       RowBox[{
        RowBox[{"X", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
        RowBox[{"Qset", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "All"}], 
         "\[RightDoubleBracket]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "spectrum", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.814262957483354*^9, 3.814263114526353*^9}, {
   3.8142631578961287`*^9, 3.8142631945270567`*^9}, {3.8142635239917727`*^9, 
   3.814263540374486*^9}, {3.814263589368655*^9, 3.814263597283312*^9}, {
   3.814263635400105*^9, 3.814263664760144*^9}, {3.8204598864911995`*^9, 
   3.820459887570162*^9}, 3.820459934345614*^9, {3.8204601593058825`*^9, 
   3.820460161240738*^9}, {3.8204604864811525`*^9, 3.8204604867028713`*^9}, 
   3.8204605237346644`*^9, 3.831882420472542*^9, 3.831913820792778*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"2938d90f-6d0a-45a8-a58e-bda930cb6dad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fromSpetrumtoY", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rescaleddata", ",", "peaks", ",", "prominences", ",", "class", ",", 
      "fitness", ",", "boundary1", ",", "boundary2", ",", "fitness1", ",", 
      "fitness2", ",", "function", ",", "figure"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rescaleddata", " ", "=", " ", 
      RowBox[{"Rescale", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"peaks", " ", "=", " ", 
      RowBox[{"FindPeaks", "[", "rescaleddata", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"peaks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], " ", "=", " ", 
      RowBox[{"Round", "[", 
       RowBox[{"peaks", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], " ", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"prominences", " ", "=", " ", 
      RowBox[{"Prominence", "[", 
       RowBox[{"wavelength", ",", "rescaleddata", ",", "peaks"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"peaks", " ", "=", " ", 
      RowBox[{"peaks", "\[LeftDoubleBracket]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"prominences", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", ">", "0.01"}], "&"}], ")"}]}]}], "]"}], "]"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prominences", " ", "=", " ", 
      RowBox[{"prominences", "\[LeftDoubleBracket]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"prominences", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", ">", "0.01"}], "&"}], ")"}]}]}], "]"}], "]"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[Equal]", "0"}], 
       ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "False"}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[Equal]", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"class", " ", "=", " ", 
         RowBox[{"Ceiling", "[", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"wavelength", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
               "peaks", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", "-",
              " ", 
             RowBox[{"Min", "[", "wavelength", "]"}]}], ")"}], "0.05"], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fitness", " ", "=", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"Total", "[", "rescaleddata", "]"}]], 
          RowBox[{"Total", "[", 
           RowBox[{"rescaleddata", "\[LeftDoubleBracket]", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "wavelength", "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "peaks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ",
                   "-", "0.05"}], "<", 
                 RowBox[{
                 "wavelength", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}]}], "&&", 
                RowBox[{
                 RowBox[{
                 "wavelength", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}], "<", 
                 RowBox[{
                  RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{
                    "peaks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ",
                   "+", "0.05"}]}]}], "&"}]}], "]"}], 
            "\[RightDoubleBracket]"}], "]"}]}]}]}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[GreaterEqual]", 
        "2"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"peaks", " ", "=", " ", 
         RowBox[{"peaks", "\[LeftDoubleBracket]", 
          RowBox[{"Ordering", "[", 
           RowBox[{"prominences", ",", 
            RowBox[{"-", "2"}]}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"prominences", " ", "=", " ", 
         RowBox[{"prominences", "\[LeftDoubleBracket]", 
          RowBox[{"Ordering", "[", 
           RowBox[{"prominences", ",", 
            RowBox[{"-", "2"}]}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"class", " ", "=", 
         RowBox[{"Ceiling", "[", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"wavelength", "\[LeftDoubleBracket]", 
              RowBox[{"peaks", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
              "\[RightDoubleBracket]"}], " ", "-", " ", 
             RowBox[{"Min", "[", "wavelength", "]"}]}], ")"}], "0.05"], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"boundary1", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "wavelength", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "-", "0.05"}], "<", 
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}]}], "&&", 
             RowBox[{
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}], "<", 
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "+", "0.05"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"boundary2", " ", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "wavelength", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "-", "0.05"}], "<", 
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}]}], "&&", 
             RowBox[{
              RowBox[{
              "wavelength", "\[LeftDoubleBracket]", "#", 
               "\[RightDoubleBracket]"}], "<", 
              RowBox[{
               RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{
                 "peaks", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], " ", 
               "+", "0.05"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fitness1", " ", "=", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"Total", "[", 
            RowBox[{"rescaleddata", "\[LeftDoubleBracket]", 
             RowBox[{"Union", "[", 
              RowBox[{"boundary1", ",", "boundary2"}], "]"}], 
             "\[RightDoubleBracket]"}], "]"}]}], 
          RowBox[{"Total", "[", "rescaleddata", "]"}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fitness2", "=", " ", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"Total", "[", 
            RowBox[{
            "rescaleddata", "\[LeftDoubleBracket]", "boundary2", 
             "\[RightDoubleBracket]"}], "]"}]}], 
          RowBox[{"Total", "[", "rescaleddata", "]"}]]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"function", " ", "=", " ", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"wavelength", ",", "rescaleddata"}], "}"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"figure", " ", "=", " ", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"wavelength", ",", "rescaleddata"}], "}"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "i", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", "0"}], "}"}], ",", "i"}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                   RowBox[{"peaks", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"peaks", "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[Equal]", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "figure", ",", "fitness", ",", "class"}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", "prominences", "]"}], " ", "\[GreaterEqual]", 
        "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "figure", ",", 
          RowBox[{"{", 
           RowBox[{"fitness1", ",", "fitness2"}], "}"}], ",", "class"}], 
         "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Prominence", "[", 
   RowBox[{"wavelength_", ",", "rescaleddata_", ",", "peaks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "function", ",", "plot", ",", "prominences", ",", "solutions", ",", 
      "leftBasis", ",", "rightBasis", ",", "leftwavelengths", ",", 
      "rightwavelengths", ",", "leftHeight", ",", "rightHeight", ",", 
      "prominence"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"function", " ", "=", " ", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"wavelength", ",", "rescaleddata"}], "}"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"prominences", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"plot", " ", "=", " ", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"function", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "wavelength", "]"}], ",", 
              RowBox[{"Max", "[", "wavelength", "]"}]}], "}"}], ",", 
            RowBox[{"Mesh", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "peaks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "}"}], "}"}]}], ",", 
            RowBox[{"MeshFunctions", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"#2", "&"}], "}"}]}], ",", 
            RowBox[{"MeshStyle", "\[Rule]", 
             RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"PlotPoints", "\[Rule]", "10000"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"solutions", "=", 
          RowBox[{"Sort", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Normal", "@", "plot"}], ",", 
             RowBox[{
              RowBox[{"Point", "[", 
               RowBox[{"{", 
                RowBox[{"x_", ",", "y_"}], "}"}], "]"}], "\[Rule]", "x"}], 
             ",", "Infinity"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"solutions", " ", "=", " ", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"solutions", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"x", " ", "-", 
                RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{
                  "peaks", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
               "]"}], "\[LessEqual]", "0.01"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"leftBasis", " ", "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Max", "[", " ", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"solutions", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", ">", 
                 RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{
                   "peaks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}]}]}],
               "]"}], "]"}], ",", 
            RowBox[{"Min", "[", "wavelength", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rightBasis", " ", "=", " ", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"solutions", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "<", 
                 RowBox[{"wavelength", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{
                   "peaks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}]}]}],
               "]"}], "]"}], ",", 
            RowBox[{"Max", "[", "wavelength", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"leftwavelengths", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"wavelength", ",", 
            RowBox[{
             RowBox[{"leftBasis", "\[LessEqual]", "#", "\[LessEqual]", 
              RowBox[{"wavelength", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "peaks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rightwavelengths", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"wavelength", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"wavelength", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{
                "peaks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
              "\[LessEqual]", "#", "\[LessEqual]", "rightBasis"}], "&"}]}], 
           "]"}]}], " ", ";", "\[IndentingNewLine]", 
         RowBox[{"leftHeight", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"function", "[", "leftwavelengths", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rightHeight", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"function", "[", "rightwavelengths", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"prominence", " ", "=", " ", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "peaks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
             "-", " ", "leftHeight"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "peaks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
             "-", " ", "rightHeight"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "peaks", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prominences", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.814170797313128*^9, {3.814171223088298*^9, 3.81417122437014*^9}, {
   3.814176824496523*^9, 3.8141768310123587`*^9}, {3.814176963900977*^9, 
   3.814176972263845*^9}, {3.8142083682993236`*^9, 3.8142084145411577`*^9}, {
   3.814255363565926*^9, 3.814255370901895*^9}, {3.814255787989859*^9, 
   3.81425581470287*^9}, {3.814255977901678*^9, 3.814255981973424*^9}, {
   3.814257891798563*^9, 3.814257915823564*^9}, 3.82046012365285*^9, 
   3.8204614684424305`*^9, {3.8204619514071393`*^9, 3.820461962400135*^9}, {
   3.8204843876699247`*^9, 3.8204845739287157`*^9}, {3.820484622707676*^9, 
   3.820484672263245*^9}, {3.820484935915494*^9, 3.8204849367279797`*^9}, {
   3.820485136089189*^9, 3.820485136966069*^9}, {3.820485209681417*^9, 
   3.820485212728498*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"fbeb9c1b-2b5d-4233-a67d-dc7520ceccd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ObjectiveFunction2", "[", 
   RowBox[{"X_", ",", "Qset_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "Y", ",", "results", ",", "XNew", ",", "YNew", ",", 
      "figures"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fromXtoSpectrum2", "[", 
         RowBox[{
          RowBox[{"X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           ",", "Qset"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dimensions", "@", "X"}], ")"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fromSpetrumtoY", "[", 
         RowBox[{
         "data", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
           "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
             "}"}]}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
          "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"results", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{"100", "*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                   "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{"10000", "*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
           "]"}]}], "*)"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"XNew", " ", "=", " ", 
      RowBox[{"results", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YNew", " ", "=", " ", 
      RowBox[{
       RowBox[{"results", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{
         RowBox[{"-", "2"}], ";;"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"figures", " ", "=", " ", 
      RowBox[{
       RowBox[{"results", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "3"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"XNew", ",", "YNew", ",", "figures"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8141777376075172`*^9, 3.8141778090164433`*^9}, {
   3.8141810349197197`*^9, 3.8141810486087093`*^9}, {3.814182344151513*^9, 
   3.814182400101822*^9}, 3.814183622108159*^9, {3.814256382327455*^9, 
   3.814256389192567*^9}, {3.814256445815024*^9, 3.8142564599761963`*^9}, 
   3.8142632726125174`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"4f79cbdc-f42e-4149-86ea-49e21191d064"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run tests", "Section",
 CellChangeTimes->{{3.8142734695936317`*^9, 
  3.814273472473967*^9}},ExpressionUUID->"2cadae6f-cd35-4099-8a34-\
085c94fd7775"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomseed", "=", " ", "113"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "randomseed", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wavelength", " ", "=", " ", 
   FractionBox[
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "400", ",", "900", ",", 
        FractionBox["400", "999"]}], "}"}]}], "]"}], "1000"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shapes", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "20", ",", "60", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "0.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3", ",", "0.2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomshapes", " ", "=", " ", "shapes"}], ";"}]}], "Input",
 CellChangeTimes->{{3.820488734773844*^9, 3.820488756074627*^9}, {
   3.820488813743761*^9, 3.820488839748795*^9}, 3.8204892599457693`*^9, {
   3.820489792072822*^9, 3.820489792215702*^9}, 3.8204899728501263`*^9, 
   3.820490046436122*^9, {3.831912047951704*^9, 3.831912048995783*^9}, {
   3.831913205863306*^9, 3.831913206142106*^9}, {3.8376972448727713`*^9, 
   3.8376972725447993`*^9}},ExpressionUUID->"7e89e2c6-5867-4ca0-a6c9-\
9aa16e23e8a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Read", " ", "in", " ", "the", " ", "spectral", " ", "data", " ", "of", 
    " ", "different", " ", "nanostructures"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Qset", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Qset.mx\>\""}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.813946160363731*^9, 3.81394621735143*^9, {3.813946281710989*^9, 
   3.8139463564260597`*^9}, {3.813946475437609*^9, 3.813946504795007*^9}, {
   3.8139469249672766`*^9, 3.813946943719988*^9}, 3.8139469959774885`*^9, {
   3.8139470427453084`*^9, 3.8139473169822693`*^9}, {3.813947364131009*^9, 
   3.81394744742045*^9}, {3.8139476027334557`*^9, 3.8139476110856476`*^9}, {
   3.8139476914720864`*^9, 3.8139476944593763`*^9}, {3.813947734076022*^9, 
   3.813947760446555*^9}, {3.81394796817122*^9, 3.813947968522847*^9}, {
   3.813948063797364*^9, 3.8139480647568417`*^9}, {3.8139481167783937`*^9, 
   3.81394828838587*^9}, {3.8139483361384315`*^9, 3.813948376298382*^9}, {
   3.8139484434096427`*^9, 3.813948496602287*^9}, {3.8139485563050127`*^9, 
   3.813948568047907*^9}, {3.813948621711732*^9, 3.8139486740409775`*^9}, {
   3.8139487059076333`*^9, 3.813948707213517*^9}, {3.81395000713811*^9, 
   3.8139500090664735`*^9}, {3.814012461919744*^9, 3.814012527721464*^9}, {
   3.814012561860445*^9, 3.8140125971476593`*^9}, {3.814017430586113*^9, 
   3.814017449543023*^9}, 3.814017499607204*^9, {3.814106516964219*^9, 
   3.814106520633925*^9}, {3.814106660180436*^9, 3.814106663836843*^9}, {
   3.814126445601339*^9, 3.8141264457693768`*^9}, {3.8141266594551497`*^9, 
   3.8141267140149045`*^9}, {3.8141271848073893`*^9, 3.814127219241496*^9}, {
   3.814162492567008*^9, 3.814162493232128*^9}, {3.814162735863748*^9, 
   3.814162743932541*^9}, {3.814163718491027*^9, 3.814163718828598*^9}, {
   3.8141816896612463`*^9, 3.8141817118578463`*^9}, 3.8142576477397614`*^9, {
   3.814274111614461*^9, 3.814274117445602*^9}, {3.814274714362812*^9, 
   3.8142747168225937`*^9}, {3.8142756762804213`*^9, 
   3.8142756773752337`*^9}, {3.814275723500198*^9, 3.814275725510036*^9}, {
   3.820424497830981*^9, 3.8204245061240983`*^9}, {3.820425324345192*^9, 
   3.820425408528713*^9}, {3.820425533722089*^9, 3.82042555549557*^9}, {
   3.8204607986637974`*^9, 3.820460798861103*^9}, {3.820460829693699*^9, 
   3.820460837118531*^9}, {3.82048464315341*^9, 3.820484646183735*^9}, 
   3.820484841510436*^9, {3.82048584873028*^9, 3.820486011694305*^9}, {
   3.8204888522944927`*^9, 3.8204888845856323`*^9}, {3.8337862953518887`*^9, 
   3.83378633094433*^9}, {3.8376972531138926`*^9, 3.8376972874877567`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"89d2d4d9-d061-4d35-9dbc-42bef7c98b88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"featureNum", " ", "=", " ", "5"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "feature", " ", "of", " ", "the", 
    " ", "input", " ", "space"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initialNum", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "initial", " ", "sampling", " ", "number"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"batchSizeC", " ", "=", " ", "10"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"crossover", "+", " ", "mutation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"batchSizeM", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", " ", "mutation", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"batchSizeR", " ", "=", " ", "3"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"random", " ", "sampling"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", " ", "=", " ", "0.15"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "standard", " ", "deviation", " ", "of", " ", "noise", " ", 
    "in", " ", "mutation"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mutationRate", " ", "=", " ", "0.4"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "probability", " ", "of", " ", "mutation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"initialNum", ",", "featureNum"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"ObjectiveFunction2", "[", 
    RowBox[{"X", ",", "Qset"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{
   "results", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", " ", "=", " ", 
   RowBox[{
   "results", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pool", " ", "=", " ", 
   RowBox[{"IntializePool", "[", 
    RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Initialpool", "=", "pool"}], ";"}]}], "Input",
 CellChangeTimes->{{3.814253010749196*^9, 3.814253010920369*^9}, {
   3.814255281899629*^9, 3.814255291882531*^9}, {3.814256226353723*^9, 
   3.814256226994844*^9}, 3.820457088900299*^9, 3.8204848009977093`*^9, {
   3.820561028976781*^9, 3.820561029083808*^9}, {3.831912045265852*^9, 
   3.8319121000589*^9}, {3.831912139380324*^9, 3.8319121532588377`*^9}, {
   3.831912184886033*^9, 3.8319121879625683`*^9}, {3.8319125850941563`*^9, 
   3.831912590868985*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"485d1540-b7a5-4074-84c8-dba5b33455b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MAPResults", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Observations", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"Observations", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"X", ",", "Y", ",", "2"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", 
       RowBox[{"14", "+", "count"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pool", " ", "=", " ", "Initialpool"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"poolSet", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"samplesInput", "=", " ", 
           RowBox[{"GenerateSamples", "[", 
            RowBox[{
            "pool", ",", "featureNum", ",", "sigma", ",", "mutationRate", ",", 
             RowBox[{"{", 
              RowBox[{"batchSizeC", ",", "batchSizeM", ",", "batchSizeR"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", ">", "1"}]}], "\[Rule]", "1"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", "<", "0"}]}], "\[Rule]", "0"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{"ObjectiveFunction2", "[", 
            RowBox[{"samplesInput", ",", "Qset"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"samples", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"samplesInput", ",", "sampleResult", ",", "2"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Observations", ",", "samples"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pool", "=", 
           RowBox[{"UpdatePool", "[", 
            RowBox[{"samples", ",", "pool"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "400"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Observations", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "Initialpool", "}"}], ",", "poolSet"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"count", ",", "16"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.813735455899255*^9, 3.813735536563998*^9}, {
   3.813736241904977*^9, 3.8137362458970957`*^9}, {3.813737040086611*^9, 
   3.8137370462785473`*^9}, {3.8137380115962095`*^9, 3.813738011925454*^9}, 
   3.8137386210546875`*^9, {3.8137386868587337`*^9, 3.8137386870174704`*^9}, {
   3.8137388627280855`*^9, 3.8137388629212923`*^9}, {3.8137392135541506`*^9, 
   3.813739226350148*^9}, {3.8137395325252695`*^9, 3.813739612464961*^9}, {
   3.8137398846190233`*^9, 3.8137399013042145`*^9}, {3.8137400278941383`*^9, 
   3.813740095460973*^9}, 3.81394434153244*^9, {3.814168447874517*^9, 
   3.8141684742515097`*^9}, {3.8141685056488037`*^9, 3.814168535273458*^9}, {
   3.81416861701902*^9, 3.8141686211764393`*^9}, {3.8141686597924347`*^9, 
   3.814168666721627*^9}, 3.8141825310767403`*^9, {3.814196569727558*^9, 
   3.814196574364094*^9}, {3.814196630021139*^9, 3.8141966685682354`*^9}, {
   3.814196701203045*^9, 3.8141967228607426`*^9}, {3.8141968385128555`*^9, 
   3.8141968491639233`*^9}, {3.8141969046727486`*^9, 3.814196928128914*^9}, {
   3.8141969833052197`*^9, 3.8141969999247723`*^9}, {3.814253003197847*^9, 
   3.81425300958921*^9}, {3.814255151642017*^9, 3.814255156746298*^9}, {
   3.814256014497525*^9, 3.8142560146648417`*^9}, {3.8142561466740217`*^9, 
   3.81425616150587*^9}, {3.814256201366672*^9, 3.8142562227042303`*^9}, {
   3.814256637091144*^9, 3.8142566424895573`*^9}, {3.814256751128944*^9, 
   3.81425675437589*^9}, 3.814256797520667*^9, {3.8142638635537367`*^9, 
   3.814263886307807*^9}, 3.8142639741271057`*^9, {3.814264045936754*^9, 
   3.814264046776643*^9}, {3.814291316619193*^9, 3.8142913166743727`*^9}, 
   3.820468317786665*^9, {3.82048387736482*^9, 3.820483878134199*^9}, {
   3.820568096903102*^9, 3.820568097419775*^9}, 3.8317298401602907`*^9, {
   3.8317309855323153`*^9, 3.831730990459284*^9}, {3.831733896644764*^9, 
   3.83173389726877*^9}, {3.831737695831723*^9, 3.831737699313272*^9}, {
   3.831738858791349*^9, 3.8317388591184177`*^9}, {3.8317391411732683`*^9, 
   3.8317391466110888`*^9}, {3.831739177039422*^9, 3.8317392718674383`*^9}, {
   3.83189719347572*^9, 3.831897193697524*^9}, {3.8319131607111883`*^9, 
   3.8319131613653717`*^9}, {3.8319132584578333`*^9, 3.831913258594502*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f12bc893-543d-4d6e-a459-b14aecd7998a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<MAPResults\>\"", 
     "<>", "\"\<.mx\>\""}], ",", "MAPResults"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.831973372537956*^9, 3.831973376225219*^9}, {
  3.8376973055844927`*^9, 
  3.837697307073082*^9}},ExpressionUUID->"b2ea8291-3498-4ee8-9e82-\
b8bcea57afe2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomResults", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Observations", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"Observations", ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"X", ",", "Y", ",", "2"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", 
       RowBox[{"100", "*", "count"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pool", " ", "=", " ", "Initialpool"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"poolSet", " ", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"samplesInput", "=", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"{", 
                 RowBox[{"batchSizeC", ",", "batchSizeM", ",", "batchSizeR"}],
                  "}"}], "]"}], ",", "featureNum"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", ">", "1"}]}], "\[Rule]", "1"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{"samplesInput", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"n_", "?", "NumericQ"}], "/;", 
              RowBox[{"n", "<", "0"}]}], "\[Rule]", "0"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{"ObjectiveFunction2", "[", 
            RowBox[{"samplesInput", ",", "Qset"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"samplesInput", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sampleResult", " ", "=", " ", 
           RowBox[{
           "sampleResult", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"samples", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"samplesInput", ",", "sampleResult", ",", "2"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Observations", ",", "samples"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pool", "=", 
           RowBox[{"UpdatePool", "[", 
            RowBox[{"samples", ",", "pool"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "400"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Observations", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "Initialpool", "}"}], ",", "poolSet"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"count", ",", "16"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.814196735578306*^9, 3.814196745853159*^9}, {
   3.814196864643983*^9, 3.814196900472229*^9}, {3.81419709110468*^9, 
   3.8141971047368684`*^9}, {3.814256016809679*^9, 3.814256028601309*^9}, {
   3.814264050834564*^9, 3.814264054459565*^9}, {3.814264092969966*^9, 
   3.8142641021521063`*^9}, 3.8142913204581614`*^9, {3.820483886714699*^9, 
   3.8204838871776657`*^9}, {3.820568132895681*^9, 3.820568133446859*^9}, {
   3.8317377478729467`*^9, 3.831737759079064*^9}, {3.831739263137868*^9, 
   3.831739300533375*^9}, 3.831741102145924*^9, {3.8318976504842577`*^9, 
   3.831897650779216*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"c67b06ec-2684-471d-b6e9-6b04e2956f15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<RandomResults\>\"", 
     "<>", "\"\<.mx\>\""}], ",", "RandomResults"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8142498444713955`*^9, 3.8142498589674735`*^9}, {
  3.814249920733098*^9, 3.8142499332061033`*^9}, {3.8142500487057323`*^9, 
  3.8142500491777925`*^9}, {3.814264647830132*^9, 3.814264703542694*^9}, {
  3.8142686980925083`*^9, 3.814268701323354*^9}, {3.815573725217862*^9, 
  3.8155737279373827`*^9}, {3.831897700017469*^9, 3.83189770098691*^9}, {
  3.8319733668428097`*^9, 3.831973369065154*^9}, {3.837697308718693*^9, 
  3.8376973100627007`*^9}},ExpressionUUID->"5edc334f-12a7-474b-bb0b-\
f5c35e9e5370"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MAPResultsTotal", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<MAPResults\>\"", 
     "<>", "\"\<.mx\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomResultsTotal", " ", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<RandomResults\>\"", 
     "<>", "\"\<.mx\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.814252852926065*^9, 3.814252871921379*^9}, {
   3.814264712588896*^9, 3.8142647185285807`*^9}, {3.814369137534196*^9, 
   3.814369153998219*^9}, {3.820473252759*^9, 3.820473271433864*^9}, {
   3.831782809546283*^9, 3.8317828134410563`*^9}, 3.8319114002499743`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"6125f4c2-6ba4-4fec-8f42-9ae487c2c517"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MAPResults", "=", 
   RowBox[{
    RowBox[{"MAPResultsTotal", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "2", ",", "All"}], "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"1", ";;", "201"}]}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomResults", "=", 
   RowBox[{
    RowBox[{"RandomResultsTotal", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "2", ",", "All"}], "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"1", ";;", "201"}]}], "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.831782790942753*^9, 3.831782841617899*^9}, {
  3.8319643402952013`*^9, 3.831964353146793*^9}, {3.831964508106309*^9, 
  3.831964510301855*^9}, {3.831964718509492*^9, 3.8319647205660887`*^9}, {
  3.831964843393318*^9, 3.831964845326064*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"6b85df37-348e-4c50-8054-30418dd3aa9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mean1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "MAPResults", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "MAPResults", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{
     "MAPResults", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "MAPResults", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"mean1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples1MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"mean1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples1STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"mean1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8142463623537464`*^9, 3.8142464583444567`*^9}, {
  3.8142465714976254`*^9, 3.8142466680319366`*^9}, {3.814246703354166*^9, 
  3.8142467135013847`*^9}, {3.814247105074396*^9, 3.8142471186241193`*^9}, {
  3.814247379994754*^9, 3.814247380085315*^9}, {3.8142685464328117`*^9, 
  3.8142685469358997`*^9}, {3.814270166327169*^9, 3.814270200483539*^9}, {
  3.814270328703535*^9, 3.8142703315839233`*^9}, {3.814270568680427*^9, 
  3.814270571909103*^9}, {3.81427063168044*^9, 3.814270634733197*^9}, {
  3.814271033680892*^9, 3.814271035662335*^9}, {3.814271081934309*^9, 
  3.8142711141601143`*^9}, {3.814369695208453*^9, 3.814369708218985*^9}, {
  3.831782248406835*^9, 3.831782286055818*^9}, {3.831782753445607*^9, 
  3.831782757175542*^9}, {3.831782845015636*^9, 3.8317828522367*^9}, {
  3.832234412589793*^9, 3.832234415331011*^9}, {3.8322373308124146`*^9, 
  3.832237338082204*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"a4064425-bc41-4d7c-b0fc-ec44cf96664f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",",
    "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.831953129928664*^9, 3.831964240094092*^9, 3.8319643591271563`*^9, 
   3.831964514970759*^9, 3.831964724886013*^9, 3.831964847484283*^9, 
   3.831965156139319*^9, 3.831973462596734*^9, 3.832232943935832*^9, {
   3.8322344134784365`*^9, 3.8322344439037266`*^9}, 3.8322344935828094`*^9, 
   3.8322515374510093`*^9, 3.832501154154937*^9, 3.832597177399972*^9, 
   3.8330239735337424`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"236a8b9c-a285-4156-aea5-ceb2d64ea581"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mean2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "RandomResults", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "RandomResults", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{
     RowBox[{
     "MAPResults", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "MAPResults", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples2", " ", "=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"mean2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples2MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"mean2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanoversamples2STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"mean2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.814246467303467*^9, 3.81424646819079*^9}, {
   3.814246586095786*^9, 3.814246596188418*^9}, {3.8142466349922495`*^9, 
   3.814246714827592*^9}, {3.8142471458387957`*^9, 3.814247162614313*^9}, 
   3.8142473449602566`*^9, {3.8142473823914423`*^9, 3.814247382470394*^9}, {
   3.814268552150168*^9, 3.814268552501821*^9}, {3.814270170631143*^9, 
   3.814270178958034*^9}, {3.814270336397154*^9, 3.814270341960452*^9}, {
   3.814270583287302*^9, 3.8142705941731586`*^9}, {3.814271047713738*^9, 
   3.814271053321404*^9}, {3.8142710836958933`*^9, 3.814271083784417*^9}, {
   3.814271119378577*^9, 3.81427112210157*^9}, 3.814369722777361*^9, {
   3.814450499244669*^9, 3.814450502938875*^9}, {3.831782327649008*^9, 
   3.831782339086795*^9}, {3.831782759947254*^9, 3.831782761494817*^9}, {
   3.831782858815174*^9, 3.831782864414648*^9}, {3.832234433886858*^9, 
   3.832234441791032*^9}, {3.832237342824814*^9, 3.832237344227363*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"ffee5c99-45d8-4d6c-802c-4ea69732e67d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",",
    "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.831953133721389*^9, 3.8319642408475313`*^9, 3.8319643659044533`*^9, 
   3.831964515842258*^9, 3.8319647255660477`*^9, 3.831964849693046*^9, 
   3.831965157931082*^9, 3.831973462710779*^9, 3.832232944073269*^9, {
   3.8322344387636642`*^9, 3.832234442670811*^9}, 3.832234494669282*^9, 
   3.8322515375223184`*^9, 3.832501154257072*^9, 3.832597177743898*^9, 
   3.833023973608127*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"88c89d08-95ed-4262-be71-6d43b78ba172"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"l1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{
         "MAPResults", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}],
          "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"l1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl1MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"l1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl1STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"l1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "MAPResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{
         "RandomResults", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"l2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl2MEAN", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"l2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanl2STD", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", 
      RowBox[{"l2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "RandomResults"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8144504925571127`*^9, 3.814450748887911*^9}, {
  3.814450779562261*^9, 3.814450801510825*^9}, {3.814452282463675*^9, 
  3.814452282778357*^9}, {3.83178277664989*^9, 3.831782781168481*^9}, {
  3.831911427944722*^9, 3.83191144478743*^9}, {3.831912693229322*^9, 
  3.8319126934454308`*^9}, {3.8322344573282027`*^9, 3.8322344916053987`*^9}, {
  3.832237348631604*^9, 3.832237355765489*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"1a51f26b-fa62-4cfd-80f5-7db1bc4e3589"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spectrums", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"wavelength", ",", 
        RowBox[{"Rescale", "[", 
         RowBox[{"fromXtoSpectrum2", "[", 
          RowBox[{"i", ",", "Qset"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "MAPResults", "\[LeftDoubleBracket]", "8", 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], ",", 
          "Last"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", "featureNum"}]}], "\[RightDoubleBracket]"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineStyle", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", " ", "Gray", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lines", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.4", "+", 
           RowBox[{"0.05", "i"}]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.4", "+", 
           RowBox[{"0.05", "i"}]}], ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8143692114298964`*^9, 3.814369335740267*^9}, {
   3.81436943839613*^9, 3.814369568628227*^9}, {3.814369800486622*^9, 
   3.8143698622178183`*^9}, {3.814369915706031*^9, 3.81436991719071*^9}, {
   3.814370136594174*^9, 3.814370185675345*^9}, {3.814370543572723*^9, 
   3.814370561676425*^9}, {3.8143706015183992`*^9, 3.814370707926787*^9}, {
   3.814370845026794*^9, 3.814370850248931*^9}, {3.8143708821029587`*^9, 
   3.814370882846354*^9}, {3.814370914282984*^9, 3.8143709153678007`*^9}, {
   3.814370982287776*^9, 3.81437110399419*^9}, {3.814371198747428*^9, 
   3.814371215829175*^9}, {3.814371294149416*^9, 3.8143713281107073`*^9}, {
   3.814371463753457*^9, 3.814371468700294*^9}, {3.81437159505155*^9, 
   3.8143715970748663`*^9}, 3.814371688817659*^9, {3.814371876637809*^9, 
   3.814372025728565*^9}, {3.814372097714959*^9, 3.814372107995229*^9}, {
   3.814372231077108*^9, 3.814372240643372*^9}, {3.814372301085338*^9, 
   3.814372360792643*^9}, {3.814372414038389*^9, 3.814372445387947*^9}, 
   3.8143725275726013`*^9, {3.814372736584511*^9, 3.814372744976487*^9}, 
   3.814373757126914*^9, 3.814537240934669*^9, {3.814537354696845*^9, 
   3.8145373825856743`*^9}, {3.81453741365506*^9, 3.81453741525805*^9}, {
   3.814537462263647*^9, 3.814537469461802*^9}, {3.814538169990159*^9, 
   3.814538249115704*^9}, {3.814538356456547*^9, 3.81453836314851*^9}, {
   3.81453840326766*^9, 3.814538485423223*^9}, {3.820472451736435*^9, 
   3.820472485013085*^9}, 3.820473307527245*^9, {3.820580763826626*^9, 
   3.820580776794183*^9}, 3.8317829908796597`*^9, {3.831783030645793*^9, 
   3.831783063986355*^9}, 3.831783210568184*^9, {3.83178324500008*^9, 
   3.8317832555182123`*^9}, {3.831783338703157*^9, 3.8317834393757668`*^9}, {
   3.831783721626445*^9, 3.831783724257442*^9}, {3.831896537539312*^9, 
   3.8318965376116743`*^9}, {3.8318965997116737`*^9, 
   3.8318965998530903`*^9}, {3.83189668680588*^9, 3.831896712988693*^9}, {
   3.831896753014114*^9, 3.8318967671656923`*^9}, {3.831896898829673*^9, 
   3.831897017331234*^9}, {3.8318971038853607`*^9, 3.831897113870762*^9}, 
   3.831911742641465*^9, {3.831953171126959*^9, 3.831953181267489*^9}, {
   3.831964223683275*^9, 3.8319642238483677`*^9}, {3.831964301299591*^9, 
   3.831964322701591*^9}, {3.83196438294205*^9, 3.831964473993558*^9}, {
   3.831964549260077*^9, 3.831964579884584*^9}, {3.831964628219947*^9, 
   3.831964663926886*^9}, {3.831964741042482*^9, 3.831964746890378*^9}, 
   3.831965162669936*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"34f2b7ed-9d9e-4921-9d90-10eb4740ca82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"255", "/", "255"}], ",", 
      RowBox[{"80", "/", "255"}], ",", 
      RowBox[{"201", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"255", "/", "255"}], ",", 
      RowBox[{"204", "/", "255"}], ",", 
      RowBox[{"0", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0", "/", "255"}], ",", 
      RowBox[{"255", "/", "255"}], ",", 
      RowBox[{"0", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0", "/", "255"}], ",", 
      RowBox[{"0", "/", "255"}], ",", 
      RowBox[{"255", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0", "/", "255"}], ",", 
      RowBox[{"204", "/", "255"}], ",", 
      RowBox[{"255", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"43", "/", "255"}], ",", 
      RowBox[{"0", "/", "255"}], ",", 
      RowBox[{"0", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"255", "/", "255"}], ",", 
      RowBox[{"128", "/", "255"}], ",", 
      RowBox[{"128", "/", "255"}]}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"255", "/", "255"}], ",", 
      RowBox[{"128", "/", "255"}], ",", "0"}], "]"}], ",", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"40", "/", "255"}], ",", 
      RowBox[{"40", "/", "255"}], ",", 
      RowBox[{"128", "/", "255"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"style", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.010", "]"}], ",", "color"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"color", ",", "colors"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8207458853994207`*^9, 3.820745900967174*^9}, {
  3.820746187088846*^9, 3.820746233056246*^9}, {3.8324981369735003`*^9, 
  3.832498161019654*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"980989a3-425a-4c0a-b8c0-5ddfc990d43a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 
          Rational[16, 51], 
          Rational[67, 85]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.20915032679738563`, 0.5254901960784314],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", 
           FractionBox["16", "51"], ",", 
           FractionBox["67", "85"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
           Rational[16, 51], 
           Rational[67, 85]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 
     Rational[16, 51], 
     Rational[67, 85]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 
          Rational[4, 5], 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333333, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", 
           FractionBox["4", "5"], ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
           Rational[4, 5], 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 
     Rational[4, 5], 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 
          Rational[4, 5], 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.5333333333333333, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", 
           FractionBox["4", "5"], ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
           Rational[4, 5], 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 
     Rational[4, 5], 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[43, 255], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.11241830065359477`, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["43", "255"], ",", "0", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[43, 255], 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[43, 255], 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 
          Rational[128, 255], 
          Rational[128, 255]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.33464052287581697`, 0.33464052287581697`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", 
           FractionBox["128", "255"], ",", 
           FractionBox["128", "255"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
           Rational[128, 255], 
           Rational[128, 255]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 
     Rational[128, 255], 
     Rational[128, 255]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 
          Rational[128, 255], 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33464052287581697`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", 
           FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
           Rational[128, 255], 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 
     Rational[128, 255], 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[8, 51], 
          Rational[8, 51], 
          Rational[128, 255]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.10457516339869281`, 0.10457516339869281`, 0.33464052287581697`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["8", "51"], ",", 
           FractionBox["8", "51"], ",", 
           FractionBox["128", "255"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[8, 51], 
           Rational[8, 51], 
           Rational[128, 255]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[8, 51], 
     Rational[8, 51], 
     Rational[128, 255]],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8319531445622597`*^9, 3.831964262525455*^9, 3.831964371876588*^9, 
   3.831964542087789*^9, 3.83196485591327*^9, 3.831965164763918*^9, 
   3.831973484231497*^9, 3.8322329443730316`*^9, {3.832501154640114*^9, 
   3.832501161617595*^9}, 3.832597178103571*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"cf67f34c-3f2e-4601-a796-dba96047fba8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", " ", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"spectrums", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", "lineStyle", "]"}], ",", "lines"}], "}"}]}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "[", "wavelength", "]"}], ",", 
         RowBox[{"Max", "[", "wavelength", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.3"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Wavelength (\[Mu]m)\>\"", ",", "\"\<Extinction\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
         RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", " ", "\n", "  ", 
       RowBox[{"LegendLayout", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<Row\>\"", ",", " ", "1"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<UV-Vis_example.svg\>\""}], ",", "f", ",", 
   RowBox[{"ImageResolution", "->", "500"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8204900830881453`*^9, 3.820490085259139*^9}, {
   3.820581587050207*^9, 3.820581592872106*^9}, {3.820581653846187*^9, 
   3.820581658897769*^9}, {3.820581879777362*^9, 3.820581885701169*^9}, {
   3.820582238279496*^9, 3.8205822386498537`*^9}, {3.820745881816597*^9, 
   3.820745891879594*^9}, {3.820746855478827*^9, 3.8207468835808067`*^9}, 
   3.820747003401824*^9, {3.820747248322817*^9, 3.820747397696259*^9}, {
   3.820747495650917*^9, 3.820747496236375*^9}, {3.820747565648876*^9, 
   3.820747605950502*^9}, {3.820747709736866*^9, 3.820747756629457*^9}, {
   3.8324981225532937`*^9, 3.8324981273332787`*^9}, 3.832498165612317*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"cadf0727-f383-4b90-abba-f7f8bbe31982"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
0X8z8pCyccz9zTiNsC+jnk/e56Jtoz7hctBw2jXnzERWLmZtSvl0QoCO0LHZ
k1nncrFj09ewrBl0bDFqN3+kkwu3TTq7B2bRQb/5OM9AKhdZmxK+bp5Lh2xN
9GI97n183jR010+YDhfWzJbS2vvgu88L6Ni/svXrrdv3oakSM2/uIjrUvQuL
Oqzvg7RGxlJ0PPphvSVM9T7yyHSiNB1WRZlZeUL3wQ8vytCRXKy0fltfDsQ3
Mz+vlaXjx5xH39eX5mDfZvWb7qvp+Pp04Zob13NwcfMtVK2hQ2yUMWximYOi
zdRv/9bR0Xn367krW3PA2Kx6b58yHa+Yo7TF83KwZEuo+R0VOuyb82wkaPdg
uKV3/qetdGSIe0X0Vd3DlS0qjcu30zFR07vA6849VGwJPnt6Jx13GmOvnT19
DwNbOhUe7qaDwfs5r0fjHlZsVeoa06TjkoB5TZHEPRzZevmWhg4dvOdi+d+H
snF9a8eeYD067s/2+3nvWTbqtyqOvjGgQ/Mat+pNWja+bvXPWXSIjh1zq+ac
8c2GAqmuTOhYdlxDwOdwNo6ryovcNaXDaVdb1TTlbNxR9W0aOEZH4fnXBrOE
svFEteXclpN0uLUHtYcw7uKXquzaC1Z0bBQ3OX298S42bPPqfmxDh4/A7ZVz
U+7CetvL23NP09H63x1pUb+7ILWziQMdNRMFLglmd/FqGxlRoqMpWnNLvupd
/N1GZoTpcBzLuKq76C62qC05qXiWjp10hQsu37NwRo1EDHTUrl67adX7LCSr
NT2u8iW+59KfutOlWXinJuEt4E8Hpe7vDo3oLAhud1DUu0Tm6YOe5HhlQX17
fc+dIDqEv9Hd7ptlwWW7WPina4R8JG82UN+VhcztdntXhNHh3jqeRkA6fNxe
/eP0LYJfrYcO3p2bhXkkHAyn471mw+b73zIBdWuLH1F03H71VnFDdybOqZcv
2B1HxxGReQsUn2aCn+5OpCO3eLIpriATvWT4O4UOCXOlZR5xmRDbQWosOqRy
FX4XXM6E7g7BvpN36VDT9dy5zzkThPMccTeHjvEPCdWqZpko3FGgPZhHR/+4
gomnViboO6b92vKQDlfzLOqYUiah90zzLxTToRQfr129JBMHduZaPikj5Pt4
uFm5YCYu7yQDUnRo6Sz6SfuaAVJbmdTSkTVZ8G9HXwZ4O7N9Ehvo0JZnG1a8
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
OH/1j3f0Y3es5jfQcjGg6ljaz3bHsbg/jKteXLR3hauEzPfArTjj+Dc+XJx/
8K34/CYPkNmURRe5SGcsGEs57IEfceN/TwRyIV7vXMvy8sC6eMOSrCtcRLuF
NO+O84BVfIbdQDDBX1Xa+8hKDxDCvHhLKBdt+n/vtX70wIt4/Td+Nwn+Mk/+
o456YDI+JfDxHS6uaQamVIh5QoVM70dx0RnP0tyh5Ak+3I/lomP1ogLzfZ74
f785F9orQtOm/ecJfvtZMhcXKIdoO109p/rPudgeHbJ42M8Taokxpe5ZXLy+
+nlI+prnVD868b5JnnDzHU+kJ2pIC+RxUatzZvVInOdUfzoX1XljPUmpnhBK
Yl66U0Ssj9duekuW51S/OiFvX7m0kBxPeCbdYi+v5CLyTHrIm1zPqf51LvpW
zfVPzfNEd5LqwYf1XFx1aXUVII7/38/ORVdE/Jwx4n7t5N4yjadcbOgS/hFw
13Oqv52LlvBPtPQ0TxQkBy9tecWFmECqn0WC51S/OxdankIOlRGekCTLJ9u4
hH1/bF583XOq/534/uvuvwwDPBFIulefCP411X254+k51Q9PnFc4NOxr5wlO
iv+hC31cHJ3+LlnEzHOqP56L56nsHCNivY1T5SvmMrmw0t1dq7XNc6pfngvH
vRevsOU8UZPasixxgAsLXdUfY6KeU/3zxH4zunpafcQDcmlehMfBRUB/nL1p
i8dUPz0X1pJRLxzyPHAzTYZX9YsLP6kEk9hrHlP99VwcFGxpn7D2wFhas5He
Py7+m24iUbnLY6rfngdlFQMWT9IDpPf8SZAHlHWLVXxxn+q/50HsoYLt9lfu
eJYusfzMfB4UNQ/lRmS5T/Xj8yAU7lNAvegOfrnKQh5U6pt36R11n+rP52Ht
gLkcc6M7+OK8hAfHXceUPgu5T/Xr8zB+77nhlRduIKPtEit5aMpGVWCA21T/
Pg9baiw3c1Td4JhZXnVXgYcjik5Hfg+7TvXz87Bie37Fr1xXvM+0WLFViYfc
9XZfV5xxnerv54Gm159cpOCKXVmC155s4YH6wcqYx3GZ6vfnIWWRUs78hy4g
q3NMdvCwyvDWNjNvl6n+fx7YH0N8G7RdIHLX9DBtDw86WwZ3r9zvMjUPgAeR
Y7GivSYuOM9vQOHhycyBbYWWLlPzAXjg/jooYOziAsrd7JXTDvIwbVSh8mKA
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
YKSWkDE9UdJTmoD/AZC43Kk=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[16, 51], 0.3137254901960784], 
          NCache[
           Rational[67, 85], 0.788235294117647]]], 
        LineBox[CompressedData["
1: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
hio7uKWDYFz61OKw9nb8D88QxAo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[4, 5], 0.8], 0]], 
        LineBox[CompressedData["
1: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
uVOAPS0uO92Dif2En1j2YUCA+pbZDydF9mFbsvzABY4Aqq3VS27E9+Hl3BiH
5yMCxLc6Bikl98HX7d3Mt78EGGuV5D9I7QNDVeJY5EQhnEQHuA8e5Zvbf00X
ou3FPkKi+1Aamv1UVkYI7Zfi8o5lfZi71KKALSdE6su84E/VfZAdsvp9REmI
qa+sh3zr+4CTL5aHqwnh9mrUZubzPojP6rltrylEzysSkPoQaBTyqWejEMZt
W5dpdPbh91CNrYqhEIVtIyG1PX1Y95XHkjERYt7r5GELah8Wr+Xdz9kqxNXX
Rrv72H144BX7uNdKCPZr7qNTgj7w8soX3t8lxM43cQpjXwl6Jqu/ld8rRPUb
ndDwsT4oKr4TrDoghCKBvrIT+jFzsZdf+yEhIt6G2eZN7YfP4dFY6aNCfH2r
+XjTzH4caVFdTXUWwqG9W7FlXj8qVlMdtpwQQsTexf1wPfZdEyeF0Hin+oml
2I8Qq//Km08JcfNdu52Haj8+1yZ86j0thFiHV63E2n7kR7V9vnJGCJcOBeUE
7X5kJdY15xDX7zpaw5UN+tFbCs/9xLVep9tImXE/jKtWzL1OrM/slN1rvK0f
nQGWGTuI+0t1NdS920k8j3dNK9pFCI8uF5Uje/qxs6XoncVxIQa7ZkeOOPRD
9VtCWJiTEObvqz/7OfVDctsC582OQpS+d9w361Q/WKlT3dwdhFj0QZIwOfox
d/Vpp/0EvQI/lC5f49mPvyev8XYT9B36sC+q7mo/fHcscH5nLITtR/GvlsH9
KJ4umdS/SYi6j3n7+yP6kdG+dYu/uhAruq0bTsf342JHs3aLghCx3aMrfif1
Q9f4jFrtPCFGu9OjI1L7IbVLjXVSUogjBBotyu7HpA189b7fArzsGbHPL+yH
tlxKk9wnAbR6k4kT3I/ajepuWnQBUnqNCJHux/3HoV/Xvhdgch83Zm99P5T7
7sxd3CrA2b647+zmfqxvsYsXeyzAhz4dh0tt/fj+IEOLWyzAf/3UZ5M7+xH4
+lwdJV2AvP4wtcSefoxYFHwZIc7rnAHNOBVqP/Yf/i9pBXGevQe6f5Sz+9Gh
u+RcpLcAjAH/gyaCflySXoNVrgJYDqo2dXzth73U0VZpQl9UDravOjrWj5su
2e+MCH0iT/GK/yw+ABNb1tI32wUIpSiM+k8dgNeEWecb/hNghNJ6aPbMAVhl
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
P10l9ss=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
2KnVDfhGkhvTi3N6ph8/KDTg5C8HzZqEXmwaezOwU7oBH38pxpun96Jp4OTv
1H/1WC8ywL2guqiOTGHXI+K3zY27Rb0wrCjvjKmuh/gfeUJD9+JH20iBbVY9
rv4p04r82IukmqfPvMPr0fznyovVtcR+vw18ynCqh+aY7LTCZuL+8pRSz/P1
eDFGAspeML++k7+9rx7Sf892tNF6kXcpLb9gYz1u/5XCRW4vQrfsTjSUr0fv
3+yEkX7i/jvnfmiL10P/n9l0z2+9yNrdU/iQX4fsf+K2c373wifn0eiOpjpI
i5EST4OyNJ/j+boOu8RIj5WGtIk3lDsS6nBbzPm/s5Np2FAV6RMWWIc0sUbJ
lKk0bAsZmVrqWIdeMaXiL9I06D+elW12qQ5zxB2stsnSQJt63+XCf3XQF69d
en8ODR7Lax0YqIOTuGJL5Xwacuf5xLeuI9ZDuiMLaPgmryu2U6EOIvW0mIaK
c74hy6fUQYE4Pc8UaUhdOXDG7XstDCfYxHJW0LDiydi1U+xauE+oMFFdTUPB
yN7CopZaFEyQn3J7LQ2saycMwj/Uom+C1esSVRpUNlcv+55bi6UTy65LbKJh
rutSfUpCLUwnzl12UJ2GRX4Db/Y+roXPxCutodto+ORV7qHlU4u3E0u8qTto
iExRjX/rWIvhibKaK0DDTOV3C2qv12LVJIvBa7toeLV90vDVc7Uwn1QUl6NH
w9/Z/spRR2oROEn6yG99GhwEvIoT+2vxYdJZKd0DNMR/TazO3VmL0Ul5b3wP
0SBmcWTHiy21UJGQutFkTIOP/qLG8HW1OEd4+wpHaGAWlZyIUqxFuASJAGgo
fzxv9q75tfgsIeGbcoIGG2a6Rph0Lf5JmGkNnaZB7ZnEvCeTaqEmmfFl23ka
jKoS+o//qcFlSfEX9y8S6784S5L6rQbRkqYEBCX2z67hhdJADUjuzrSiIWD0
ggx4NZCYPFZy9AYN1GETv/XMGmwnTmOMLQ2cc0qn/vbU4PrkhBXc2wT/9pnX
vqLUIH7yaLvqXRoOpjsuNumsQfvkg363nWmEfz3tMb+9BtOnxGq/vU/Dr95H
TneJ650ihUEDJdd/zoyOGthNMUg4+ICGZVN8X6QR96dMiT4W5kvDfIrUzePU
GvRMGZrW7U/sr2rwe0VaDWZJ6b1bEUTDUolkyhR2DfZKRd60DCX251TDhPnC
GjhK9SvlPqZBVSvQ+b/hGmSR7nIUDUmxlkEVv2ogMp/PaLD3F7jfIvZLfiof
frE0MMQfRV2SqcXBqVpfm17QkL9XpkZmUS3cpgYlKiTTEBG6Msp4fS3yp5IG
loaXB2r1abtqIZyqIZ2aSUP/lA0euUdrsWQa6RHRoHvO8We1VS1MptFtNfII
/g9RjJZ41sJ7mvoq10Ia/h26p5kRXYuSaT5dn17TYDDv0YUbBbUgqZ35joab
3dtvX2iqxcrpG3WOvafhmnbmIs+BWhwnTndMBQ2rmuZOrptWh4DpnUncTzQC
zzzr2b6mDuXTVczX1xDnecT2cKVBHX5Md51hX0/DsYLyKdZX67BOBEhp8Jcp
zlF5WIcz0sp2km00aD12H/ubWYcwaefVhp3E/3MPBPcQ+qJKupESRqWhKWLX
4k8/6vBXWulRdy8NT3YHHSxYVI9NMxx2KTFpSHC3qEnaXY9LM2pHLDnEfg4I
94RZ1uPJDEXC5Sf2Y4nRFcewejTMsDvxp4+GooyyXtN39ZgkUyWz+wuhXzZf
PbJUUA8NmUXlfl+J9794rSmc2gArGZvbzd8JfgbNDLZZ2oA4GdKBo2G9Zt7R
z2oNaJOR7z43RkPbhZXGTw0aMG2mVWCqGB0/mjT28E41ADPLdIcn0nHRsOLn
q1sNuDWTtDB0jDx7pirm14DkmWSEiA6Hh0/Sm2Mb0D2z5GSVNB0fe4K2bixq
gKzoQ8fLk0dDFzY2YI+sxYdjc+iQaix7EMlvwF3ZIvvn8+lIFEtqS5vQiJdk
OEeBDvNcqt7RhY1gkvBuMR2/c7ZFxWxpxHxRwIP4vTIwwtuoEQdEAk3Hwfxi
iXlWjbg/6+RPydXE8/QfJu73aUTerOw0w7V0aOyhQCWxEfxZEqfDVenouu0c
/ra8EYtnmxEQmI6TcfrWExmNMJ6dUaGkTkdY4KxH/wg89GA2qaDpOCqVXZy/
lMBjs03X5e2g43bLaP46nSZ8mZ3S+0ebjoqi9/oW5wh8NmcsePcuOuRd6WoX
PJpgNsdoz0M9OvSG1+5USSLw2hwyQEhH7+vYJT8+N+H9nNH0BQfoGLbi3qr6
SuC3OQfPnD9ER/8NZrPFwmasnRs7O82YDp2bN4Mq9Zpxeu7Ix2FTOk4tsZkg
sG5G6FyDu9vN6MhTeuP4KaoZn+ZGq7idoKNw0wbjUx+bMTaXRNx0tH9N6Uoc
bsbGeXqhsufpcJ8neTV6SQsuzovca3aRjnX6iqZaB1sQNa//1/MrxHq3dHxx
JfyT+nk6mTxLOrQCJgdfTG3BxPlhZzfcoMNrzM+f09mCbfP5c+7Y0hG0cde2
MalWWM7X+vTuNh117ZLchO2teD4/yHHyXToyo/MHKNda0TqfrXrImY74Daov
oqJbISWnwQi/T8ci7X0nuutboS3nH9bjToe/LfdazIQ23JSj6698QMf5e4xV
VPU2JMmp/7HypWPWdDl2wJU2UOR8Xub5E/JUfeHnq+g2zCTFOZCO1xYJ+bpN
bdgtT1JMR/jD/Fuak9vhIO9Z9fAxHdJ9tx5EaLZDFG6MomPut4t952zawSDd
j2d0XPPcs3X0RTvmKbgyz8cS/Nkndri/ox37FVrD017Q8UVPOn+ndAdcFJT3
fU2iI8Wew/um04FcBeex7Wl0nKNPujzNvgM8hcYst0w6znjQX3mmd2DRAqUL
1dl08M6O6FswOmC0wIEQaTq0HYtS0uQ64bWAjEDQkdSYaHL8UCeKFyjei31N
x5WLW6puenVicIHdRv5bOj5tp3t9L+nE8oVVrA3v6ZhyeKk0d6QTxxYuirhT
QYd1kiVFT7ULDxfa7C/9RMeuXbCZc6kLpQsr/k6uIeRVUdbQ5HkXRhbKvzpU
T/B3r/mQZFcXlBdZWTxuomMwJ7xLZQ4FpxaVyfW20rH0iqZPtSEFwYvm1qzs
pGPO5QqnHh8KKhddcblOpUP2VaratQoKfi8q2ZTfS8cJfYsNN8Wp2LBYljPG
oGPbuuuD37SouLDYIlKPQ4fwlPbQt7tURC4uOuDPp6OYbphnW0hF7WISYdHh
u35xqMUIFROWnM1Z+IUO17gPG/U3dmPLkryLF77S8fWj3dICq25cWyKlkP6d
jizD2WbFqd2IWXKSgODE/cJ7LWa8brQsyb6/Y4yOQ4ei/KJX9mDKUgk1dzEG
mtbutfe36IHWUjNu9UQGGJsuBW4k/CSbpRlRsyYzYDSPWh/E7kHiUnHD41MZ
GHzwQDV/ZS+6lpqKx0kz8FBjf0Li5V7IkOp5JgOj1Ckq19J6oas4dmnjHAYm
r4h7O22wF3cUSQ4zoHvGSfmTPA2icLgCAys22dvc16SBTrrHixkIOPMq5xWB
Q0h0dViRgSsfnvWdcyfs2rJY3uMVDDzbkiEXlkTDvWUjT3pXMTA30FDtIGGn
Xi0zOLRqLQMFKV93PBqigbsseoK1KgOWJ6TXnSb06oLlQ3n5GxlY4DpdvEyL
jsPL9a78VWMg88vZgsILdAJnRi7cs40BaY97+/c9pKNoeX+9/w4GlsxpLnLI
JfTQch33Vm0Glu+L9a7vpmPZirAti3YxcCdm5hrnKQwcETmkxPt3Wpg0bGbA
b4VWdLo+A38GmBOrTzNAgI3D3/YzcP5ao9q1hwx8W8GeqHmIgSn2N5m5RQys
VtIocDcmrpunTU/mMnBSyf/qZ1MG7u1kpOrNYyJIib5othkDD+5vfxOgx8RH
JfXG4ycY0DYx0/SwY+KXko9HHPGeUif3VasSmVi/snur4BwDa16POdxpZ+L8
StLDZSC8YfoGBykWIlaSGSoGFO+N6K3RZIEQZqMySwZ4Hn8KHlqzIL6KRJQM
SCZedIuNZ4FEG4dtGYiIuxN7pYOFq6tar0XcZqB4h70sR5oNwjlcQiOQ+oNN
SXXzd7PRtMqZ+DKwUP9g67+7bExe3ehpfZ94v1amYswrNnaICGZApmVG1ncB
GzdWO/T99WIgoSbHafIKDgjnJmaPLwO2PLp700kOOlcr/hfgz0AYr7vsWAQH
IrgRyEDQWFjZ6Q4OdokCngwsMw57J1zMxW3RASb2+8462ZkXuUgj0zVRBL/k
NSNzMrgQhW+iGXDtebG9ZISLOWvkH2jGMhB7Y2/HbG0e9NdYbfd4wcCvO5NM
n3nx4LymrP9zEgMZz9+E6NbzkL2GNEgMUAMP2wvm88FZc8XEPJOBlOHnDIcz
fCisLZkcn82AunVAYUcyH4fWyr4W5DLw4uUopf8LH+5rLa5vKmRg3sny9c+3
CVC4lkwQEM9fWhPe5iJA31oSYBFyFP/tq/1HARTXnfWWek+c14BFa65NF4K0
vkYVxPP8Vi18bCSE7zqpwYhPBP26X9MZYUK8XXcyjvaZAetTZ9+pdQrxdV22
6ep6BtK9jLfcWtAHEXubGPh9IenbgxN9MFcxe1PQSshb3M7uI0/7EKiSYf2v
g4GjvL9NlV19+KAivnwvlYGk3veFZfP7Mapi2hbQS+z/Riubtf/1Q0WUUCP2
z21qwIhPP86pjmku5hD0bJd0evu6H+GqRl8s+MT7k48GvBf247NqQnxGH0FP
+bNJP+UH8E919MjIIAPG7o6LTfcMQG09iaAZONPjv6DhxgAur48t8fjOwMYa
ux2nIwcQvX7kRs0oAz90m0t+vhtA43oDAnIwwNXcwwhmDUByQ3S7uRgT6pnX
ecsnD2L7hiHf+IlMzH7UJxO3ahDWG/S0hZJMFLSdjpi4Z5Cww5FDm6Yy8Z/T
5TLtc4Po2ND/4q40EwvsE6sNnAYhgs8zmdj9tuirQuggdDaGTZs6hwlxg11O
ySmDIK2R0XwmvGbQ4nlvBpFKphMVmJCU3JzaWDsIUXhxERP5Kyl1ZtRBzN7E
7lityETVpTtG9rxB7N2k8fDGCiZsS1Ntlg4PwmmTPwpXMcFbNct6/+ggsjbR
h/+tYcI8zNBnYGwQrE3qiXtVmRATfb5AfrOP2aONTEw7/XHW7X+DOLi5e3q7
GhP2UlLzNYnnuW3eWLp4GxMbbehSZzsGkb/Z0/biDibkli8InE+sV7i5c2Wm
NhPN0wwuPIgexBI1la4RHSYmy/3d2UHQb6Lm6q9F6J0TarW0jccH4a3WutNT
n4nbBw3+vlYfRIma8rea/Uz8PSRh8kxmEENqzklzDjERuTr0qRhvACtJdWXM
RF+5d/BUgl/H1ZVmvDBl4vmM21+YoQN4pO5QJjzGhNnIwI3cKwMoV6+9tfkE
E+8ueNXFaw3gp7riasfTTNwxqC/vnDmAdVvsKO/PMaEceGLaPWY/zm6pCph6
kQkHpbLThXn9ILWz8RUmZL4/csx60I/qLWREidCjA+byAWb9+LuFzAgz8eJ3
wdc7a/uxeav8CWVbJoaktlZEjPXh0lbSY2BioaSl/tyGPjzdWva+0IGJGip/
67z4PjRsnXtbzJmJpLu6huW3+yCx7Yqy/n0mTGqm7dm9vw8a20qoj9yJ9bxt
7Sxd2gerbbKB7V5MeFqX350l1oe4bRa6S3wJPa5nm2zPE6JtW9H3i/5MbNFX
vyrbJMQ00h0MZKKSqp3Z80YIaJw9+T2EiatXKs71JAtxSyNvpvZjgj6Tv3Yy
4UKI0t1RxHomLGm74SFENxn+jmZiBeWEjfgtIWS3kxqL4Jduv3rpBSH2bJfo
OfGCCf9YiVnpR4QgwHPQiySCv+aUr+UGQrzcnrG7L5WJprb4KkltIZjbxX9u
zmSC7hDqartZCLkdpmmO2UzcTWVISa0R4sCOlFPlucTz6soPf1QUwnUHGZAi
5PGA1e5UBSFIbWX8mgm295zmnDlCCHYk3Il6y4S0cEBAlxFiseboWkYZEzc7
Nt7dTOi3/zTJCDtxfgpmWSdJCUEo52CbT0wU930s0JwixBvNEb2iz0zc63Xf
NTxZiC+aBqNi9cT5HLk39pH4XYk0v01M/AnpbyuaKgQZ3QhsZSJCUaKkSlqI
AC292R0dBD3m1yR/yAnxXivy4xIqwe8nSt58gp7vWmQAlwmLNmWtCi0h1mrr
qLxkMCH/TPHVFULfntYOo31nMxHslm+bbyFEqDY/RJvPxLo5wTP87grxSVtr
r1cfE7rMkzKVj4QY0w76VTvIxKb75RP2JQixEeyMuV+ZMHW0tPtaLMRFEYOZ
mGIx4VtcgxBRIg+JiYRa1WnbOELUg17Z94cJH70ne4N/CzFxp7qjmhgLMieH
1INm9mHbTh9Vp4ksBL/oOjdHqQ+WooQHC9bpYua/t/UhdiepsAi7LiGdpnSg
D+Tp/U+ahTjtlN6bp/owlQxvzGQhi3/P8711H0TkzmbBM3yr8jeXPtjquJ5b
M5+Fe61OR7kBfRCVYyiwMLLl51NHwl5QyfTMIhb27P/PKzC5DzN3OTuJKxK4
Im7rc4mcPujtIjU0C+xaQ/vi130gvf3AVSzwT+yKCHjfh8xdDuEda1h4sSBj
Xv+bPjB2kQlCAme4hI55Z/RhnghQslC8ZN15ZeJ9+3Xtsl6qsTCTG/a8y7sP
LrpV539sZYHz7uuMFNs+5Ooumo8dLBSGXpocS9g3nq5NtZc2Qf/h2cw63T4s
2l3hXKfDwnaq3G9t5T4YiRwkFujLo5LHpvfBa7cV66Q+sX+yRbvnDwpRvLvs
ccJ+Fk4/erw6ol6Iwd1z9/cbsrDO+2jGw0whRHDSmAVjjsI68YdCHBMl1Fk4
EDrxr/hlIR7qkQ4/CyFOm52e7BKiTM9CbvoJgl6fmn+dC4Qgpfm/0yyMJnyh
V30VYM0eaZcn51iQflPmaF8twKk9ZzcxLVg4kX925WCMACF78thrrhDrcRne
rnVLgMo9ZACLeL54+KzrewX4s+fkgWICx91cdV0yQF6ADXvJCC4L9pSn1ikC
Piz2khUYLCyasjupppgP0vsNcmCh97Gn5CRfPur2kh4hC6yjknLeZnxMEAVk
WRhepmr0dzUfW/VN7192Z+Ewgzcl8QcP1/RTNmd5sRCqG1rpVcFDjP4Y54cP
C/9985+bHMxDi74RIdIsLI/b7Ch7mgdRuC6QhchfjPvVa3jQIo9vCAv70kYz
uwg8ZmNwMHfeYxY+n231NyjlIpEsF4piIedzc8JiXy5E6cNoFsLCjV3O/seF
zD6Duv7nLEy+8TJOfiEXuqKCLRZiJPQjDFkc3NlHWiRi/ZPu8ianc5C+T4/3
IZW4f0H8goO2HND3RT6Znknsx4+lxUrbOSC5a5LNgqKe0YFIMQ727deZ8DSX
BbWcoOMvP7Jxb39YHrOAhf4BWFk/ZCNnP//y2tcs0BKKptON2ODu11po+5aF
eM8TZdPms7HwQFB9cRlxHnZ4zf5BIfbtANttQgULg3ahfqnEuj0PaGzZ94k4
j3RWtgrBZ9IbDPrMwt11rTO8lVkYOEBWpLHQpL5G+ecAEyL3qImFG9OPbZPM
Y+LoQTICTZzfu+2Gv+4y4XewOz+LwOkf/vSvad/JROnBjVd/Eu/tnkH3jSFw
z7eDnot29rKgovJ93ZEawv8w7Gx4wCD43XyzfiyI8D8MVTzq2QS9Lk83RB4l
cJ6h69b5fBYM0wpnrF3EwEfDVsGpPhYutExfnU/4tb8MlZ8lDrKQeLtnu1Yy
HesPORsNDBP6YIatRLkVHecPNU7a8p2F2/Nn7tm3mY6IQ0qFzqMsXJzxu7j1
Jw01hxyuVfxhQd/aYdnltzTinJIeMBsH8xu2T/KggaTWZCIbiaf3vE83oOHq
YTvPp5JseHKX2F+QoeHZ4aptLCk2toTqrT+R2ovmw4sICM3GpsnKH+S29EIU
fp7JxtmldsqT3vdAkzRHs9lQ6silLDfswQ0jecmJBJ8YK22POnd1I4EsZ1Ng
Y3TSDvl5l7ohSm8vYqPu6uPor1+pmGE8d2nXUjbKl004GuZCBQE2mhVXsNHF
7bMqnEqFvXGJ15VVbCi3dezeHk5BmjFpgdnYyP+1eOUyCmjGFv0/Vdi4vtAb
DzK7MOe/ouc7N7Jx5loe//KOLhj8J23irUbQ11hwpu1TJ8hsSsNWNo7v+8Dt
OtKJ7P/yiufvIP6/Uea9K7sDnP+krp/WZmP2ufpNbbc6oGByUjFJh42vP7Y6
Myd14JBJdssA4ZfdC7jHyg1rh7uJhPcWfWJ/FDvSTFe1o9DEbMe9/Wz4pznM
ayxqQ59JxkCFIRsyyhGXNh1sgyLp7huzoR52meFBb4Wp6EM8T7ikuvl2K3xN
yYg7G5dXfT27RroVb03HXrPM2bi5e35/yIsWfDU1sl53mg0F7bLMBVotWHUk
Ydmtc2z0yqwU1LQ148SR0dbXFmxo591lvLJpRuARUqDZKFD+1tUh3YyKI7Ga
+y3ZqLxcOW9fWhNIbyHYmo0BK+VO2X1NUD1qEN91kw3ZFdffNPU14tzR6CPL
brOR0P+6SyO4EY+PkglPNgTCjzekNBrx+SipoNmY3z7hgC69AWLHIm+MurBh
cYmpwfdtgNox0uNnY4YpdfKYegOuHNNp9/ZiIzDrvaR4RT3I7EKDDxtPjWu+
CpbWo+kYX0vOn40ssRKb1y51kBQBDjY01zotuE2vhQhehbCRu2vIb/GeWlib
sY8OhrPxoGDiqcKMGojKLaPYWP0rat1euRp0kOUX0WxMcXwWXOf5GdNFBQJs
RKSOrDH+Xg0dEYBmw2D0QWDrlWrYHffpME0i+NeueeoErQqpx7v9olPZaMv7
rSowq0LPcRJxsBE6KT3are0TZpt7Dq/LZkNDTV1P+cgn7DXvTLiVy8bWvHul
9I5KOIkcQjb+/bBOfXmqElnmrtMnvWZjgtWX6HDuR7DNW9/tf8vGKw+uepTt
R5DoOaSMDZeXmtJvJ3yE4QnnlZQPbMwx6JQziKqA2wmyoIaNSX6vrTdsrUDB
CTLAwca1shdHlrd/gPCEw85XdWxk9vfRZt39gKVk+KqROC+yfYpflnyASJxb
2TBT+bUu/VM5fE6SFLPxUNd67rZb5SCj7Y0UNlRN4wc8lpVj+CQZsGPjxfmB
z+7N77HylM2tMww2/ruRXKr04D3MT1WsSmazEeOkTDPXeo9Hp+Qpgzw2Bn2q
tOZ/L0P5KauArX1sJEXS+vSzy/DzFFmAxsbajI9ijOtlWCcKQLNBq2h+2Kxa
hrOnryTP+M6GCvv0ixlDpQg7XWJ+ZJSNW9PLj3vklaL6tKzMsz+EHdAyLVdy
KsXf0xbv2f/Y8L1zfYi5uxSbzxTZqUzkQLH04s+XMqW4JEqocBC4Zl37SOE7
PD1zlvpGioOPw8lvrh15h4YzeY8mSXOQQflaGf/jLSTI9OBMDmby3iy5//Tt
/92F2RwUKeQKGLvf4rqoYJOD6NSOOK2hEojKgRU4GNB6pygXW4J2sjxoEQed
1pZYaFKCaecyyl8t5eD9nCM71kwtwc5z4va/lnMgLT5ssqz8DW6dM12zaxUH
i6XyP7PuvUHKObKihgMzcbleI603IKPPjSocLH/rX0d4iJh1nkRYHPTM9u9M
L3uNPecTfpxR42CwzQ/mD17D8fxoavJWDl5T/kH90Gu8PH/w1BfCDid8P6Ww
QP41WOfJAmcOZP8sntHPKobchZEPLjocnC/NO+73qhgHLhjcqdzNgZhcJNpc
i+F6IXqtjD4H+9u1/2QYFyPvwlDPkf0cpDQtbBheUQzBBb3gZ4YcOPck//L4
WQRRONaIg7X1x17vri3Cf6R6NuVAziHOaFZ8ER5Y6KTbHeMgOev3n1qHIryx
IDnMgfa+rj9HjYrwxYLMqHAAhdzAQOUiKF3U+njgHAcyI39/HJ1QBBJdhVoQ
63+54WYApRABF9nrqJc5uHK1xvd9WiHeX9SgLbck+L1UxlDRoRA/LvqHXLPm
YHfr17sVewqx9hJ9T85NDiaFLR/KmFOIM5fUf/2y4+Cw5d7ATkYBQi/5ZOxy
IPbr0pRte7MLUHWp+4yvEwduITKfRlwKQEZjm1w4uPhHYinLsACbLpMVhhw0
ZIYukV1cgIuXO++e9SLoKbiQ6NifjyeXyYgOB+uXLQldVpKP+suu9C8PCX7+
sfw0yT8fk8h0dyAH4UY/limezIfI/Q3hQGr9JffbKvmwvOL8uzKcg1/PLaom
/s1DLFmuHsUBL+dJS2VdHkTla9EcGN165VEWk4epVx3mxjznIHfAuGjwRh60
r9Z+4sQT+7F+pbHRrjzYXlV0Uk0i+K3bqsqenYekq3brb6cSOG6L1PpUdi6o
V6sYJRkcCOde2xRTkAtCmMMlsjl42h8vV+6TC71rJKLkQKf6RNmcE7kg0UZo
AQdHCrWnh6jmIvOafBa1mIPqoQXnbv7NAeOa1fkVbzkweNd+Kqc2B/Mty+ZZ
lnEw9cPqUyrROdhvObc65wMH3gFzlvIsc3BfRDAHWhnPLwg1c5BrWbJB9zMH
iZlNQm3pHPAtZVm+dcT+KmbZCbpfQZReaOTANUT7/UjmKxiTcKOVA0GIe9Dl
+6/gZUVWbHDwLcsjfp/xK7y2Ig8wBwsd9hbGr3iFQStSojmg3m185PgjGyuu
kxkkDrJ3rxZ0Vmfj2PWTn++zCRxrYfTg47Ns+F/PvveJx4HnVeNVBrbZIKsZ
ZvZx4Mjc4HtFPxsj10mDxMGtU8PW6xdnY411RkTMMLGeK08j4r5l4ZS1+AHu
CAfHQ9U+VH/OQoi16T/VUYIey9JXL+OzUGmd8ur2Hw5m39dbYeaUhT/WYxZv
/3Fgcqqqo840CxtEAIsLpzCjQLkNWbC4kVBzUJKLybnMqdrTskBa3zApLuiB
U2UD6l6i7gYZweJiyu7UOXnBLyEq35jJxaWMqUs1zF9iq6hAiAu29R6ag9JL
iNg7j4u403G7Lw1l4jnZTiHPxdvD5zWH3mZCVF65iAuz+XX5kwMyIXVT75Lf
Ui5CHqyKjzqVCTJa17ycC3+73C+RGzJx82Z/rcIqLizyigJGJmYi8SbpAHOh
vcDJMrojA5SbYWqpKlyoO+50cM3MgIwtWcHGhWXK/hdBnhnYbUt2oHAx8S6D
WnIyA3dsSQTNhXyZwazvWzKQYUtWrHBRb/xx8xrZDJDZ/ZnaXOyeGL1hX186
5t3yv3xMh4vIxFk/9T6lY98t+oLnu7kYmGnpIJ2Qjnu31Ou5e7k4P28gPtAt
HTm3fNzW7+divl/3xXdn0sG91a1ub8jFOl2XbB+kY6EoQMlF6Sw5297F6RDB
Z1MuRmr7orL+psHTrvOQ4TEu+Pq75Pp70kBao3BzYv+OnuzyeJeGATvX/O5T
XDh+/N7mG56GZaICVC6KjRMX11xLw1FRwJ2LqY8cd13XSYPfbeeG3MtciFvn
pN6bn4bS243uf64R+8XxfTd1IBXfbitt3W3NhRZPm7+kIhXK9g4Cv5tcZF6e
Hvj5aSrI6FWzHRdLzDcsXGCXimB7MoHEhVIOd2SBYSo+2ttNOu/ExdEL1p6U
Van4bV9VkOrCxf5zkzZfmpCK9XcWXRt24yL8OfNiTXcKLtyxWbzdi9jvWft8
5IpTEHGHrOjl4mH6rQlmj1NQe4dMiHJx7uzz7U/sUiAqRwok9mPF1Kg+kxRs
IcOTIVzkCQa8j6unQKSuwrk4mehnPTwvBTFku08kF3f2L8ovG02GqPw3mouo
WtqH1u5kTBYl+LkwXzp7kmZ5MjTvWli+i+fi0NYhinhqMm7cLVoyOYmLGZKF
uWrByUi4K91smMqF6v0X3+mOySC1c3gG4ddGfpWafykZM0QNDlzkTOtw3H8+
GbtEBStcKGycUphHXNs7nnxuVUDId5i4vrNFMtIcSY+Bi7mS13vcLieD5khW
6BD7c+iHSpJlMuY4mRXvLiPej738aptkGDhlWD38wIVt7OTyOvtkOIsKsLh4
o8uwCrmXjFdOpi0LPnPRO3z/6ahnMjhOKQ/O13HR6ugvzvBPxgIy/dtIvD8t
+5BKeDJE7mALFzMPPdZ48ywZHs5kQxAh75t5NtZJySCcQRM3ChcrlAzTVmUl
o9/54JTqHi6Sh25GVBQmg8z+yjK4qLQQ61MuS8aRe6TG4sLe8Pkx9apk+N4j
M4RcZN35E/ipIRnv7kW38oRcXM5+u/dDezK+3hvy3jDIRVhF4HqpnmSsdtHT
vDPMxQa3hb/tmck44RI5+G6E2O/caSeHuMkIdOmPmzzKhdfqKVOOCJNR4aJz
5NAf4v/TX2d69SeD1FaP/3GhOL1h4oWBZIJP/Dc9E3jo+egQI2Qk49x9rRsr
JXkIeu/pbtWSjMf3g5Zfl+JBYaZcjv2HZBDKuS1vOg/9qnoBUjnJEHPV8B2T
4cH5maLdsufJEIXbZ/Og1VNWWeaXjCuk+Z3HQ5zVdg7HLhmidjR5HpbUxGwI
OpWMJrI8fREPqxwkJ5fqJUPSrXvqhaU8qHxzq7q5Nhk73Da+TVvOQ+Ib5Y5k
mWRYu3nafF3JwyRjmZCzw0l44da5YscaHl5v1j/+tDkJHW4qxJcH0Hn+x3KS
IO3u6le9gYeJXRIBYUFJILOhs9R4uBudU2x8PQm33ZWHzbbyIJ8meeuRQRJS
3UkG82DsNlth//Ik9Lo3Eh4SD5FxA9M9fyditofS9I06PJz1S0/XbEqEvofD
uzu7CXrenDWzSUqEk0ftzdK9POjlLrNd5piIbA/FlVP287D368Tjhw4mgu1B
KiweIn7KX/+xKBGicgYjHtJ1HWQU+hNgSIY3THgo6ih7sSc7ASJyj/Ew58ah
iT9uJqDAsyLxujmxvl0P1xttToDQU/54/ikeomNDL1wffoGlIgPMwzKaR/el
rBcw8Sor1bPgQfqwQ+sRqxfw8ZpLaGgefHQDHpgovwDp7bde4+H9dJrqXVY8
hr1KuhZa88Aa85WkP4vHygeyARdu8rDgSppB3LF4AvOSgJKHkOcnN7fLxuPR
g6JvX+/wYP+95G9EdRw+PJBO3uHEw7c3PI6Yexx+Pjhr7u7Cg/qeXytX74iD
infejM9uPFxkzfi16mssyOzgLC8ecvi7nsinxSLcm3SQeNBPfqU373wsqr2z
V8c95OHwzbtqWxfE4p+3BJX/iIefkflxYc3PIUofhfAIO+r+ed/D57hMwslw
Hlr3jfGt9Z5D1C4ZycOHL/dvav6NQSPZPhHNg1NEE6/7ZgzIasLDz3lQ3rg6
4zvvGbYT0hwRz8Py08XqRWee4bqvUXlvIsHPU8dbbgxEI8434faqVB7UUrcc
THKJRrsvWVDLw78QSnXBrGhMEwWweKhQWLIhJukpdvrFBv7NIeRfq/30ce2n
uOU3orungIdXvzs1OW1PkOJn8MO/mIe5JmMpsHkC0vttLeGBrTff97z0E8x6
OER4hDzsahh7Z5gWhT2igCwhT8Neqn/3RcHxYeSH9EoeZqV5F17vi8TLh/32
36p5KB3t2Bn9KBKshzprNet4uN59MNVLLRKi8pxGHjRMS9pXUSJwUFSATpyX
M2Npzu4REB3fDkKexphSnioRyPcP+nmcwoP1ur0t2zsfQ+DPTovr4aFZ+Kf/
iddjLAnQOC2gE+vdTtFIUH+M/wL8Z21iE/stVxj1HyecwJn0CgceDw89rnyN
jwjHmwAyYcaDuXPFypAD4RgK8FknNcjDwQlx8xdPCAdZXXd4mAeXWa3JOkVh
OE5wN2KEB5kMtZJfNmEIeOS5h/aThxRtvuULlTC8f0Q2bPAgsWKHY58gFD8e
kQlgHn7EOH0qSgnF2kDXMwUT+GD8upIqcTUUZwJbZ/+T4EPZ+d3tqrWhCA1U
rtwjxYeqtYb734EQVAU63w2YzoepfKjSs5wQkN5gmwwfYh/8cmIdQrBJVNDA
R1AB1W2CTghE7tE8Piw1dflFUiF4QrbzyvPxNcpRs6w5GKL2noV8+CzY1SQb
E4xJwXaZmkuJ+yX/E0u4FoxtogYn4v4XVxfe0giGlahAhw8XLT2nO1OCQWaP
Zq/hY51CjF1aRxDagisczVX4aHVTOyWZGoSpIfLr4zfw0f2uzM/NKQgIsWII
NvORLD/RRP5wEGxDysI2beXjcUfu9A8rgpAcQhac8SGtFzLN6VcgqCFX/pRp
8WGVdDxxe2MgZENLXkrp8KGgX7lpNDkQZLWZ0W4+7K3DJLNdA3GXoDZyLx8c
C1d7c/NAZIaSDYF8rFkwqrh9UyCYoWQBJR8Dyq71A1KBEJWbGfGx3eu7uXLF
I4jCzybEepfNGzlx5xHuk+boKB/rXZJZziqPkBt2ct9ecz6iv3x7EcQKAD8s
eyzgFB8hNbuyoqMDsEhUEMyH0+XO+0nHAmAcbnZhsQUfFfJiQblzA0CAjfkX
L/PRpf73eHWLP16Hi3/OuMbHqlkLzAbC/DEYbkpYYD7kJj2TWGnmjxWiBlo+
5M/Wdd1e7I9jj8dYHnZ8hN/7asxhP4T/Y6OImjt8/M424Tm8fAgymzLHiY/c
wxpztzo+xPfHo3/NXQj5yeL9t9zgIdZEHHwV78ZHi1Lq4t3yD3E6ItZC6MnH
rMkVg8+EfiCEWW6zDyFfKfd1NEr98CnCoObuQz6mnFsRIPfYD38iol3eP+Ij
wuvHoV03/LCRTO+H8HHDUkf8zX4/iNz9cD7GLhss9FP2w//7zflIazyyIE/K
D6L2s6d8mJtdF/v1w3e8/5wP1sLrDQ94vtgaFZZzI56gL3xo/l6K73g/Oh8l
O0PPL23wxfMoLQWxVD6Swobw56PveH86H3EyCRrl73wh9YR9/1EWsR+r93Wf
LPYd71fn45+5U0Fuvi9uPvHnLi4g1res3SQr13e8f50PnZ8jOhrENeWJumFm
CSFfR25N25bnO97PTshzfr9WWIEvdj/tztX6wMe70DELjde+4/3tBP+uYqZ0
qS8ynnouqK3mwyzbsOpnhe94vzsf8ayPi9g1vphHlk828vHfPd2o4hbf8f53
PvJ/nv58ttsXLiS8aifeX1egVc7xHe+H56PmDse58osveNHOhxx7iN9tH8gd
/e073h/Ph/HWLVHHJf1g9EwpfyqbjzJCExXL+o33yxPyILnW8/QiPxQ/q10Y
JeRjh6ywU4/gz//75/k4rbNyWG+bH5bH2BGIg49b2lq9mnv9xvvpCf0Qe9p/
2hE/PIxZJCj8yUfKxBJe8AW/8f56PphjHt05N/0wElNxWP8fH7uUuUcP3fcb
77cXoHXx7N17/P1Aoud2CQGS7bcFOET6jfffC/CpxmtZ9Qs/fHw+d/Gl6QLo
Fqj0y730G+/HF2Blw4muPYV+EJWrzBLAOUu3TY2Qz//35wtwZEi2tvyjH0Ti
LC/A27U/Uls++4336wvw/ueyE/r1fiCj7XOXCnBj6EPNvwa/8f59AZozp/Mp
xPXVuLzCFysF+FWlHF1S5zfezy/AMGV/q2e1H5rjTi5RUxGg0jnOee4Hv/H+
fgEe6J90O/jaD5rxEl7lmwVAa1r9jCy/8X5/AX6/KTHaHucHsjrHeLsA1RHv
v2UF+Y33/wsI+3A2iO7khxkvTP9j7BTg3tbyy3kGfuPzAARYV+3ALZvtB3tR
A4oA5yerrVtPnI//zwcQwFYh1lTpuS9oLxKWihsKkKV6w63mnO/4vAABrlkf
bjyw3Bei9KCJAD8nD52po/uMzw8QIGW5+GGHZz54lTDSv8RcgPr+9SV2Zj7j
8wSI/QxaVymc5YMFidEmL88S9G9PfDjxs/f4fAEBtOccWMd29YZHot5r7csC
3DKo/VC41Xt83oAAbyQ6byX2PUB/ItmwJcDlW4vN254/GJ8/IMDn0gPhN0we
4EhSGIGwBNgyb7Ze9OQH4/MIBBiLWerlUeyFd0lag32OAtz0WXHH0MprfD6B
ANyxWo3lS72wOplt6uQmwMvVNfw1zZ7j8woEWKBel+jv5YmgZP8303yI/TV0
f2S73XN8fgGxv8+j3k8a9MCvZPXlTx4J4H3n8s7eBI/xeQYC9PxhRGRae+C8
qMFRgEahwrTr2z3G5xsIcGZ3adlcSQ/UkO27TwV4KOHOjW5yH593QMin6uyk
vzHuUE9VOWoQL0BJydK1G667j88/IOTzlfmzNVrueEagq44UAS5Nv7WWM919
fB6CAKlV8mPHu90wOc15xeUsAQL4f7RcM93G5yMIIHutVs7ovhus05T8fuQL
oH5wR+F7Y7fxeQmE/AV831On5IaONLIhWIBz618OXht1HZ+fQMiHytzukFpX
kNHYeR8EmO/doaEd5zo+T0GAi9opG87buyI1fdG7hGoBzA5t7ft1wHV8voIA
X4o2PR5b5gpReXujAGud9584P3p/fN6CANMiNl5c0XAfIve3XYAgqbDebUn3
x+cvEPvRoPQ14t59UfXGfz0CPOoL+ax55P74PAbivGYebJ+seh+GogZ6AcS7
99cfkLg/Pp+BOA8faxzvF7mgINOi9KZQAMuijojCyy7j8xoE8Kw2098i54Kl
L6VXTRgWYM7GAWp/5b3x+Q0CuK5QS2m2vwey2jvopwCbqVX/KKvujc9zINb7
6ODm3+3OGH558tvSfwJMun0yXMnbeXy+gxDDHx87HtrmDPMsCeIrxPuiKHUr
ntP4vAchqJ6T5ttGOOFDFkmwEMnnbG+a6juNz38Q4uEDz6gpPx2hQpYTzhLi
y9pO+v0kx/F5EEJoPpj+5NURR4STcENeiLaGErlgCcfx+RBCrNzplzE79y7+
ke1mS4QInT47fe25u+PzIoTwsvp6sU7mLi6/OnjCeaUQF6KqN3x54zA+P0KI
8OotJzyvOKDx1cj76SpCuKu37XCb6zA+T0KI4Fl7l1FK72C7yCAJcfjjScnm
y3fG50sIcWjvP7ddY/aIz9ELXLtdiH9nX6evDLIfnzchxKjhJGbyCntMz+3/
XrxTiPY9BzyHC26Pz58QYrObxNd1+2/DTgSwhEjQiPNz7bEbn0chRFVCaKb8
TTv0ENa386AQW/8Zvl4saTc+n0IIn3u6ssVRt7CXLN8wEeLYCZbM3A23xudV
CIHG+HlmH22RRbL3OPH+ud88Xp60HZ9fIUTRub3FOt9vQi5fnXAJhXD5IjNP
I/Dm+DwLgp8/3v14u/YmyGjd/MtCLMquevvnk834fAshlE1jqhdctoEgn3SA
ifsX5tzVk7IZn3dBPB/2qvHpN/Bfgcq6LXZC2Pw4qXfK+Mb4/Ash7v98pbVz
xBpvCloJBE1cSxeqrdhvPT4PQ4i5MS9VXydeh5IooCOE7eJ7gqNTro/PxxBi
1wurrp67VggoVDrD8hbiRmfFgur1VuPzMoSwsxuuFwos8aOw9qPtIyFG/mpv
5KdZjs/PECLkz3eHSzctIUqXhQvx7ZsFa5q25fg8DeH/Wrj3oKiqOA7gxNqi
NUIijiglioBBQIKOqMF+YUTlrauuJPFYWFmWXUxxJEXSzDSYFJwkLeJlkoli
uTCtyvLa5LG0WEK+JjRUEHE4v3TRyIYkurucP+/cO3fuedx755zf7/eB/v1b
Z3PtM2HlD0oZDpmP2yX0a7ivwTDlJfPidQ0aBOjbRudVMvR4+m0RFWu4t8Fw
4lHpkFOOBiV6y4a7MD+u5A2+laDh/gZDafzy8j9DNZhUP6MjRMvg4mwTMe6l
4R4Hw5zD7m5iJw0s1YNdFxiigp8pTo+ruc/BEFZ7MTyf1LhZbwkgMZzPanwl
tkfNvQ4GP9u1D8o61EDD1BePWxiUQ3qHNy6qud/BMKqNMG47pUZVgy51r4mh
8M7qlZIiNfc8GIzPbFq996kxzRoQZQjfY9hzW6PmvgeDbrz73IhMjd2W7clb
DGOVR+KXB6q598Fw6Z0HP1wdyUB/4/fHfXoZflo3f/bC2gzufzAc2VHflZKZ
gWhrgF94H31c7DTuGdwDYYgV1wxLe1TQNY0pohiDTwFrfb1QxX0Qhu+il+m6
ocIc4evcM8zg3zX5+QdP0rkXwrCysqPJsSwdec2WhBUGmXQwpDo8nfshDL+n
XatZ9VQJc/OIsGJgWJ3570pWrOSeCGG6+Rf/CiixyVD2X/7LBN2HdWdU/Wnc
FyGcLPPpizmYhssGSwIWYW3vMQeZRxr3RgiLTQrlgZbNsKZ7OxLaaJJLX/Jm
7o8QcroHU3aMKmBdDs4Szotyt4YWKbhHQpjr4LtrjbcC1nJdV8L43kztt82p
3Cch3Oo9Hb16fSos0V+Zp3C9Pubj4IEU7pUQ+gsj9g5lpeDXywXKAR9C34Dm
r52P5dwvIdgXOiR+kyFHoDVBlhCVuyJjkTGZeyaEmzLXJwvqknCi5Y9Fk5YT
gp0Lwj49k8h9E4Lo7fTUH79KgCVbtCiEUCXOD3XOe497J4Tzr5p6ZmbHY7s1
4Zvw9Vm7BbMUm7h/Qhha4+K6X/oubrfeSK+NEZ5fdbf+Ukgc91AIhmS/v938
N8KaXreBEFHZ1+45X8Z9FAIqbnp6z9wA6+83nuBmeGBfNHU991II2dsHdxrF
6yBM5hJ5CqHOrS7eVyTlfgphW/BirbdoLT5qz7Y1pxMCk5R9kfax3FMh7O6Y
62vnGo1H7ZaCHKE9R6MDNi6L5L6K0D/HyvtFSeGQGtuu2mcTRs52BtwpWMW9
FaF/q/OnVf8cBr1xy5LyXILH1s+yghxXcH+FIOk6GJagCsV8a4EZ4WJs8j/n
isE9FoJtSY7T431BONzRKGrMJ6QFthqm5y/jPgvh4Y2qezrtEox0pKmjjxAK
3vw8LvPFIu61EOT3H06+mumPJGvBJMG0eYGWif2430KILLGVDn/iBaOluaXC
sSmgvne9B/dcCD2yQ7r+nHlYaEosHz1JcAhrnip/6sJ9F0Kzh5genpmBYpOl
AJhw3/loUf3c17j3Ioxn53T3XL0YtsJqf5aWULpGet3/yzHJhP9CmKKVe7mK
hiWaTtlvVRcI15Jbng+H35VMeDAElWQwLMRskFzvHFu6tJF4frqNzYQPQ7js
sKHaa3adJOjKqQpjC6HJJzn4Us1tyYQXI9y/ef8X97zMEkt0MM4kjE9Qt3yX
YkzyP24pSrU=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
5JCSGWE/fvpuen2nD4r2Vfc9rGmo+6mabZPfB41XF45wjtCwRmyA+zB7/vKd
bo40JP9yd7tQ2oejm+xWziX0vcRveUJDE+e/8klroy8Nzr+p+il1fUjsKZ6R
RtiPd7+dcpY39iFn6+QM3+s0bPojPe35uz64Wa4zPxVP2I8/JKDsQ7REz4A9
Yb9m/LVv/8DoQ9KWyM2n7hL2468UTvL7oDCNKe31mLAffwvujAz04bHZaY2w
54T9+HdwevDXPggn0vdnUQn78U/i3NxffTisfNmu/CXxvHGkxDNQt6zKYyFh
v7eMIz1WBhz+6FgcIuz9+XGXLO0nM/BIu7UvgsAHD8a1TMqdyoD69PGyhZ+J
941bWvZpBgNH6Kr8+t80zJXwdVkvzUB7Ssqemkl07JRoVLkylwHF5qaNObPp
8JNQfV8/j4Gi28seHFOgo4B0RxYwsGLfpJifi+kQq6eFDExY/I59chUdCsTt
yVBl4JXp55TbunSYjnfP4i1hYMq8htz7oOPq+Np9q5czsLWcIuVJ4L+S8fJT
zmswMOni2if/zOn4ON6lvGI1A20JUXHbD9KhMoF6VnItA4a79fK2EvjTaoLs
IhMd4vmd8aJhRzrCJji1xq9n4M/Vybv3uNFROaEitHsjA/Yh36gmBN79PEF6
0xIwcFm13mj4Eh1qEx2GTm9hoDe+97VWEB02E0tvPzMi9qdy22RqOB3RE2fs
/7WTgZDx3pVeUXTUTLSX2rqHgb6LNFnXeDpGJxZRws0YuPlKaDxM4PVVklJu
b/cykMyQ0vS7SccxwttX2M/Agt1eD7cQ+D5RkkQADKgsZTuG3qLjlaRkeK4t
Az6b3e7tyaTjn+RB/eEjDIyc1XsUSay1Jz38tP44A06BNjQTYu04SSLnykkG
7uz5sjyM+H36JCsCgjJw8ZaS2mbi+SR3Z7swULHnu4QH8X7JyX8qrN0Y0F+W
/lcplY4NxG28dY6Bxj8ax7Ym0XF28p0l/PMMGNypdmfG0ZE9ebRt9QUGjg16
e3wn6G2bbHL9/CUGpj04mxt0nY7pU7IMKq8Q64dUm9AQOjaLFQYD/9VFNEkE
0OE1xfiOyTUG9r8Y2v7pAh25U9IPJIQzsC144lRLTzp6pwxP64lgoKVJYKvu
QsccKaOqJTHEfs6XBnk40LFDKsXjTDwDU83i6lbZ0XFRamBpYRIDNupxpw7t
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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 
          NCache[
           Rational[4, 5], 0.8], 1]], 
        LineBox[CompressedData["
1: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
nNNlY4Fp++T76zKhMfdrdo4eG1fbVfT2zs/EzrlbXEZWs5F/6Nug6+RM3J0b
MXPrOmI/qitKq/9lgDq370PABjaGVVqHz/ZloG+u8Z3mjWzMttqS6dSeAe15
YWs0N7ORbHL1cVp1BvZIHFI2Fg0E1ZvmZcB/nlF0ijkbgiaVl4uSMkCAjZ0/
trOxwdPHzPFJBn7M48kYWrPhdvjSUKdPBhbNN8i9s4vYn0knflAuZ+DA/IBT
tXZsvB/Pv9jinIHg+SzNKQ5sPP7omblrTwYq5us37NvPxu0vyf1aZhn4b77v
3ReH2ODzpY+YrcvA8gWda8VH2ZiyXm5r2eIMHFtAerhs2J81aY3QyED4AjJD
xYbceOypVswAIcw2DFc2zvnf/r1bKgPSC0lEyQb7+pM/679TQKKNnRfZoByW
eebFp+DUwubT4e5sLCuwmTy3jQLCOZzN9GTjpbJC9IL3FHxceIP4snGSl+Xu
X0KB3KIGn3O32Kilt7XtyqVgg4RgNmbOGit7M4WC84s8e0fusZHqR10x6QUF
hHMTs9WPjQ/370SMDaegdZHW7sAANhoixFePBlIggRtBbFyJ/O+xnQ8FmyUB
TzbKunhPhdcpcJccYDZ2nkx14l2i4A2ZrolkIydpkcmOMxRIwjfRbIQoLr+m
eZyCqUvU7xvGsXFTIdzW4RAF5kvOrL8bz4aq0obpUg4U3FjC6KtNYuOH/4DC
5N0UUJaQBomN7K8PrzyypIC/xMXWMY2N7+nieA9zCmYspcu9pLCxbT2zrc6E
AuulKgXiLDbsRkyPPAIFd5Y6n12Zx0bamS9e9A0U5C0lEwRsfPtNvWm/joLe
pSTAYqNA2TPhsD4FWsuOPJAvYSNhvqzhp5UUkNbXppyN7a/0iR2jwG+Z/EB4
FZvAsezPCsspKFx24AWzlo01VJZrjQ4F35dR7BZ9YCNz0cTg38sokLD3IyEP
VesehhHXjjoOtNxmNorHIzGOuA7SST33r4WNB/t+LtAk7i/TkZ5r1kHQo7tm
z3hdCoZ07D4FdrPx4kfztWPE+3QkCTU2HDcMzF+kR8FR3b+Gs/jE+q80/7Jb
RcETXZsvziLifN+dWvuDoKdWN+Flai8bBlLOCrIGFPzTHdozOMDGJX+vOfcN
KVi9nETQbLiWz/S4tomCk8vj6Hd/spFuOXiNbUpB9PLB8++GiPNRynhCs6Cg
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
I14=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[43, 255], 0.16862745098039217`], 0, 0]], 
        LineBox[CompressedData["
1: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
BHcjTXdmUv0AFcdqbQ47eHfDNMR4mQudirLauflTnnRjT9Kq0+ofqVCsK5R9
GtiN6ubp9d/fUhFYd9ZLPrwbqra+1ZWvqfhdJ96f87IbDY27syJyqbAUHuBu
fD1EETglU9Hw1oyQ6G580bFtt3hBhcY70eVnKd1YOv1fu0EQFS/fJXuPFHbj
9fDng3hAxfR6owH3sm6oHO2I2OpGhX39zyMSNd3Ie6i1Yss1KjrrSYPUDbX4
S6eULlCxp0F/hWprN6xOJCbknKQirWH0XmlnN2ppShk4TIVUY/jgAXo3Uh7c
nd2sQ8XtRm3jbm43LGJ2nL60jQpuI7/o8lA31G8zNcVVqTj8PkDu99du3L4i
ppO5korC99sePPrdjSel6rPMZahYSVjfRZN6kFX+Y8P8WVQ8/vDQJHl6D3bU
0Q40i1Dx9YNayVaJHrivuvUrYiwX5k0dK2ulelAvf6TVVpALIXuX9uC6zLcb
Bn25UG1WHOGs7EG14RdH9dZchDY3mToq9kBatv2GYl0uRFqcS6du6EHue1Vx
5Ve5sGmRWxWs0YPP+fcbt1Fy0dxS92iVZg9WrLY7bZqUix2t9qOUPT3wv3TN
1CMyF3Gti47v2d+DwLZlh4oDczG7rfxV8+EeOOeL0qc8yIVjm43CuWM9CD6T
lGzhlou+trlPRs17sEUuanfdtVzofSz8fMeyB9n6jnt1L+Yi++NZM8nLPTiq
VGDYYp6Lxe3iBOToweZ9M/uuHs2FZ3v26vVOxH4guk1EPxcD7WY+r273YJ51
hGiiVi5MPol+Pejdg7zoPUbn1HPx6lPyiZ7HxPo/8XM2KeViTYdR+ZXAHhgM
dyxYuiIX/h0/1/wJ64FawxmrpdK5+NkR7fv4ZQ8ajr0L3DwrF+cIa7Q4oQeL
HKwfX5yUi3edoydT0nowZ6a7Zt4PCtS7wokT3IOk8bOhy4cpiOzSJkS6B/St
p+7HsymY1s33O17WA8rzot963RRc7Q74xq3ugczct4wZLRS0d28zv9nQgxmu
7UoDdRTs6qFXTGvtgVfF+jeDZRQk9zxUCunsgUfD8lDJAgrm9aoFKNB78Mv9
a6hJJgUuvR3fc7k94Jf9yilNoIDV62GhM9SD/Y7uH/VfUHCwT7Gq5SvB73vv
R34FU5DX16R8/ncPse9bRpp8KFhOcw78LNqLjgNTK957U/CAJvfTY3ovqt57
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
/m3igttM2TFTmQ+hO9jKxXnHuFLpTh683MiGIOI+/3V77gMeCGfQ+G4XFxvO
V8WIbOFh0O3g9Le9XPyWubFFis0Fmf2dy+BimtbjjNkEH0xvkxqLkP+Zb1dM
Jc7Jo9tkhpCL5tzhBGlCj72+HdnG6+ditn2xmTlhZ77cHn2wYZgLd4cBo68G
pF3R3en0mZCP79pJ336xcco9fPj1GBe/VFwc3Anc7O8+GCP2k0vgrWPNySfY
qHLXNjX8w4XKk+B2/5lskNoqdJyLmuVjkYalLKje4Zf0TuLh486nzGmuLJy7
o/nf6mk8rNy/Otlak4XQOwHyV8V5OJLHHcscZ4JQzh+ps3i4ZHJ7UvcbJkQ8
tj36K8HD1d9+Yqx7TAjD7fN5OO36RrPcgAkb0vxK87AnrbjnylwmhO1oi3hY
clpuBa2dgWayPF2Wh4GL4ZoLXjIw7W7PDMsVxL5G1l2ddIGBHXfVXqXK83C3
6dhA7HoG7O56239ZzYPhJ/7Q6A864u52rNqhxIPcPYVM9hs6Pt1VIT48/M7I
snLyoWO2p8fjtxt4oK9WM4g9TgeZDZ2nzkN7+YGw06vocPRU/GxG8K33aLJ3
wggNKZ4kg4nfZw0Y2JfS0OfZRHhIPKill8gXPqJhvpfCLDVtHjyXvta9eZwG
PS/n1046PHxtDhfErabB1avhWtk+Hubqs4MdBX3I9pJbPd2AB++3vVoXHvSB
7UUqLB4Mmi9rz1nTB2E5gxGxn9M/zbGo7sUhMrxhzENn/LuewNO9EJJ7nIdb
gbNfJfzoQb53VcLVkzxUhCqnmwf2oN970Yk8Cx5cTXvcS9b1YIXQABP8sOuc
UVvTDeN75WW6Vjyc9exc6X2+Gw/vSREamoelm4Kf/xjvAuntt13m4cLyNwfW
RHbh873SzqV2PMzgL5wuvaMLq+/P9bW8xkPjBqPYuo5OnBQCSmI9oSu/7HXu
hN/9wq9fnHhoK9WpD1zUicr7s5N2uPKQrGM3OaeoAz/unz3p6c5DSb2ZbfKp
Dqg8oM55d5fY/2/FvW7jn0BmB+fd4+HN+YPr1GM/IeQB6SDxoJtbpdS07xPe
PsheG/OEh9UPuzPMBtsx/mBqN9+Phw2e+j7NQe0Qpo+CeFi7pzJi1452XCTh
ZAgPn2ympCUxP0LYLhnOg1hYebCEz0c0ke0TkTy4XaWsu7XlI8hqwsNRPEz2
DdAdZLRhOyHNYbGE/IbOp9r6teHqI6OKvgQecua3bH2MNsQ8indck8JDUXf1
4aGRVrQ/IgtqCb1wbovamdhWzBQGsHjYvSiW22vail2Po/3/UYj1OzzwuDiz
FTcej+3Zm88j8KfVrN9lLYTd1f/uU8SD0mBh8NObLSC937ZSHjJGJylvWt+C
eU9GCY+QkO8rrztauc3YKwzI8kD9YJt5M7oZLk/CK9NqeIgMelK46FQzMp8M
3vz6luCfYsTUQplmsJ5oK+9sJPZrqlT00dYmCMtzmnjAc5dwbkATDgoL0Akc
cu7An2uHmyA8vp944Lyb2v5Fogl5PgE/TnQR5+fA6i0XP3yAwIedGtPLg7/Z
OqXGgA9Y7rvttIDOg7x1SKm88Qcc9fWZt5HNw3sO45+1zAc88KVXOfN4uP9y
xXfl/Pco8SUTZjzCP9h+11z7PUZ9H64TH+Yh0VSiyKKhEWR13eHPPMTPiixU
PtmIEwR3w8Z4qFOnPSsTNMDXz3sv7QcPlsPeTVZuDXjjRzZs8JDef/+/jrkN
+O5HJoB50KGPZE1Kqoeyv8eZ/El8XGoRN+xEPc74t80fn8qHRdUSMbOOd3jq
r1izV5wPyyK74Js33qHO3+2W7yw+iqiH8lTnvgPpDX6U4COuSHT1zcy32Cgs
aODjTH1TlL7hWwjdI2k+Ng6JMV+M1OEZ2c67iI/j8oNJdkF1ELb3LOVD2u5t
Ru6WOkwJdMjYuYKPlFZelnVPLbYKG5yI7x8LuHzbqxa2wgIdPk7/mvXs67pa
kNmj+Up8iJTH/S7/WIOPgVUuJ1X4cMuI1u/zqMGMoEXrYzfwIVN9QFtXtQYI
smUINvEJ+zL8YqCrGteDyoM3biHWf6dpWeOjaiQFkQVnfCxW0nRjbK9Gd5DN
n3JNPrJmuDiuHKjC3KelmeLafCQptFbfe1EFstrMSIePPbcDlKYfqcItgtrw
fXyUy/wxfzmtChlPyYZAPmb/WvYptqgSzKdkASUf57bY8pLsKiEsNzPiw+90
j1yeQiWE4WdjPs53apyp7a7AHdIcHeMjVULbvftpBXKDzffvO8nHlgsVJ4YP
VoAfnP3X14KPj3rejX/FKiArLAjmw2TpobwpFW9wJMTMcpkVH5767EER9zcg
wIaM9UU+1m+dZzS84w2KQ0TfpV/mY+3h58X1P8sxHGJCWGA+dv7cLx5SUI5V
wgZaPrY/Y0vpOZXjeOhflpcDH8ORm0r7tpbDJ9QorN6Jj3U2fzrNfpWBzKYs
cOXjlaWYAaWkDN9Cf/476c7H9R9L+Dz3MiiFHcyJvUvgiCeiAd/3lOF0WLRV
vzcf3vfdl3VPLwMhzAs3PeTjd1xR5+rI16gN06+/9YTY7+TKHHWl1/gTFun+
xo/gx0Cqa1fBK6iR6f0gPjI0x4cX6L+C0N0P4QNXDlZ2dpbif/3mfEzSU8he
fbUUwvaz53yEzVTX0RUtneg/5yPhjZ0HPbgEWyKCKf/F8vGJObD7p/L/96Pz
0cl+fe5RRTGiIjQXi6QQ+4u/RYGniif60/kYsy5UkPxeBPFn7Dt+WcR5aZnu
JhJUNNGvzseh3+MRZzcU4dozH+6yfOJ8mVDM1N4XTvSv86F1fEuQrV0hup5t
PpRRykfErSi5BXMLJ/rZ+YQ9mty3MrcAOs97cjUr+bD7cT0+9HjBRH87Qa+2
mOF///KR/tx7ScNbPjS8mqgp8fkT/e58jG/hUnQO5UOaLJ9s4kO35ZT8zh95
E/3vfFDq9/b6xubBnYRX7Xx8jSh8tf1w3kQ/PHE/t+6F5j8qeJFuhi69fDzz
f3w8OJ060R/Px7H4+dWwoMLohULeDDYfATaO5dslqRP98nx8O1q7yqsiF0Uv
GpZG9PNhfvV1xQqn3In+eT52WKvOlFmfC/mXDgTi4KNS3/fBES5lop+eD+fF
bOvGKAqevJQVFPwg+NOxtcn7JGWiv544Tw/9Pl+XoWDsZdVhvXE+QpSGx4Ja
cyb67QUYe2U+jR6YAxI9t08V4N8++iHTIzkT/fcCbKxx/zU0LwfVUVLLLswS
QEIL6gmt2RP9+ALIZCisuRmaDWG5yjwBahdu+3fqZPZEf74Ase7urCMrsiEU
50UCrGH9m2LMyZro1xegbV/po5PpWSCj7VIrBFiXVhZl6ZA10b8vQPo8iWuX
tLJwKYZaELdagI+uGYoXp2dN9PMLCDynz85OyERLjPlydRUBdCtHhu20Mif6
+wV4XGZeJ/IpAztjp96r2CSA/IfnNSeuZ0z0+wsw81vhrhuSGSCrc45sF2DP
5vJHezLTJ/r/if34ueRdlmE65sSZHGXsEoBaM3yNMpI2MQ9AgA0fo94ZBaXh
prABRYAH7xZyvLakTcwHIOg7qN2i25MKWlz8CtFDxH5OnhLn45U6MS+AeF7A
fhsTlVQI04PGAtx6+W9TSHvKxPwAAcKbxaX0PVOQEz82uPykAEpNJrIXNqRM
zBMQQE+73pzfm4wlCZHGmWcFmFFnyq31TZ6YLyDAozl9b/8hGV4JusVahF9D
zz+0yOtz0sS8AQHWXvZjGiUkYTCBbNgSwKnx0fazJ5Mm5g8I0H9faX3q3CSY
JgYTCEuAMM3jzWvrEifmEQgQEfxXvcUjEa8TNYcHXASYrjHlYuyOxIn5BAL8
rTRxDfyWgLVJbBPXuwIE8LruhuckTMwrEKBn750n2XYJCEjyKZn5UIDf3utS
WlQSJuYXCDDpwNuBHwPx+JW0Wf6ZnwB2SZc+TU2Pn5hnIMBi6tyVM23jcV7Y
4Ejsl09ZmKhq/MR8A0K+Fy4fYQ3HoZ5s330uwHattq6snLiJeQcCXGc9kjjr
GIfNKSrH9GMFSPnM1RrdHjcx/0CAAcOnsuYicXhBoKtPyQJoM7ecjqqOnZiH
IEBe0K38PJ9YiKW6rbqYJYCJ3pTOZyaxE/MRCH7xXG8ZLIuFXarC4+95Amid
eHKgnBszMS9BgBfenZN/ZsfgUyrZECyAsZGE8ZBrzMT8BAEuxTWPPNeLARmN
la4k1mNV7yMiFTMxT0EAtmtc7wJGNFLSZF/HvxXgzIdJoW2Z0RPzFQS4sM/v
ktbtaAjL25sEmFY3OsvgYPTEvAUB9u1sVvu+NBpC97ddgM0PPj3RGoyamL8g
IOx8WtPSV1HC6o2jvcT52vuN4uMXNTGPQQCm887E22ejcEjYQC/A68Ejqc6b
oibmMwhwe7CL/3tqFPIzrMqu9QuA2A7BlJyXE/MaiPPG3ly+wOwlVmTOXjPp
M7G+I99d5ERfTsxvEMArQm+XQsoLkNXeAT8EKLUz3rTY+MXEPAcB0u7q3vr1
LxKfM82/rhgn9IHX3u1lKZET8x36Ea9wN8zqWCROZk0lPv1IlpEvYk2JnJj3
0I8TM40rt1CeozKLJLgf1Gx0Hz/3fGL+Qz8KiiXX7J73HCpkOeG8fpzpHK0b
fPNsYh4E8bxXswUmN54hhIQbi/oRtMgv7cbqZxPzIfqx+HmUhk5HBMbJdrPl
/djx/Ur6qycRE/Mi+vG1a5lG764IXMw5eMptdT/2/KaNPR8Ln5gf0Y9V03rn
jqWEoyln7M0slX6EpO/KpJ0Jn5gn0Y/gmE1fzGTCsV1okPqh0/DeV7UxbGK+
RD8EfdIlh7zCEEvR9Vfe3o/aV8mfhraHTcybIN6n4Ogw63MoZuUOfiva1Y/S
Rhv5+OTQifkT/XjmeO163tlQOAgBVj/wye2b5uLQiXkU/Zid6ay5rSUEvYT1
7TjYj4t5Rzvin4RMzKcg9jP55wmPvSHYR5ZvGPfDRMfsaJ1IyMS8in5kaJ85
6lIcjCySvSf6sdL8T/9Tx+CJ+RX9kDqyJGP+xmAszNtMuIQEPV0pSmODTyfm
WfRjal7YZ42UpyCjdTIX+1H3rDnko/XTifkW/YjQ25vUJP8UgjzSAe5H1016
vgI9aGLeRT+GWQGmH14E4Wi+yjoNB4I/BrpS708FTcy/6IecNd9r+ZIglOS3
EQiaeN/oZY3XHYET8zD6sT+xqCg1LBAKwoAOSV9FDONY4MR8jH7cy34WoSIT
CN8ChTOsB/14bvuoK6wtYGJeBiFfp19NM3gagO8FDdXX/fph/mOJqO7RgIn5
Gf2QSLqfeX9eAITpspB+HO5jf5vf7D8xT6MfcXOWlAgC/CEcf/C8Hz4JM1n/
18KdxkR1RXEAJ4oKAayQEiUlojUx1ECpUBFR+8dCsAWRskmxgIIgyCbbKKvD
ojIsA+NSRJZxQARbQAnLpEUG0FFWEVoFqi3alNKq92jFltgqYN9M7sf37Z37
7r0v955zfobeMu5rMBSvrPRJN5HBtuPW67UXGXxqQx7F1pVwb4OhVxromG1Z
gooOzYU7Q/rtmWzbhmLubzAc3fFUnPthMXSvmfY7NTP0DC9fELVIucfBEOht
2WuwWQpN9+CoksGr+W21a2cR9zmE9dcf9JXlp0UYv6ZJIAnxZRh0tvQXcq+D
Qdz4g/RPz0Kg02juuZrB2DG1vH+igPsdDGZLhxr89xfgcmd76LFBYfxmSgpL
n+Rzz4OhelK2OC8pH8bahCiDdUPp5IYFCfc9GFy3Rk3l5kuQprmenGCYHlpT
dtpUwr0PBnv924a+NXmYUjWVWj0U1nfd9xajNnnc/2B4NFPfqNd1Eru0CX4G
O0e/kre7TnIPhOH+sPii8pcTaO+aP+DOGDzfTN+0iT3BfRAGE2PXkZiF41gt
7M4PZoT3DQqWH5Yd514IQ6rNMyPHdceR160pWBHiHWv+b1iZy/0QhoXKiO3W
7rl40T0rnBgY6sdG2gJ+zeGeCEE2XL/V70gOAnqqFiRLCFvuNjWtNcrhvghh
9SbFHz212bjRoynAInTt2H7j4+3Z3BshnNvpbC4ez4K23NuEsP7r+NHq+Czu
jxCepOR2yA2yoD0OmhG6c5Jj/tot5h4JwSCt7pMgyTFo23UtCK3JZhcL1Jnc
JxGe33HzStfJhCb767eesOxxm44dMrhXQig3MlnxTJyOOzekB6etCPZ5V2N8
1GncLyG0D9V1SPTSsFlbIEuAzEq32DOVeyaEuXyRT1hZChTqSTtdR4JpnLLF
cOoo900ILTPrrCQ2R6GpFj3jRHgz8HJgIvMI904Iqxr9S+eGRUjUFnwTbD3y
Kl5ZiLh/QkgIVU4NJCXj55tjES0ehHmFWWryQBL3UAhvVdPh/65Jgra8zpcg
j/Ns25OWyH0Ugm5kYZxsLAHa3+9egv++O/I62wTupRCu63t4lp+KhzCZK/aH
EO46pLx7//fD3E8h/F2maN32bRzEvaJFLyIIG+UZspCkWO6pEB62iLo/d4rB
415NQw7Bbces76sV0dxXIfS1hoXHTB+CV9+tkeUiQm2y9ZIGVST3VoR4n3/3
Wfv5CHT0xdrL0wnqgngXaepB7q8QLrWpDDcFhWOdtsGMsGFcX3nFJYx7LISa
gC7fOZsDKOpXLVZJCMHfuMxbWIRyn4VwxWbpzfdMQjDbHx61q4QwtSdGNaO3
n3stwvc3uf5m57JgBGsbJglpoWV2h3QDud8izJfEje7u+nvRpwm3kvCb6b7o
l6Zfcs+F0PD+P52hG/bgo8Eg+esaYbxj1ZEKV1/uuxCKBy6cuxrljfODmgZg
wlPDwMSzpV9w74WQuLLUue6sBxYJp32zZoLDJnHVIwM37r8QIs3NXCZPuyJ6
yO/Hy0qCyxH9/PoPnLkHQzD/iaVLFcC9oXkHBxXBeLfeoZNGW7gPQ2CK1gy3
cltsu33pQp+aEOia2HZPasm9GCHeKtmZBx6roMkO+g8Szy/p6PwPsFRNPg==

         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 
          NCache[
           Rational[128, 255], 0.5019607843137255]]], 
        LineBox[CompressedData["
1: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
B30aiK+PGhn9D7EaByA=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 0]], 
        LineBox[CompressedData["
1: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
4KoObu8iWF9bsGJifRn+B45cCec=
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[128, 255], 0.5019607843137255]]], 
        LineBox[CompressedData["
1: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
K4AuO+hVQRh1Mnl8Kzof/wPrEAQD
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[16, 51], 0.3137254901960784], 
          NCache[
           Rational[67, 85], 0.788235294117647]]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[4, 5], 0.8], 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 
          NCache[
           Rational[4, 5], 0.8], 1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[43, 255], 0.16862745098039217`], 0, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 
          NCache[
           Rational[128, 255], 0.5019607843137255]]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[128, 255], 0.5019607843137255]]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[16, 51], 0.3137254901960784], 
          NCache[
           Rational[67, 85], 0.788235294117647]]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[4, 5], 0.8], 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 
          NCache[
           Rational[4, 5], 0.8], 1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[43, 255], 0.16862745098039217`], 0, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 
          NCache[
           Rational[128, 255], 0.5019607843137255]]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[128, 255], 
           0.5019607843137255]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[16, 51], 0.3137254901960784], 
          NCache[
           Rational[67, 85], 0.788235294117647]]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[4, 5], 0.8], 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[0, 
          NCache[
           Rational[4, 5], 0.8], 1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[43, 255], 0.16862745098039217`], 0, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 
          NCache[
           Rational[128, 255], 0.5019607843137255]]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[1, 
          NCache[
           Rational[128, 255], 0.5019607843137255], 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         Thickness[0.01], 
         RGBColor[
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[8, 51], 0.1568627450980392], 
          NCache[
           Rational[128, 255], 
           0.5019607843137255]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     1, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.3895895895895899, 0}, DisplayFunction :> Identity, 
     Epilog -> {
       Directive[{
         Thickness[Large], 
         GrayLevel[0.5], 
         Dashing[{Small, Small}]}], {
        LineBox[{{0.45, 0}, {0.45, 1}}], 
        LineBox[{{0.5, 0}, {0.5, 1}}], 
        LineBox[{{0.55, 0}, {0.55, 1}}], 
        LineBox[{{0.6000000000000001, 0}, {0.6000000000000001, 1}}], 
        LineBox[{{0.65, 0}, {0.65, 1}}], 
        LineBox[{{0.7000000000000001, 0}, {0.7000000000000001, 1}}], 
        LineBox[{{0.75, 0}, {0.75, 1}}], 
        LineBox[{{0.8, 0}, {0.8, 1}}], 
        LineBox[{{0.8500000000000001, 0}, {0.8500000000000001, 1}}], 
        LineBox[{{0.9, 0}, {0.9, 1}}]}}, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Extinction\"", TraditionalForm], None}, {
        FormBox["\"Wavelength (\[Mu]m)\"", TraditionalForm], None}}, 
     FrameStyle -> {{
        Thickness[Large], 
        Thickness[Large]}, {
        Thickness[Large], 
        Thickness[Large]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> {{
        Thickness[Large], 
        Thickness[Large]}, {
        Thickness[Large], 
        Thickness[Large]}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 350, LabelStyle -> {
       GrayLevel[0], 
       Directive[
        GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 16]}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3895895895895899, 0.8996996996996997}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"1\"", "\"2\"", "\"3\"", "\"4\"", "\"5\"", "\"6\"", "\"7\"", "\"8\"", 
       "\"9\"", "\"10\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[16, 51], 0.3137254901960784], 
                    NCache[
                    Rational[67, 85], 0.788235294117647]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[16, 51], 0.3137254901960784], 
                    NCache[
                    Rational[67, 85], 0.788235294117647]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[4, 5], 0.8], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[4, 5], 0.8], 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 5], 0.8], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 5], 0.8], 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[
                    NCache[
                    Rational[43, 255], 0.16862745098039217`], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[
                    NCache[
                    Rational[43, 255], 0.16862745098039217`], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[128, 255], 0.5019607843137255], 
                    NCache[
                    Rational[128, 255], 0.5019607843137255]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[128, 255], 0.5019607843137255], 
                    NCache[
                    Rational[128, 255], 0.5019607843137255]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[128, 255], 0.5019607843137255], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[1, 
                    NCache[
                    Rational[128, 255], 0.5019607843137255], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[
                    NCache[
                    Rational[8, 51], 0.1568627450980392], 
                    NCache[
                    Rational[8, 51], 0.1568627450980392], 
                    NCache[
                    Rational[128, 255], 0.5019607843137255]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[
                    NCache[
                    Rational[8, 51], 0.1568627450980392], 
                    NCache[
                    Rational[8, 51], 0.1568627450980392], 
                    NCache[
                    Rational[128, 255], 0.5019607843137255]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], 
          Directive[
           GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 16], 
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[16, 51], 
                    Rational[67, 85]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.20915032679738563`, 
                    0.5254901960784314], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["16", "51"], ",", 
                    FractionBox["67", "85"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[16, 51], 
                    Rational[67, 85]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[16, 51], 
                    Rational[67, 85]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[4, 5], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.5333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["4", "5"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[4, 5], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[4, 5], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[4, 5], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5333333333333333, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["4", "5"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[4, 5], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[4, 5], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[43, 255], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.11241830065359477`, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["43", "255"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[43, 255], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[43, 255], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[128, 255], 
                    Rational[128, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33464052287581697`, 
                    0.33464052287581697`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["128", "255"], ",", 
                    FractionBox["128", "255"]}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[128, 255], 
                    Rational[128, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[128, 255], 
                    Rational[128, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[8, 51], 
                    Rational[8, 51], 
                    Rational[128, 255]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10457516339869281`, 0.10457516339869281`, 
                    0.33464052287581697`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["8", "51"], ",", 
                    FractionBox["8", "51"], ",", 
                    FractionBox["128", "255"]}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[8, 51], 
                    Rational[8, 51], 
                    Rational[128, 255]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[8, 51], 
                    Rational[8, 51], 
                    Rational[128, 255]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}],
            ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "1"}], "}"}]}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.831953146898202*^9, 3.8319531840703783`*^9}, 
   3.831964264697302*^9, {3.831964304064047*^9, 3.831964324944903*^9}, {
   3.8319643738663*^9, 3.831964476030182*^9}, {3.831964543792308*^9, 
   3.831964575749918*^9}, {3.831964625105197*^9, 3.831964666610835*^9}, {
   3.831964735079328*^9, 3.831964748958436*^9}, 3.831965171798039*^9, 
   3.8319734861602373`*^9, 3.8322329448510923`*^9, {3.832501155362428*^9, 
   3.832501162187724*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"8d2469d2-cd4c-43c6-b865-e9bde6312310"],

Cell[BoxData["\<\"Z:\\\\group\\\\Yibin \
Jiang\\\\Projects\\\\Nanobot2\\\\Nanobot_Experiment\\\\test_Algorithm\\\\MAP_\
elite\\\\Toy2\\\\MAP_elite_mathematica\\\\exp_400_steps_gold_sphere_mix\\\\UV-\
Vis_example.svg\"\>"], "Output",
 CellChangeTimes->{{3.831953146898202*^9, 3.8319531840703783`*^9}, 
   3.831964264697302*^9, {3.831964304064047*^9, 3.831964324944903*^9}, {
   3.8319643738663*^9, 3.831964476030182*^9}, {3.831964543792308*^9, 
   3.831964575749918*^9}, {3.831964625105197*^9, 3.831964666610835*^9}, {
   3.831964735079328*^9, 3.831964748958436*^9}, 3.831965171798039*^9, 
   3.8319734861602373`*^9, 3.8322329448510923`*^9, {3.832501155362428*^9, 
   3.832501163563957*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"bf25d751-9554-4886-aaa1-66c6f7a377d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot the whole phase space according to the shape and the mixture rate\
\>", "Section",
 CellChangeTimes->{{3.814276439419458*^9, 
  3.814276468676649*^9}},ExpressionUUID->"e1c5df26-8349-43d5-806b-\
c3ad12c8c57d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spectrumAll", " ", "=", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Qtemp", " ", "=", " ", 
       RowBox[{"Qset", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "j", ",", "k", ",", "h", ",", "All"}], 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"spectrum", " ", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "mixturerate"}], ")"}], "Qtemp"}], "+", 
          RowBox[{"mixturerate", " ", 
           RowBox[{"Qset", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "All"}], 
            "\[RightDoubleBracket]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"mixturerate", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<SpectrumAll\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], ",",
     "spectrumAll"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.814272495886149*^9, 3.8142725263980007`*^9}, {
   3.814272693945416*^9, 3.8142727152896757`*^9}, {3.814272817276226*^9, 
   3.814272822348844*^9}, {3.8142728710893517`*^9, 3.8142729691996717`*^9}, {
   3.814273363034169*^9, 3.8142733937565804`*^9}, {3.814273760554997*^9, 
   3.81427376071207*^9}, {3.8142743382213306`*^9, 3.814274418567541*^9}, {
   3.814274463728181*^9, 3.814274464062448*^9}, {3.8142746024660473`*^9, 
   3.814274604129065*^9}, 3.814275325973844*^9, {3.814275385349567*^9, 
   3.814275435000482*^9}, {3.814275520737762*^9, 3.81427554268934*^9}, {
   3.814275598418792*^9, 3.814275599794183*^9}, {3.814275781837345*^9, 
   3.814275788282901*^9}, {3.8142761494718227`*^9, 3.814276149705325*^9}, {
   3.82047722103498*^9, 3.8204772720490847`*^9}, {3.820477309154286*^9, 
   3.820477314794175*^9}, {3.820477380732497*^9, 3.820477391712016*^9}, 
   3.8204774610114*^9, 3.831953410445077*^9, {3.831959386438092*^9, 
   3.8319593970370607`*^9}, {3.831959433900729*^9, 3.831959434868161*^9}, {
   3.831961126242674*^9, 3.831961146086174*^9}, {3.8322325529413786`*^9, 
   3.8322325551047497`*^9}, {3.8376973308720775`*^9, 
   3.837697331798558*^9}},ExpressionUUID->"a60966a2-5010-45e4-a8d5-\
fde788d4df7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"spectrumAll", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<SpectrumAll\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8319614558670807`*^9, 3.831961465915476*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"982d321d-0c5f-42f2-8675-93c9359d88bc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Grid", " ", "search", " ", "for", " ", "the", " ", "upper", " ", 
   "boundaries"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8376973501559696`*^9, 
  3.837697359351673*^9}},ExpressionUUID->"9e65e77c-4562-4969-a9b7-\
f72183c6ff08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultsAll", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"spectrum", " ", "=", " ", 
         RowBox[{"spectrumAll", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j", ",", "k", ",", "h", ",", "mixturerate"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fromSpetrumtoY", "[", "spectrum", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"mixturerate", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<resultsAll-1-\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], ",",
     "resultsAll"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8142761921264257`*^9, 3.814276306544425*^9}, {
   3.8142834501013813`*^9, 3.814283456133451*^9}, {3.8204775006804943`*^9, 
   3.820477510799021*^9}, {3.8319612226578503`*^9, 3.8319612342192993`*^9}, 
   3.831962677762529*^9, {3.831963932329534*^9, 3.831963933135212*^9}, {
   3.831973383193789*^9, 3.831973387345585*^9}, 3.8322325627517796`*^9, {
   3.8376973333266635`*^9, 
   3.837697335278539*^9}},ExpressionUUID->"5e3502fb-3955-4bf8-9e64-\
8a16d6f223c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultsAll", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"spectrum", " ", "=", " ", 
         RowBox[{"spectrumAll", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j", ",", "k", ",", "h", ",", "mixturerate"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fromSpetrumtoY", "[", "spectrum", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"mixturerate", ",", "11", ",", "21"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
        "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<resultsAll-2-\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], ",",
     "resultsAll"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.831961229791065*^9, 3.83196124028636*^9}, {
   3.831963935584372*^9, 3.8319639364492073`*^9}, {3.831973391433647*^9, 
   3.8319733916011667`*^9}, 3.832232584929905*^9, {3.837697337502258*^9, 
   3.8376973462382402`*^9}},ExpressionUUID->"b2778bf2-8474-427e-8c86-\
b106cb54fc0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultsAll1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<resultsAll-1-\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], 
    "]"}]}], ";", 
  RowBox[{"resultsAll2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<resultsAll-2-\>\"", "<>", 
     RowBox[{"ToString", "[", "randomseed", "]"}], "<>", "\"\<.mx\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultsAll", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"resultsAll1", ",", "resultsAll2", ",", "5"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8144418196327972`*^9, 3.814441849069723*^9}, 
   3.814445974787368*^9, {3.83197207762683*^9, 3.831972111585661*^9}, {
   3.831972154434114*^9, 3.831972156447249*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0a667c9c-7e45-4900-a6d6-3c7d5b33b97c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxfitness", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"classAndfitness", "=", " ", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"resultsAll", "\[LeftDoubleBracket]", 
               RowBox[{
               "i", ",", "j", ",", "k", ",", "h", ",", "mixturerate"}], 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "2"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"resultsAll", "\[LeftDoubleBracket]", 
               RowBox[{
               "i", ",", "j", ",", "k", ",", "h", ",", "mixturerate"}], 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
              RowBox[{"4", ",", "2"}], "\[RightDoubleBracket]"}], "\[Equal]", 
             "classindex"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultsAll", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j", ",", "k", ",", "h", ",", "mixturerate"}], 
             "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"-", "100"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Dimensions", "@", "randomshapes"}], ")"}], 
            "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "4"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"mixturerate", ",", "1", ",", "21"}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "classAndfitness", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"classindex", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.814447513683413*^9, 3.814447700249372*^9}, {
  3.814447746348991*^9, 3.814447748452736*^9}, {3.814448047058346*^9, 
  3.814448049735229*^9}, {3.8144481132192993`*^9, 3.814448147593981*^9}, {
  3.8144482342131453`*^9, 3.814448235257516*^9}, {3.814448306521744*^9, 
  3.8144483831047153`*^9}, {3.814448417503923*^9, 3.814448478732938*^9}, {
  3.820477703227521*^9, 3.8204777341223507`*^9}, {3.8204778504418573`*^9, 
  3.820477850705508*^9}, {3.8204834106097193`*^9, 3.820483414072179*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"ecbca38e-3d1d-40b6-b23d-cb1b5260d483"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"meanoversamples2", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Blue", "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "0.7"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8322331880710793`*^9, {3.8322337032898326`*^9, 3.832233716588669*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"9425394f-5712-48a8-8473-0f598c0cb2e7"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "deviationslLLP", "]"}], "\n", 
 RowBox[{
  RowBox[{"deviationslLLP", "[", 
   RowBox[{"ave_", ",", "dev_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fill", "=", 
       RowBox[{"Join", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "@", "ave"}], "]"}], "\[Rule]", 
             RowBox[{"List", "/@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "ave", "]"}], " ", "#"}], "+", 
                RowBox[{"Range", "[", 
                 RowBox[{"Length", "@", "ave"}], "]"}]}], ")"}]}]}], "]"}], 
           "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"apd", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"ave", "+", "dev"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"amd", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"ave", "-", "dev"}], ")"}]}]}], ",", "p1", ",", "p2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"p1", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Join", "@@", 
        RowBox[{"{", 
         RowBox[{"ave", ",", "apd", ",", "amd"}], "}"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", "fill"}], ",", "opts"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.832233238195991*^9, 3.832233238195991*^9}, 
   3.832235130998169*^9, {3.8322351632646527`*^9, 3.8322351636545305`*^9}, {
   3.832235200781928*^9, 3.8322352590104237`*^9}, {3.8322352927456074`*^9, 
   3.8322353406937513`*^9}, {3.832235380611148*^9, 3.832235389016835*^9}, {
   3.8322354205027056`*^9, 3.8322354298575335`*^9}, {3.832235666337171*^9, 
   3.832235703833723*^9}, {3.8322357637724447`*^9, 3.832235778792325*^9}, {
   3.832235826354662*^9, 3.8322359330909996`*^9}, {3.8322359726629753`*^9, 
   3.832236033531492*^9}, 3.832236121659545*^9, {3.8322361874634223`*^9, 
   3.8322362899521103`*^9}, {3.8322363330862875`*^9, 
   3.8322363893458223`*^9}, {3.8322366474490676`*^9, 3.832236650443905*^9}, {
   3.832236814956023*^9, 3.8322368488925877`*^9}, {3.8322368800161705`*^9, 
   3.8322368988370943`*^9}, {3.832251330572587*^9, 3.8322513372293167`*^9}, 
   3.832505503065707*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"2f456715-4be5-444e-a7f2-89129f8d30da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanoversamples1MEAN", "}"}], ",", 
     RowBox[{"{", "meanoversamples1STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      FractionBox["1", "GoldenRatio"]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<MAP-Elites\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanoversamples2MEAN", "}"}], ",", 
     RowBox[{"{", "meanoversamples2STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.7"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", " ", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "maxfitness", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "meanoversamples2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Upper Boundary\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", "0.7"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Step\>\"", ",", "\"\<Mean Fitness\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_fitness_200_steps_random.png\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_fitness_200_steps_random.svg\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8322345681751394`*^9, 3.832234570173665*^9}, 
   3.8322352606367626`*^9, {3.8322363988365583`*^9, 3.8322364325800185`*^9}, {
   3.8322364724955044`*^9, 3.832236507048053*^9}, {3.832236545416254*^9, 
   3.832236551143731*^9}, {3.832236590004056*^9, 3.8322366121911364`*^9}, {
   3.8322370523892765`*^9, 3.832237052648735*^9}, {3.832237149551025*^9, 
   3.8322371786431117`*^9}, 3.832237238890516*^9, 3.8322379818100576`*^9, {
   3.832251340978882*^9, 3.8322513663693495`*^9}, {3.8325013516383295`*^9, 
   3.8325013696062374`*^9}, {3.8325024559420013`*^9, 3.832502458303406*^9}, {
   3.8325051490842404`*^9, 3.832505256177044*^9}, {3.832505309059117*^9, 
   3.832505349707225*^9}, {3.8330236184981956`*^9, 3.8330236215674877`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"312e1c2e-972b-4738-b1fe-497bb62fbba8"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, GraphicsComplexBox[CompressedData["
1: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
fP9EfERVrbohDJn4CHdzaZbiaewfDB2n2z06hO+rFkFM3cWnvchMGhMfsZ5W
cmMY5rk05tE4k8Z8GgtoTHwk2n+l3jfcXxIfscrYbXkzF/uHQMKhx4tqkImP
DMuwG3cS95nER7YWhXfKnsf+IbBRcblKCdaJj5QZHZgOWCc+EmZwuc0YmfjI
EP7HRwQa1tsuYH8aEx95qH5x0jVk4iOWRnFuAfi+L5PGfBoLaEx8ZAgTHylN
TtkTjUx8RK/hLVQjEx9ZFvxrRf0V7B8K2W7da47j+0TiI2qqkT4ThftUGhMf
OZjIPiWL+1TiI7PORCwORyY+Mm521/l5+L6Q+Ihf8L1ly+9i/zCov7M16kUR
9qcx8ZHay42ZmcjER5YZn/l5Bpn4iFdX3CcVZOIjQ5hJY+IjjHb2JH98X8ml
MY/GxEci202HFz7G/uHwstJ2521kAY2Jj1w/4Z9TgMykMfGRS2GnJFeXY38a
82icSWPiI/WfO7+kIxMfOZHCCvIRvi+NgNcDNUXvkYmPGG/UK3OtemMRPHsk
v6fmu9BHstTzqpU+9Am5rZXXVlz5U8glg/Xsf8P/6tdp8ST1RYnNjueDLLr/
Et1/ie6/RPdf+H0luv8S3X+J7r9E91/4fNH9l+j+S3T/Jbr/ovYt/+n7L7qP
iO6/RPdfovsvykdE91+i+y/R/RfmRfdfovsv0f2X6P6L8hHR/Zfo/us/ef9F
9xHR/Zfo/kt0/yW6//pfFt1/ie6/RPdfovsv0f3XYH/R/Zfo/kt0//XfuP/6
Hw93m5M=
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1VVYEAYQAGDsFhNsxcJWbOzuQGxFRMBWQrFbBAU7Njs23cyFudBNF7r5
qQtd6EIXxqbrDuvn4b/77t7u4e5CYhMjE7IHBARkY70wUhFFVi8HOclFbvKQ
l3zkpwAFKURhAilCUYpRnBKUJIhgSlGaMpSlHOWpQEUqEUJlqlCValQnlBrU
pBa1qUNd6lGfBoTRkEY0pglNaUZzwmlBS1rRmja0pR3t6UBHOtGZLnSlG93p
QU960Zs+9CWCfkTSnwEMZBCDGcJQhjGcKEYQzUhiGEUsccQzmjGMZRzjmcBE
JjGZBBJJIpkpTCWFaUxnBjOZxWzmMJd5zGcBC1nEYlJZQhrpLGUZGWSynBWs
ZBWrWcNa1rGeDTzBk2xkE5vZwla2sZ0d7GQXT/E0u9nDMzzLXvaxnwMc5BDP
8Twv8CKHOcJRjnGcE7zEy7zCq5zkFK/xOqc5wxu8yVu8zVnO8Q7vcj5rPruy
ljWsZhUrWcFyMslgGUtJJ40lpLKYRSxkAfOZx1zmMJtZzGQG05lGClOZQjJJ
JJLAZCYxkQmMZxxjGcNo4okjllHEZO080YwgiuEMYyhDGMwgBjKA/kTSjwj6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS0IpznNaEoTGtOIhoTRgPrU
oy51qE0talKDUKpTjapUoTIhVKIiFShPOcpShtKUIpggSlKC4hSjKEUIpDCF
KEgB8pOPvOQhN7nISQ6yk42sw/tIesgD7vM///Ev//A3f/Enf/A7v/Erv/Az
P/EjP3CPu3zPd9zhNre4ybd8w9d8xQ2u8yVf8DmfcY2rfMonfMxHXOEyH/IB
7/Mel7jIBWI8kMfWjaye
            "]]]}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[{{202, 605, 608, 607, 1}}]]}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xl8DwQYB+DfNsfcxpxzbe7Nfc19m9mcY3O2SkQpShJSchZFIfexYW7D
3Pd9l4oOdJ8qlUpRjsojfzzv5/37/X7e943sPyxpaHAgEAjiTWU2qcH3+znM
ZR7zWcBCFrGYJSwljXSWsZwVZLCSVaxmDWtZx3o2kMlGNrGZLLawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac7wFm9zlnd4l/c4x3ne5wM+5CMu
cJFLfMwnfMpnfM4XfMlXfM03fMt3XOZ7fuBHrvATP/MLV/mV3/ida/zBn1zn
Bn/xNze5xW3u8A//8t+98GQWRDAhZCM7OchJKLnITR7yko/8FKAgYRSiMOEU
oSjFKE4JShJBKUpThrKUI5IoylOBilSiMlWoSjQxVKM6NahJLWpTh7rUoz4N
iKUhjWhME5rSjOa0oCWtaE0b2tKOONoTTwcSSKQjnehMF7rSjSS604NkUuhJ
L3rTh76cNvJTnOQExznGUY5wmEMc5AD72cde9rCbXexkB9vZxla2kMVmNrGR
TDawnnWsZQ2rWcVKMljBcpaRThpLWcJiFrGQBcxnHnOZc2//mc0sZvIGrzOD
6bzGq0xjKq/wMlOYzCQmMoHxvMQ4XuQFxvI8YxjNKJ5jJM8ygmcYztM8xTCG
8iRPMITHeYzBDOJRBjKAR+jPwzzEg6TyAP3oSx9604uepJBMD7qTRDe60oXO
dKIjiSTQgXjaE0c72tKG1rSiJS1oTjOa0oTGNKIhsTSgPvWoSx1qU4ua1KA6
1YghmqpUoTKVqEgFyhNFJOUoSxlKU4oISlKC4hSjKEUIpzCFCKMgBchPPvKS
h9zkIpSc5CA72QgJ/H+KAv2C7/+Uu44GuWo=
            "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwl0wdTyAEAxuG/kczKLFLKzN6yKqPsGcqWyFbZMkP2HhkhMrKpkL0i8a16
nLv3+QLv3S8+Oy89t0EQBH9Z2jAILGhEY0JoQihNaUZzWtCSVoQRTgStaUNb
2tGeDkQSRUc6EU1nYoilC3HE05VudKcHPelFAr3pQ1/60Z8BDGQQgxnCUIYx
nBEkMpJRjGYMY0kimRTGMZ4JTCSVNCYxmSlMZRrTmcFMZjGbOcwlnXnMZwEZ
ZLKQRSxmyb+vWcZyVpDFSrJZxWpyWMNa1rGeDWxkE5vJJY98trCVbWxnBzvZ
xW4K2MNe9rGfAxykkEMc5ghFHOUYxznBSU5xmjOc5RznucBFLnGZKxRzlWtc
5wYl3OQWtynlDncp4x73ecBDynnEY57wlGc85wUveUUFlVTxmje8pZp3vOcD
H/nEZ77wlW985wc1/OQXtfymjj/B/0bqAedzUic=
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3IltmRkYZ2Xtma9mlUFZKZKdkbyEju59F2TIzsyKRmX31
4Trn/vqc88TkFqRvDQmC4DJZoUGQwxVdTgVXucZ1bnCTW9zmDpXc5R73ecBD
HlHFY57wlGc85wXVvOQVr3nDW2p4x3tq+UAdH/lEPZ/5wle+8Z0fNPCTX/zm
D3/5R2BkCKGE0YSmhNOM5rSgJa1oTRvaEkE72tOBjnSiM5F0oSvd6E4UPehJ
L3oTTQx96Es/+hPLAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmEsckJjOFqUxj
OjOYSTwJJJJEMrOYzRzmMo/5LCCFVBaSRjqLWMwSMshkKctYzgpWksUqsslh
NbmsYS15rGM9G9jIJjazhXwaz1lAIdsoYjs72MkudrOHvexjPwc4yCEOc4Ri
jnKM45RwgpOc4jSlnOEs5zjPBS5yiTL+A3mPXSY=
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhnP48IP4M/Ym+zIDBnZlJ0tkZkV
GSHb6eJcvNdv7MLFWYtCgiAoYUFoECwRS1nGclawklWsZg1rWcd6NrCRTeSy
mS1sZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc
5wIXKaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJK
XvGaN7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX904z0IIJYxw6hFB
fRrQkEY0pglNaUYkzWlBS1rRmja0pR3tiaID0XSkE53pQgyxdKUb3elBHD3p
RW/60Jd+9GcAAxlEPIMZwlASGMZwRpDISEYxmjGMZRzjmUASyaSQShoTmcRk
pjCVaUwnnQxmkEkWM5nFbLLJYQ5zmcd8/gO1TWld
           "]]}}}], {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1:eJztmnlYzXn7x7O12bJ7kjZFGpG0r3faVGjfldM57bJlZM8ZDJrIUIphKluJ
qBnGlJiOSUQaS9RU5JAlFKGy5/d5fnPep6vv9fz+e37/Hf+4Xm5vb+K6fF7n
vrX4i70j+8rJyZX2l5P79/f/fGu3+2nvv7/V20l+gE6dUCvRGtYoYUVSeLbk
Yu3NuxJWoVFzJvzyR+o9CY8kl8t/V74oBI8ly41xZuK3YDU6ul9N50wXWJN+
vWSp8XJGk4S16fZahw0LrMA6pPq0JSY8DjyRrgQ6vmzdDdYjeb7PQg3L+xLW
p4SDvqZ9i8FTqHuxpp7CALGEp9KHX3Nm1RqADelWUfG+px7g6VQjKvr8MQJs
RG5/+UdH+YNn0KdZocVDYsDGlLf4hyUm34FN6MH6vFX/2gY2pbUVI/ol7wCb
UbpKatKKnWBzii7xUroqnVvQ3ea+SzuzwJak6BE0t+4XsBVFFQkc1YvB1hR0
y6/arRxsQ8d4Uyd4XAXbUlnttDP3LoPtqEHFIOFmI5jo2o/3Ln9tkrCQaLzx
Et0rYsztKbQkw/L7ZsztaeXvpi+Pg+Vmkn6J6JVFO+Yz6U7+ye1nP2PuQC81
LR+9HvxAMneg7+OrFi5Qk7CcIxmZnpmep4m5I63ru1t+oRbmTuSpck77h28w
d6K7dmVO1SaYO9NNL9eV4XaYO1Ou+p/OEfaYu9BOl1uhmx0wdyHegNjHF5wx
n9WbhbOoz5bFJwRumLtS6ufnn4p8MXell/l3PYKDMHejzaHBXj/wMXejKfnL
zn6Jwdydqhb1uaGWgLk7Ldqtf8VxGeaze7OQw3Jz6LuldZO7YzGfQ6vEL4Vd
izCfS8XDpuYlrcN8LpXpyYeYb8Dcgz7qVj832oq5B3XrHzU6kYK5J637+5c7
o3ZImDgs9KTE4HF35Q5IWORJXx+d61d3CHkvUlxXUH7oOPJeNOLs/I+DqpD3
IlvfrcfF15H3Ii2RaabNLeS9SWHVJ6OoWuS9adjDjj8D65D3pi0ungH3m5H3
JsuO4au3PEbeh+KbDCrVniLvQ8btApHtc+R9yPV2V74XWORD0zrldtS8Qt6X
VrZdvTO1HXlfEi1exTsHFvrSg0rNeby3yPvSwI8vzz7vRt6PDvupb/JTfCjJ
+5Gve5FZ5WAJC/2oQhiTNk9FwiI/is6O3pUwUsJy/hR6NXVo2xjk/an0j/Rx
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
XcydyCVgoLBrGuZOZHEqOTZlNubOZLtxYOZ97K+Yj1hlV+3JCcHchQqd72n2
nYe5Cy0c9m7CrnDMZ/Vm5iNmem/9CqRzV3q84WFdUhrmrqS3oyJbfw/mbqSx
YUy122HM3Sjy4iafsmOYu1O8/IIPpgWYu9Ptt6b7toGZj/RiIYeZj0zRKdKt
wa/HfKRhb8nuTVKfnku2Kz5sXFyL+VzK+i7o2fW7mHtQ9xBXvxsPMfcgY8H0
oXNfYO5JmVmOrhavJEwcZj5SuPDAoTzsu5iPHDNs/1rSjbwXZffpvEIKPfuR
WKW0Py5b9+xH5MNL7ctn9uxHstTNRug59OxHDJ4Oz1rk1LMfCWtTzb/j1LMf
yXF8Y3/Zt2c/4v2sy+8H/579yJFLhZtDQnr2I/OvVi3TDunZj+Qkrv/JJKRn
P3LgfUCgAa9nPzKidEuJFa9nPzJry/6cZF7PfmSqh2qxekzPfqT9ufW1pMSe
/cgTuw/Xy/F5AvOR4a79tm2U7qP8KDxEp/QI9lHMR+hnS7eWXcj7k9iq4e72
vcj704vWj6/7Yt/EfER1YEBbQCHy/vTgg4V6BZj5SOPS3xMEF5APoHr15At2
fyIfQEcXVld4VCIfQBFuEQ0dNcgH0vxL1a1KN5EPpOlVytYbMGc+EmyYu6/4
NvKBtObZgDW+2F8xH1kwPrs2D3PiMPORoQMdPF5i/yXiMPORy78rJs7IRp5x
4O7mXDDzkUHTfhD0PYg8h5mPqD8ecNYFXw/mI/vaS4uWFSHPYeYj7rdHbw86
jfy83kwcZj5iPD6ufwKY+cjTTUvjFp9BPpS6xxh8ipF+/TnMfKRlvHrFYjDz
EeVPi6qO/IV8WG9mPjLDsy6/C/tD5iPr1dNdmvD3w3yk4deKQXnS/eJ8yuHX
6i8CE4eFHGY+siHw+P5kaZ5HBh90sr69I2HmI7cdW9VugZmPPDnUPOkzmPmI
rqOyRgf+/piPjK4ffK4N/x6Yj7SJ8zuONqCPw8xHcnXNzGaBmY/0YuYjCua3
gtzBzEfkVWzkR4F5HGY+IjejRmtVPfrDKU3nU/TW++gPp9s70w52g5mPVNWO
rwt9gn5+b2Y+4vvTJSX9NvTzyXjk+i5t7EuZjyjKPVy9GvtV5iMFxzZ3Vb5B
P4eZj6j2iTXpADMfWSFeP95FGT4pIMeJkZYbwMxH1Fz2lZ4bCD/lMPMR+XRV
iwtg5iMj3uYnjR+Cz6c5zHwkLLW0QBvMfMRCqOttMxz9EdSql2v6DJ+vMR+5
6xy14jOY+Yhe3ZB5Zfj8isdhIYdzOCziMPORo28dFmvh8y7mI72Y+chqlfjH
hoboj6TXoffVB+DzPOYj4tyQxAjsa4UczuEw85FzcR61Jvg8jfmIU+TMMwLp
fjaKSkfb2DU6o5/DzEcy4749W+mKfg4zH3lnOy5+mRv6oyhPOy7nApj5SNbG
xgNDsW9lPhI4+4bXAOl+NppGPu6/dhZYk8PMR85HDxDX4fM+HoeFHGY+8qFe
ozjLF/3RpG3zPKkYLOYw85E3/UfFLQ9Afwz9a3v41/0h6I+hvDv9vluB/S6P
w8xH3EfPP9MYhn4OizjMfOTI5l//bI1Af2xv1uzhpv01r2pufpT6SPOjiPSw
pe+lLLJxzR479Ov/OefyP33tdjfS6qsck2slLLv/kt1/ye6/ZPdf+P9adv8l
u/+S3X/J7r/w68vuv2T3X7L7L9n9V4/f/Lfvv7g+Irv/kt1/ye6/MJfdf8nu
v2T3X7L7L+Rl91+y+y/Z/Zfs/kt2//VP/3///ovrI7L7L9n9l+z+S3b/9b8s
u/+S3X/J7r9k91+y+y9Jv+z+S3b/Jbv/+v+4//ofMguwvw==
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1VVYEAYQAGDsFhNsxcJWbOzuQGxFRMBWQrFbBAU7Njs23cyFudBNF7r5
qQtd6EIXxqbrDuvn4b/77t7u4e5CYhMjE7IHBARkY70wUhFFVi8HOclFbvKQ
l3zkpwAFKURhAilCUYpRnBKUJIhgSlGaMpSlHOWpQEUqEUJlqlCValQnlBrU
pBa1qUNd6lGfBoTRkEY0pglNaUZzwmlBS1rRmja0pR3t6UBHOtGZLnSlG93p
QU960Zs+9CWCfkTSnwEMZBCDGcJQhjGcKEYQzUhiGEUsccQzmjGMZRzjmcBE
JjGZBBJJIpkpTCWFaUxnBjOZxWzmMJd5zGcBC1nEYlJZQhrpLGUZGWSynBWs
ZBWrWcNa1rGeDTzBk2xkE5vZwla2sZ0d7GQXT/E0u9nDMzzLXvaxnwMc5BDP
8Twv8CKHOcJRjnGcE7zEy7zCq5zkFK/xOqc5wxu8yVu8zVnO8Q7vcj5rPruy
ljWsZhUrWcFyMslgGUtJJ40lpLKYRSxkAfOZx1zmMJtZzGQG05lGClOZQjJJ
JJLAZCYxkQmMZxxjGcNo4okjllHEZO080YwgiuEMYyhDGMwgBjKA/kTSjwj6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS0IpznNaEoTGtOIhoTRgPrU
oy51qE0talKDUKpTjapUoTIhVKIiFShPOcpShtKUIpggSlKC4hSjKEUIpDCF
KEgB8pOPvOQhN7nISQ6yk42sw/tIesgD7vM///Ev//A3f/Enf/A7v/Erv/Az
P/EjP3CPu3zPd9zhNre4ybd8w9d8xQ2u8yVf8DmfcY2rfMonfMxHXOEyH/IB
7/Mel7jIBWI8kMfWjaye
            "]]]}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[{{202, 605, 608, 607, 1}}]]}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xl8DwQYB+DfNsfcxpxzbe7Nfc19m9mcY3O2SkQpShJSchZFIfexYW7D
3Pd9l4oOdJ8qlUpRjsojfzzv5/37/X7e943sPyxpaHAgEAjiTWU2qcH3+znM
ZR7zWcBCFrGYJSwljXSWsZwVZLCSVaxmDWtZx3o2kMlGNrGZLLawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac7wFm9zlnd4l/c4x3ne5wM+5CMu
cJFLfMwnfMpnfM4XfMlXfM03fMt3XOZ7fuBHrvATP/MLV/mV3/ida/zBn1zn
Bn/xNze5xW3u8A//8t+98GQWRDAhZCM7OchJKLnITR7yko/8FKAgYRSiMOEU
oSjFKE4JShJBKUpThrKUI5IoylOBilSiMlWoSjQxVKM6NahJLWpTh7rUoz4N
iKUhjWhME5rSjOa0oCWtaE0b2tKOONoTTwcSSKQjnehMF7rSjSS604NkUuhJ
L3rTh76cNvJTnOQExznGUY5wmEMc5AD72cde9rCbXexkB9vZxla2kMVmNrGR
TDawnnWsZQ2rWcVKMljBcpaRThpLWcJiFrGQBcxnHnOZc2//mc0sZvIGrzOD
6bzGq0xjKq/wMlOYzCQmMoHxvMQ4XuQFxvI8YxjNKJ5jJM8ygmcYztM8xTCG
8iRPMITHeYzBDOJRBjKAR+jPwzzEg6TyAP3oSx9604uepJBMD7qTRDe60oXO
dKIjiSTQgXjaE0c72tKG1rSiJS1oTjOa0oTGNKIhsTSgPvWoSx1qU4ua1KA6
1YghmqpUoTKVqEgFyhNFJOUoSxlKU4oISlKC4hSjKEUIpzCFCKMgBchPPvKS
h9zkIpSc5CA72QgJ/H+KAv2C7/+Uu44GuWo=
            "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwl0wdTyAEAxuG/kczKLFLKzN6yKqPsGcqWyFbZMkP2HhkhMrKpkL0i8a16
nLv3+QLv3S8+Oy89t0EQBH9Z2jAILGhEY0JoQihNaUZzWtCSVoQRTgStaUNb
2tGeDkQSRUc6EU1nYoilC3HE05VudKcHPelFAr3pQ1/60Z8BDGQQgxnCUIYx
nBEkMpJRjGYMY0kimRTGMZ4JTCSVNCYxmSlMZRrTmcFMZjGbOcwlnXnMZwEZ
ZLKQRSxmyb+vWcZyVpDFSrJZxWpyWMNa1rGeDWxkE5vJJY98trCVbWxnBzvZ
xW4K2MNe9rGfAxykkEMc5ghFHOUYxznBSU5xmjOc5RznucBFLnGZKxRzlWtc
5wYl3OQWtynlDncp4x73ecBDynnEY57wlGc85wUveUUFlVTxmje8pZp3vOcD
H/nEZ77wlW985wc1/OQXtfymjj/B/0bqAedzUic=
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3IltmRkYZ2Xtma9mlUFZKZKdkbyEju59F2TIzsyKRmX31
4Trn/vqc88TkFqRvDQmC4DJZoUGQwxVdTgVXucZ1bnCTW9zmDpXc5R73ecBD
HlHFY57wlGc85wXVvOQVr3nDW2p4x3tq+UAdH/lEPZ/5wle+8Z0fNPCTX/zm
D3/5R2BkCKGE0YSmhNOM5rSgJa1oTRvaEkE72tOBjnSiM5F0oSvd6E4UPehJ
L3oTTQx96Es/+hPLAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmEsckJjOFqUxj
OjOYSTwJJJJEMrOYzRzmMo/5LCCFVBaSRjqLWMwSMshkKctYzgpWksUqsslh
NbmsYS15rGM9G9jIJjazhXwaz1lAIdsoYjs72MkudrOHvexjPwc4yCEOc4Ri
jnKM45RwgpOc4jSlnOEs5zjPBS5yiTL+A3mPXSY=
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhnP48IP4M/Ym+zIDBnZlJ0tkZkV
GSHb6eJcvNdv7MLFWYtCgiAoYUFoECwRS1nGclawklWsZg1rWcd6NrCRTeSy
mS1sZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc
5wIXKaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJK
XvGaN7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX904z0IIJYxw6hFB
fRrQkEY0pglNaUYkzWlBS1rRmja0pR3tiaID0XSkE53pQgyxdKUb3elBHD3p
RW/60Jd+9GcAAxlEPIMZwlASGMZwRpDISEYxmjGMZRzjmUASyaSQShoTmcRk
pjCVaUwnnQxmkEkWM5nFbLLJYQ5zmcd8/gO1TWld
           "]]}}}], {{}, {}}}, {{}, {{}, {}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxdzTmKFgEUhdGLkaGBgYFIKyIiIk7tbHc5z1M7z2VrO0S6hLcGY4Naykvd
RSXmLkFFQf5TUBSnPi5v5/rntY1NSb7/fv98/z4/V5e/ftkxffux+u/HsOjN
eAveirfh7XgJ78K78R68F+/D+/EBfBAfwofxEXwUL+Nj+Dg+gU/iU/g0PoPP
4hW8iodFF845Os55Os4FOs5FOs4lOs5lOs4VOs5VOs41Os51Os4NOs5NOs4t
Os5tOs4dOs7dRQ+4cOPcY48LN84ae1y4ce6zx4Ub5wF7XLhxHrLHhRvnEXtc
uHEes8eFG+cJe1y4cZ6yx4Ub5xl7XLhxnrPHhRvnBXtcuHFesseFG+cVe1y4
cV6zx4UbZ1z0Eh7wiAtPuPGM84b7eMAjLjzhxjPOOvfxgEdceMKNZ5y33McD
HnHhCTeecd5xHw94xIUn3HjG2eA+HvCIC0+48Yzznvt4wCMuPOHGM84H7uMB
j7jwhBvPOB+5jwc84sITbjzjfOL+f/8CMmufYg==
         "]]}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"MAP-Elites\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Random\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Upper Boundary\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.99, 0.3}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.4},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"Step\"", TraditionalForm], 
     FormBox["\"Mean Fitness\"", TraditionalForm]},
   FrameStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->350,
   LabelStyle->{
     GrayLevel[0], 
     Directive[
      GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 201.}, {0.4, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, 
       GraphicsComplex[CompressedData["
1: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
fP9EfERVrbohDJn4CHdzaZbiaewfDB2n2z06hO+rFkFM3cWnvchMGhMfsZ5W
cmMY5rk05tE4k8Z8GgtoTHwk2n+l3jfcXxIfscrYbXkzF/uHQMKhx4tqkImP
DMuwG3cS95nER7YWhXfKnsf+IbBRcblKCdaJj5QZHZgOWCc+EmZwuc0YmfjI
EP7HRwQa1tsuYH8aEx95qH5x0jVk4iOWRnFuAfi+L5PGfBoLaEx8ZAgTHylN
TtkTjUx8RK/hLVQjEx9ZFvxrRf0V7B8K2W7da47j+0TiI2qqkT4ThftUGhMf
OZjIPiWL+1TiI7PORCwORyY+Mm521/l5+L6Q+Ihf8L1ly+9i/zCov7M16kUR
9qcx8ZHay42ZmcjER5YZn/l5Bpn4iFdX3CcVZOIjQ5hJY+IjjHb2JH98X8ml
MY/GxEci202HFz7G/uHwstJ2521kAY2Jj1w/4Z9TgMykMfGRS2GnJFeXY38a
82icSWPiI/WfO7+kIxMfOZHCCvIRvi+NgNcDNUXvkYmPGG/UK3OtemMRPHsk
v6fmu9BHstTzqpU+9Am5rZXXVlz5U8glg/Xsf8P/6tdp8ST1RYnNjueDLLr/
Et1/ie6/RPdf+H0luv8S3X+J7r9E91/4fNH9l+j+S3T/Jbr/ovYt/+n7L7qP
iO6/RPdfovsvykdE91+i+y/R/RfmRfdfovsv0f2X6P6L8hHR/Zfo/us/ef9F
9xHR/Zfo/kt0/yW6//pfFt1/ie6/RPdfovsv0f3XYH/R/Zfo/kt0//XfuP/6
Hw93m5M=
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwV1VVYEAYQAGDsFhNsxcJWbOzuQGxFRMBWQrFbBAU7Njs23cyFudBNF7r5
qQtd6EIXxqbrDuvn4b/77t7u4e5CYhMjE7IHBARkY70wUhFFVi8HOclFbvKQ
l3zkpwAFKURhAilCUYpRnBKUJIhgSlGaMpSlHOWpQEUqEUJlqlCValQnlBrU
pBa1qUNd6lGfBoTRkEY0pglNaUZzwmlBS1rRmja0pR3t6UBHOtGZLnSlG93p
QU960Zs+9CWCfkTSnwEMZBCDGcJQhjGcKEYQzUhiGEUsccQzmjGMZRzjmcBE
JjGZBBJJIpkpTCWFaUxnBjOZxWzmMJd5zGcBC1nEYlJZQhrpLGUZGWSynBWs
ZBWrWcNa1rGeDTzBk2xkE5vZwla2sZ0d7GQXT/E0u9nDMzzLXvaxnwMc5BDP
8Twv8CKHOcJRjnGcE7zEy7zCq5zkFK/xOqc5wxu8yVu8zVnO8Q7vcj5rPruy
ljWsZhUrWcFyMslgGUtJJ40lpLKYRSxkAfOZx1zmMJtZzGQG05lGClOZQjJJ
JJLAZCYxkQmMZxxjGcNo4okjllHEZO080YwgiuEMYyhDGMwgBjKA/kTSjwj6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS0IpznNaEoTGtOIhoTRgPrU
oy51qE0talKDUKpTjapUoTIhVKIiFShPOcpShtKUIpggSlKC4hSjKEUIpDCF
KEgB8pOPvOQhN7nISQ6yk42sw/tIesgD7vM///Ev//A3f/Enf/A7v/Erv/Az
P/EjP3CPu3zPd9zhNre4ybd8w9d8xQ2u8yVf8DmfcY2rfMonfMxHXOEyH/IB
7/Mel7jIBWI8kMfWjaye
              "]]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{202, 605, 608, 607, 1}}]}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1Xl8DwQYB+DfNsfcxpxzbe7Nfc19m9mcY3O2SkQpShJSchZFIfexYW7D
3Pd9l4oOdJ8qlUpRjsojfzzv5/37/X7e943sPyxpaHAgEAjiTWU2qcH3+znM
ZR7zWcBCFrGYJSwljXSWsZwVZLCSVaxmDWtZx3o2kMlGNrGZLLawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac7wFm9zlnd4l/c4x3ne5wM+5CMu
cJFLfMwnfMpnfM4XfMlXfM03fMt3XOZ7fuBHrvATP/MLV/mV3/ida/zBn1zn
Bn/xNze5xW3u8A//8t+98GQWRDAhZCM7OchJKLnITR7yko/8FKAgYRSiMOEU
oSjFKE4JShJBKUpThrKUI5IoylOBilSiMlWoSjQxVKM6NahJLWpTh7rUoz4N
iKUhjWhME5rSjOa0oCWtaE0b2tKOONoTTwcSSKQjnehMF7rSjSS604NkUuhJ
L3rTh76cNvJTnOQExznGUY5wmEMc5AD72cde9rCbXexkB9vZxla2kMVmNrGR
TDawnnWsZQ2rWcVKMljBcpaRThpLWcJiFrGQBcxnHnOZc2//mc0sZvIGrzOD
6bzGq0xjKq/wMlOYzCQmMoHxvMQ4XuQFxvI8YxjNKJ5jJM8ygmcYztM8xTCG
8iRPMITHeYzBDOJRBjKAR+jPwzzEg6TyAP3oSx9604uepJBMD7qTRDe60oXO
dKIjiSTQgXjaE0c72tKG1rSiJS1oTjOa0oTGNKIhsTSgPvWoSx1qU4ua1KA6
1YghmqpUoTKVqEgFyhNFJOUoSxlKU4oISlKC4hSjKEUIpzCFCKMgBchPPvKS
h9zkIpSc5CA72QgJ/H+KAv2C7/+Uu44GuWo=
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 120]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           Line[CompressedData["
1:eJwl0wdTyAEAxuG/kczKLFLKzN6yKqPsGcqWyFbZMkP2HhkhMrKpkL0i8a16
nLv3+QLv3S8+Oy89t0EQBH9Z2jAILGhEY0JoQihNaUZzWtCSVoQRTgStaUNb
2tGeDkQSRUc6EU1nYoilC3HE05VudKcHPelFAr3pQ1/60Z8BDGQQgxnCUIYx
nBEkMpJRjGYMY0kimRTGMZ4JTCSVNCYxmSlMZRrTmcFMZjGbOcwlnXnMZwEZ
ZLKQRSxmyb+vWcZyVpDFSrJZxWpyWMNa1rGeDWxkE5vJJY98trCVbWxnBzvZ
xW4K2MNe9rGfAxykkEMc5ghFHOUYxznBSU5xmjOc5RznucBFLnGZKxRzlWtc
5wYl3OQWtynlDncp4x73ecBDynnEY57wlGc85wUveUUFlVTxmje8pZp3vOcD
H/nEZ77wlW985wc1/OQXtfymjj/B/0bqAedzUic=
            "]]}, {
           Style[{
             Line[CompressedData["
1:eJwV0mdXiAEAhuG3IltmRkYZ2Xtma9mlUFZKZKdkbyEju59F2TIzsyKRmX31
4Trn/vqc88TkFqRvDQmC4DJZoUGQwxVdTgVXucZ1bnCTW9zmDpXc5R73ecBD
HlHFY57wlGc85wXVvOQVr3nDW2p4x3tq+UAdH/lEPZ/5wle+8Z0fNPCTX/zm
D3/5R2BkCKGE0YSmhNOM5rSgJa1oTRvaEkE72tOBjnSiM5F0oSvd6E4UPehJ
L3oTTQx96Es/+hPLAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmEsckJjOFqUxj
OjOYSTwJJJJEMrOYzRzmMo/5LCCFVBaSRjqLWMwSMshkKctYzgpWksUqsslh
NbmsYS15rGM9G9jIJjazhXwaz1lAIdsoYjs72MkudrOHvexjPwc4yCEOc4Ri
jnKM45RwgpOc4jSlnOEs5zjPBS5yiTL+A3mPXSY=
              "]]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             Line[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhnP48IP4M/Ym+zIDBnZlJ0tkZkV
GSHb6eJcvNdv7MLFWYtCgiAoYUFoECwRS1nGclawklWsZg1rWcd6NrCRTeSy
mS1sZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc
5wIXKaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJK
XvGaN7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX904z0IIJYxw6hFB
fRrQkEY0pglNaUYkzWlBS1rRmja0pR3tiaID0XSkE53pQgyxdKUb3elBHD3p
RW/60Jd+9GcAAxlEPIMZwlASGMZwRpDISEYxmjGMZRzjmUASyaSQShoTmcRk
pjCVaUwnnQxmkEkWM5nFbLLJYQ5zmcd8/gO1TWld
              "]]}, {
             Directive[
              Opacity[0]]}]}}}], {{}, {}}}, {{}, 
       GraphicsComplex[CompressedData["
1:eJztmnlYzXn7x7O12bJ7kjZFGpG0r3faVGjfldM57bJlZM8ZDJrIUIphKluJ
qBnGlJiOSUQaS9RU5JAlFKGy5/d5fnPep6vv9fz+e37/Hf+4Xm5vb+K6fF7n
vrX4i70j+8rJyZX2l5P79/f/fGu3+2nvv7/V20l+gE6dUCvRGtYoYUVSeLbk
Yu3NuxJWoVFzJvzyR+o9CY8kl8t/V74oBI8ly41xZuK3YDU6ul9N50wXWJN+
vWSp8XJGk4S16fZahw0LrMA6pPq0JSY8DjyRrgQ6vmzdDdYjeb7PQg3L+xLW
p4SDvqZ9i8FTqHuxpp7CALGEp9KHX3Nm1RqADelWUfG+px7g6VQjKvr8MQJs
RG5/+UdH+YNn0KdZocVDYsDGlLf4hyUm34FN6MH6vFX/2gY2pbUVI/ol7wCb
UbpKatKKnWBzii7xUroqnVvQ3ea+SzuzwJak6BE0t+4XsBVFFQkc1YvB1hR0
y6/arRxsQ8d4Uyd4XAXbUlnttDP3LoPtqEHFIOFmI5jo2o/3Ln9tkrCQaLzx
Et0rYsztKbQkw/L7ZsztaeXvpi+Pg+Vmkn6J6JVFO+Yz6U7+ye1nP2PuQC81
LR+9HvxAMneg7+OrFi5Qk7CcIxmZnpmep4m5I63ru1t+oRbmTuSpck77h28w
d6K7dmVO1SaYO9NNL9eV4XaYO1Ou+p/OEfaYu9BOl1uhmx0wdyHegNjHF5wx
n9WbhbOoz5bFJwRumLtS6ufnn4p8MXell/l3PYKDMHejzaHBXj/wMXejKfnL
zn6Jwdydqhb1uaGWgLk7Ldqtf8VxGeaze7OQw3Jz6LuldZO7YzGfQ6vEL4Vd
izCfS8XDpuYlrcN8LpXpyYeYb8Dcgz7qVj832oq5B3XrHzU6kYK5J637+5c7
o3ZImDgs9KTE4HF35Q5IWORJXx+d61d3CHkvUlxXUH7oOPJeNOLs/I+DqpD3
IlvfrcfF15H3Ii2RaabNLeS9SWHVJ6OoWuS9adjDjj8D65D3pi0ungH3m5H3
JsuO4au3PEbeh+KbDCrVniLvQ8btApHtc+R9yPV2V74XWORD0zrldtS8Qt6X
VrZdvTO1HXlfEi1exTsHFvrSg0rNeby3yPvSwI8vzz7vRt6PDvupb/JTfCjJ
+5Gve5FZ5WAJC/2oQhiTNk9FwiI/is6O3pUwUsJy/hR6NXVo2xjk/an0j/Rx
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
XcydyCVgoLBrGuZOZHEqOTZlNubOZLtxYOZ97K+Yj1hlV+3JCcHchQqd72n2
nYe5Cy0c9m7CrnDMZ/Vm5iNmem/9CqRzV3q84WFdUhrmrqS3oyJbfw/mbqSx
YUy122HM3Sjy4iafsmOYu1O8/IIPpgWYu9Ptt6b7toGZj/RiIYeZj0zRKdKt
wa/HfKRhb8nuTVKfnku2Kz5sXFyL+VzK+i7o2fW7mHtQ9xBXvxsPMfcgY8H0
oXNfYO5JmVmOrhavJEwcZj5SuPDAoTzsu5iPHDNs/1rSjbwXZffpvEIKPfuR
WKW0Py5b9+xH5MNL7ctn9uxHstTNRug59OxHDJ4Oz1rk1LMfCWtTzb/j1LMf
yXF8Y3/Zt2c/4v2sy+8H/579yJFLhZtDQnr2I/OvVi3TDunZj+Qkrv/JJKRn
P3LgfUCgAa9nPzKidEuJFa9nPzJry/6cZF7PfmSqh2qxekzPfqT9ufW1pMSe
/cgTuw/Xy/F5AvOR4a79tm2U7qP8KDxEp/QI9lHMR+hnS7eWXcj7k9iq4e72
vcj704vWj6/7Yt/EfER1YEBbQCHy/vTgg4V6BZj5SOPS3xMEF5APoHr15At2
fyIfQEcXVld4VCIfQBFuEQ0dNcgH0vxL1a1KN5EPpOlVytYbMGc+EmyYu6/4
NvKBtObZgDW+2F8xH1kwPrs2D3PiMPORoQMdPF5i/yXiMPORy78rJs7IRp5x
4O7mXDDzkUHTfhD0PYg8h5mPqD8ecNYFXw/mI/vaS4uWFSHPYeYj7rdHbw86
jfy83kwcZj5iPD6ufwKY+cjTTUvjFp9BPpS6xxh8ipF+/TnMfKRlvHrFYjDz
EeVPi6qO/IV8WG9mPjLDsy6/C/tD5iPr1dNdmvD3w3yk4deKQXnS/eJ8yuHX
6i8CE4eFHGY+siHw+P5kaZ5HBh90sr69I2HmI7cdW9VugZmPPDnUPOkzmPmI
rqOyRgf+/piPjK4ffK4N/x6Yj7SJ8zuONqCPw8xHcnXNzGaBmY/0YuYjCua3
gtzBzEfkVWzkR4F5HGY+IjejRmtVPfrDKU3nU/TW++gPp9s70w52g5mPVNWO
rwt9gn5+b2Y+4vvTJSX9NvTzyXjk+i5t7EuZjyjKPVy9GvtV5iMFxzZ3Vb5B
P4eZj6j2iTXpADMfWSFeP95FGT4pIMeJkZYbwMxH1Fz2lZ4bCD/lMPMR+XRV
iwtg5iMj3uYnjR+Cz6c5zHwkLLW0QBvMfMRCqOttMxz9EdSql2v6DJ+vMR+5
6xy14jOY+Yhe3ZB5Zfj8isdhIYdzOCziMPORo28dFmvh8y7mI72Y+chqlfjH
hoboj6TXoffVB+DzPOYj4tyQxAjsa4UczuEw85FzcR61Jvg8jfmIU+TMMwLp
fjaKSkfb2DU6o5/DzEcy4749W+mKfg4zH3lnOy5+mRv6oyhPOy7nApj5SNbG
xgNDsW9lPhI4+4bXAOl+NppGPu6/dhZYk8PMR85HDxDX4fM+HoeFHGY+8qFe
ozjLF/3RpG3zPKkYLOYw85E3/UfFLQ9Afwz9a3v41/0h6I+hvDv9vluB/S6P
w8xH3EfPP9MYhn4OizjMfOTI5l//bI1Af2xv1uzhpv01r2pufpT6SPOjiPSw
pe+lLLJxzR479Ov/OefyP33tdjfS6qsck2slLLv/kt1/ye6/ZPdf+P9adv8l
u/+S3X/J7r/w68vuv2T3X7L7L9n9V4/f/Lfvv7g+Irv/kt1/ye6/MJfdf8nu
v2T3X7L7L+Rl91+y+y/Z/Zfs/kt2//VP/3///ovrI7L7L9n9l+z+S3b/9b8s
u/+S3X/J7r9k91+y+y9Jv+z+S3b/Jbv/+v+4//ofMguwvw==
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwV1VVYEAYQAGDsFhNsxcJWbOzuQGxFRMBWQrFbBAU7Njs23cyFudBNF7r5
qQtd6EIXxqbrDuvn4b/77t7u4e5CYhMjE7IHBARkY70wUhFFVi8HOclFbvKQ
l3zkpwAFKURhAilCUYpRnBKUJIhgSlGaMpSlHOWpQEUqEUJlqlCValQnlBrU
pBa1qUNd6lGfBoTRkEY0pglNaUZzwmlBS1rRmja0pR3t6UBHOtGZLnSlG93p
QU960Zs+9CWCfkTSnwEMZBCDGcJQhjGcKEYQzUhiGEUsccQzmjGMZRzjmcBE
JjGZBBJJIpkpTCWFaUxnBjOZxWzmMJd5zGcBC1nEYlJZQhrpLGUZGWSynBWs
ZBWrWcNa1rGeDTzBk2xkE5vZwla2sZ0d7GQXT/E0u9nDMzzLXvaxnwMc5BDP
8Twv8CKHOcJRjnGcE7zEy7zCq5zkFK/xOqc5wxu8yVu8zVnO8Q7vcj5rPruy
ljWsZhUrWcFyMslgGUtJJ40lpLKYRSxkAfOZx1zmMJtZzGQG05lGClOZQjJJ
JJLAZCYxkQmMZxxjGcNo4okjllHEZO080YwgiuEMYyhDGMwgBjKA/kTSjwj6
0ofe9KInPehON7rShc50oiMdaE872tKG1rSiJS0IpznNaEoTGtOIhoTRgPrU
oy51qE0talKDUKpTjapUoTIhVKIiFShPOcpShtKUIpggSlKC4hSjKEUIpDCF
KEgB8pOPvOQhN7nISQ6yk42sw/tIesgD7vM///Ev//A3f/Enf/A7v/Erv/Az
P/EjP3CPu3zPd9zhNre4ybd8w9d8xQ2u8yVf8DmfcY2rfMonfMxHXOEyH/IB
7/Mel7jIBWI8kMfWjaye
              "]]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{202, 605, 608, 607, 1}}]}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1Xl8DwQYB+DfNsfcxpxzbe7Nfc19m9mcY3O2SkQpShJSchZFIfexYW7D
3Pd9l4oOdJ8qlUpRjsojfzzv5/37/X7e943sPyxpaHAgEAjiTWU2qcH3+znM
ZR7zWcBCFrGYJSwljXSWsZwVZLCSVaxmDWtZx3o2kMlGNrGZLLawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac7wFm9zlnd4l/c4x3ne5wM+5CMu
cJFLfMwnfMpnfM4XfMlXfM03fMt3XOZ7fuBHrvATP/MLV/mV3/ida/zBn1zn
Bn/xNze5xW3u8A//8t+98GQWRDAhZCM7OchJKLnITR7yko/8FKAgYRSiMOEU
oSjFKE4JShJBKUpThrKUI5IoylOBilSiMlWoSjQxVKM6NahJLWpTh7rUoz4N
iKUhjWhME5rSjOa0oCWtaE0b2tKOONoTTwcSSKQjnehMF7rSjSS604NkUuhJ
L3rTh76cNvJTnOQExznGUY5wmEMc5AD72cde9rCbXexkB9vZxla2kMVmNrGR
TDawnnWsZQ2rWcVKMljBcpaRThpLWcJiFrGQBcxnHnOZc2//mc0sZvIGrzOD
6bzGq0xjKq/wMlOYzCQmMoHxvMQ4XuQFxvI8YxjNKJ5jJM8ygmcYztM8xTCG
8iRPMITHeYzBDOJRBjKAR+jPwzzEg6TyAP3oSx9604uepJBMD7qTRDe60oXO
dKIjiSTQgXjaE0c72tKG1rSiJS1oTjOa0oTGNKIhsTSgPvWoSx1qU4ua1KA6
1YghmqpUoTKVqEgFyhNFJOUoSxlKU4oISlKC4hSjKEUIpzCFCKMgBchPPvKS
h9zkIpSc5CA72QgJ/H+KAv2C7/+Uu44GuWo=
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 120]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           Line[CompressedData["
1:eJwl0wdTyAEAxuG/kczKLFLKzN6yKqPsGcqWyFbZMkP2HhkhMrKpkL0i8a16
nLv3+QLv3S8+Oy89t0EQBH9Z2jAILGhEY0JoQihNaUZzWtCSVoQRTgStaUNb
2tGeDkQSRUc6EU1nYoilC3HE05VudKcHPelFAr3pQ1/60Z8BDGQQgxnCUIYx
nBEkMpJRjGYMY0kimRTGMZ4JTCSVNCYxmSlMZRrTmcFMZjGbOcwlnXnMZwEZ
ZLKQRSxmyb+vWcZyVpDFSrJZxWpyWMNa1rGeDWxkE5vJJY98trCVbWxnBzvZ
xW4K2MNe9rGfAxykkEMc5ghFHOUYxznBSU5xmjOc5RznucBFLnGZKxRzlWtc
5wYl3OQWtynlDncp4x73ecBDynnEY57wlGc85wUveUUFlVTxmje8pZp3vOcD
H/nEZ77wlW985wc1/OQXtfymjj/B/0bqAedzUic=
            "]]}, {
           Style[{
             Line[CompressedData["
1:eJwV0mdXiAEAhuG3IltmRkYZ2Xtma9mlUFZKZKdkbyEju59F2TIzsyKRmX31
4Trn/vqc88TkFqRvDQmC4DJZoUGQwxVdTgVXucZ1bnCTW9zmDpXc5R73ecBD
HlHFY57wlGc85wXVvOQVr3nDW2p4x3tq+UAdH/lEPZ/5wle+8Z0fNPCTX/zm
D3/5R2BkCKGE0YSmhNOM5rSgJa1oTRvaEkE72tOBjnSiM5F0oSvd6E4UPehJ
L3oTTQx96Es/+hPLAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmEsckJjOFqUxj
OjOYSTwJJJJEMrOYzRzmMo/5LCCFVBaSRjqLWMwSMshkKctYzgpWksUqsslh
NbmsYS15rGM9G9jIJjazhXwaz1lAIdsoYjs72MkudrOHvexjPwc4yCEOc4Ri
jnKM45RwgpOc4jSlnOEs5zjPBS5yiTL+A3mPXSY=
              "]]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             Line[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhnP48IP4M/Ym+zIDBnZlJ0tkZkV
GSHb6eJcvNdv7MLFWYtCgiAoYUFoECwRS1nGclawklWsZg1rWcd6NrCRTeSy
mS1sZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc
5wIXKaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJK
XvGaN7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX904z0IIJYxw6hFB
fRrQkEY0pglNaUYkzWlBS1rRmja0pR3tiaID0XSkE53pQgyxdKUb3elBHD3p
RW/60Jd+9GcAAxlEPIMZwlASGMZwRpDISEYxmjGMZRzjmUASyaSQShoTmcRk
pjCVaUwnnQxmkEkWM5nFbLLJYQ5zmcd8/gO1TWld
              "]]}, {
             Directive[
              Opacity[0]]}]}}}], {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 72]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJxdzTmKFgEUhdGLkaGBgYFIKyIiIk7tbHc5z1M7z2VrO0S6hLcGY4Naykvd
RSXmLkFFQf5TUBSnPi5v5/rntY1NSb7/fv98/z4/V5e/ftkxffux+u/HsOjN
eAveirfh7XgJ78K78R68F+/D+/EBfBAfwofxEXwUL+Nj+Dg+gU/iU/g0PoPP
4hW8iodFF845Os55Os4FOs5FOs4lOs5lOs4VOs5VOs41Os51Os4NOs5NOs4t
Os5tOs4dOs7dRQ+4cOPcY48LN84ae1y4ce6zx4Ub5wF7XLhxHrLHhRvnEXtc
uHEes8eFG+cJe1y4cZ6yx4Ub5xl7XLhxnrPHhRvnBXtcuHFesseFG+cVe1y4
cV6zx4UbZ1z0Eh7wiAtPuPGM84b7eMAjLjzhxjPOOvfxgEdceMKNZ5y33McD
HnHhCTeecd5xHw94xIUn3HjG2eA+HvCIC0+48Yzznvt4wCMuPOHGM84H7uMB
j7jwhBvPOB+5jwc84sITbjzjfOL+f/8CMmufYg==
           "]]}}}, {{}, {}}}}, {LabelStyle -> {
        GrayLevel[0], 
        Directive[
         GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]}, 
      FrameLabel -> {"Step", "Mean Fitness"}, Frame -> True, FrameStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, FrameTicksStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, ImageSize -> 350, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0., 0.4}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0., 201.}, {0.4, 0.7}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[1, 72]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {"Upper Boundary"}, 
         LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
         LabelStyle -> {}, LegendLayout -> "Column"]]]], {Right, 0.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8322345453779545`*^9, 3.832234570579708*^9}, 
   3.832234942618937*^9, {3.8322351331177893`*^9, 3.832235165530012*^9}, {
   3.832235206872397*^9, 3.832235262508192*^9}, {3.832235301860115*^9, 
   3.8322353425466995`*^9}, 3.832235443063592*^9, 3.832235481973776*^9, 
   3.83223566885809*^9, 3.8322357066353765`*^9, {3.8322357908598585`*^9, 
   3.8322358687448406`*^9}, {3.8322359235026064`*^9, 3.832235934722858*^9}, {
   3.832235974879146*^9, 3.8322360600586*^9}, 3.8322361236935244`*^9, {
   3.83223622041689*^9, 3.8322362917567277`*^9}, {3.832236337467984*^9, 
   3.832236354732524*^9}, 3.8322363909869585`*^9, 3.832236433199035*^9, 
   3.8322365077389565`*^9, {3.8322365468660116`*^9, 3.8322365516711907`*^9}, {
   3.8322366144449177`*^9, 3.832236623847847*^9}, {3.832236767611659*^9, 
   3.8322367738181295`*^9}, 3.8322368179369755`*^9, 3.8322368506005898`*^9, {
   3.832236883960539*^9, 3.83223690048473*^9}, {3.832237026147382*^9, 
   3.8322370533033514`*^9}, {3.8322371609065886`*^9, 3.832237179076536*^9}, 
   3.832237244942627*^9, 3.832251747028202*^9, 3.832502189118698*^9, 
   3.8325024588970966`*^9, {3.8325051578690166`*^9, 3.8325051837751694`*^9}, {
   3.8325052326768007`*^9, 3.8325052588955903`*^9}, {3.832505321550081*^9, 
   3.832505350771243*^9}, 3.833024191946026*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"45d3ae19-782f-4c04-af05-ff3df7695f0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanl1MEAN", "}"}], ",", 
     RowBox[{"{", "meanl1STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"5", ",", "10.5"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      FractionBox["1", "GoldenRatio"]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<MAP-Elites\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", " ", 
   RowBox[{"deviationslLLP", "[", 
    RowBox[{
     RowBox[{"{", "meanl2MEAN", "}"}], ",", 
     RowBox[{"{", "meanl2STD", "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Random\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"5", ",", "10.5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", " ", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "meanoversamples2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Upper Boundary\>\"", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"5", ",", "10.5"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f3"}], "}"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Step\>\"", ",", "\"\<Elite Number\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_elites_200_steps_random.png\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<mean_elites_200_steps_random.svg\>\""}], ",", "p", ",", 
    RowBox[{"ImageResolution", "->", "500"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8322341601594467`*^9, 3.8322342118061056`*^9}, {
   3.832234616328602*^9, 3.832234632853803*^9}, 3.832234673928568*^9, {
   3.832236918057081*^9, 3.832236982132163*^9}, {3.8322370558573775`*^9, 
   3.832237056068572*^9}, {3.8322371854140224`*^9, 3.8322371856031375`*^9}, 
   3.832237249097864*^9, {3.832251381134463*^9, 3.8322514129761114`*^9}, {
   3.8322523977651486`*^9, 3.832252399060229*^9}, 3.8325013758302836`*^9, {
   3.8325024430482144`*^9, 3.832502449209072*^9}, {3.8325053950713186`*^9, 
   3.8325053981286187`*^9}, 3.8330236308164387`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"63bbe2ff-10a9-4ea2-87ee-12608997b3ed"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, GraphicsComplexBox[CompressedData["
1:eJzt2m1olWUYB/Cb3rQymua7qx1PY8211tzmNufOdi1NTed08yU1zaflSy8f
LK3AErslrezVqFSM4BDDxBcqMQ0yulMEM81kBgORPfol7EX7kBgV2Z3PdR24
/hJEfRJuv9z8zv9cXIdtyPnz3EPbF7ctuMIY8/FVxvx9Jv9+bkzOvtRj6bC8
C4sMiZOzZ3I6cV5yUn/9PhrI5tMNYudzPpidYg9hp/n9/D5TmJz2ZnYRv/8W
djG7gF3C8+LS5EzxHlPGubg8OWPxcHAFzw9lV/I+cVVyRuIR/HnF1eAa3i+u
BY/k/eI68Cj+PGl2PX8ecQbcwJ9P3MifR0zJmWVbsGni81bOweYuyMFmNORg
MwZysLkbcrAZm5wpycFmHORgMz45SXKwuQdysJkAOdhMhJwdSd6sbcFmEuRs
K3mLtgWbyZCDzRRtAluwY2dlvlWbwJbtZB5s2rQJbMEObKbCPDuWebb8P+LA
Zpo2gS3Ygc10mAdbsAObGTAPtmAHNvfCPNiCHdjMhHmwBTuwmQXzYAt2YDMb
5sEW7MDmPpgHW7ADmzkwD7ZgBzZzYR5swQ5s7od5sAU7sJkH82ALdmATaafA
BI7AFpwFO3AMNg/AfjCBI7AFZ8EOHINNO+wHEzgCW3AW7MAx2DwI+8EEjsAW
nAU7cAw282E/mMAR2IKzYAeOwWYB7AcTOAJbcBbswDHYLIT9YAJHYAvOgh04
BptFsB9M4AhswVmwA8dg8xDsBxM4AltwFuzAMdg8DPvB/7qPDGDnUW3/X+t6
Dxmce9/JTzYVpKz0iYG079XSaStbpU/kU/VL3V8sWylO0WPHl26/c530izR1
nfnu+5YZ0gcKaWPPc58VrRYX0ZD9Z+M9uT5RTD8smz+ldol8Xy+h6zIdu5/9
VFya+HdxGfWtP3CqckuaXU4nx/bf4jaLh4MrKP/65e++eIN8/6mk23aO+baj
WVxF57sG7+xXIB5BTa3ds5dWi6vBNfTLe9mzV5eLa8EjaQed2FBRL64Dj0q8
XFyfzH8ozoAbqLNn2/RHPhA3UsWVs57Y+L6YaPPetq9GH5Pvb2DfR95YVVh9
dLT8/YF9H9E52PcRnYN9H9E52PcRnYN9H+kYXzY11S452PcRnYN9H5nTuffI
heWSg30f0TnY9xGdg30f0fnE5Of7luTN2hbs+4jOJ/HvT/IWbQv2fUTnYN9H
lAlswb6PFP/0+KGnd8l8qzaBc31E5sG5PiLzYAt24FwfkXl2JPOhj+j50Ef0
fOgjyqGPwH5w6COwHxz6COwPfUTv/+99RJt7iOF+4nqTev0fn5cMpMySzq0r
ysT5dPDJVMPzf4pTtLbwlbZvTku/SdOUdHlJe6c8Xymkw2f6rdpxTp6vFPG8
9J9iGtarZt7r78jzlRL6cfXuteZa6UOlideIy6jrhcV1G7ZKHyrnzyd9aDi4
gg6c7rH/zHxxJX20/qnpuxaKq6hPy8H1x5rkecwIWjG3acKgN8XV4BrqNXde
3m+TpU/VgkdSy+fpRYefE9eBRyXeJ65P5o+IM+AGuuP89i1v50kfa6Sv/9j0
8oKZYqKZme1Vex5lW7DvI4ufOf5l2R7Jwb6P6Bzs+4jOwb6P6Bzs+4jOwb6P
zNl9dFv3CcnBvo/oHOz7SEdpptxcmeYc7PuIzsG+j+gc7PuIzicmP9/bJW/W
tmDfR3Q+iX9/krdoW7DvIzoH+z6iTGAL9n2kq89rlavXyHyrNoFzfUTmwbk+
IvNgC3bgXB+Reekj4flIMh/6iJ4PfUTPhz6i94NDH4H94NBHYH/oI3r//+0j
1/B56fORAeu2narL9RQ4w/0sdrifpfNwP+viGe5n8Xy4n6XnQ//Q86F/6PnQ
P/T+0D/0/tA/9P7QP/T+y61/XPr84+J9pEM3kXo93M9ih/tZ4X5WuJ8V7mfJ
fOgjej70ET0f+ojeH/qI3h/6iN4f+ojeH/pIch/pRlKv5+5n5fH9pT7svlQw
blbcfUH6S7ifFe5nhftZ4X6WzIf7WXo+9BE9H/qIng99RO8PfUTvD31E7w99
RO+/fPvIX/NVdqA=
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GVUEAYQB3CwsFGwxUDsbsHExkTBbrALVBQ7AMEAc9PNjvV0PV3oppv9
1IWupwtjoZuuUzd/PD/8/ndf7967C09MjkvKExAQEMgGkduPEHnVfOSnAEEU
pBCFKUJRilGcYEpQkhBCKUVpylCWcpSnAhUJoxKVqUJVwqlGBNWpQU1qUZs6
1KUe9WlAQxrRmCY0pRnNaUFLWhFJFK1pQ1va0Z4ORNORTnSmC13pRndi6EFP
etGbPvQlln70J454BjCQQQxmCEMZxvDcPTOSUYxmDAkkMpZxjGcCE5nEZKYw
lWlMJ4lkZjCTWaQwmzmkMpd5zGcBC1nEYpawlGWkkU4Gy8kkixWsZBWrySaH
NaxlHevZwEYe4EE2sZmHeJgtbGUb29nBTnaxmz3s5REe5TEe5wme5CmeZh/7
eYZneY7neYEXeYmXOcBBXuFVXuN1DnGYN3iTIxzlLd7mGMc5wUlOcZozufMF
3r+V9axjLWvIIZvVrGIlK8gik+VkkE4ay1jKEhaziIUsYD7zmEsqc5hNCrOY
yQySSWI605jKFCYziYlMYDzjGEsiCYxhNKMYyQiGM4yhDGEwgxjIAOKJoz/9
iKUvfehNL3rSgxi6042udKEznehINB1oTzva0obWRBFJK1rSguY0oylNaEwj
GtKA+tSjLnWoTS1qUoPqRFCNcKpShcpUIoyKVKA85ShLGUpTilBCKEkJgilO
MYpShMIUoiBBFCA/+chLHgLJfbr/K/9xlzv8yz/8zV/8yR/8zm/8yi/8zE/c
5hY/8gM3ucH3fMe3fMN1rnGVK3zNV3zJF1zmEp/zGZ/yCR/zER/yARe5wPu8
x7u8w3nOcZZ7q16r2Q==
            "]]]}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[{{202, 605, 203, 2, 1}}]]}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1VOQGAYQBuDLxbZ5sW3bvNi2k7axbdu2bdtGmzZuU8Vp43w3efh2Z/bx
35ndoBZdg7sEBgQEhGKSMo0mBrP1OcxlHvNZwEIWsZglLGUZy1nBSlaxmjWs
ZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zl
HOe5wEUucZkrXOUa17nBTW5xmzvc5Wd+4R6/8hv3ecBDHvGYJzzld/7gGX/y
F3/zD//ynBe85BWvecNb3vEf//OeD3zkE5/5wteQZdlRKAIJTRjCEo7wRCAi
kYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCCIlKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODYGpSi9rUoS71qE8DGnJG5Kc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxl
DrOZxUxmMJ1pTGUKk0NuABOZwHjGMZYxjGYUIxnBcIYxlCEMZhADGUB/+tGX
PvSmFz/xIz/Qkx50pxtd6UJnOtGRDrSnHW1pQ2ta0ZIWNKcZTWlCYxrRkAbU
px51qUNtalGTYGpQnWpUpQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQ
n3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50pCUNqUlFSoJIQXKSkZQkJCYRCUlA
fOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhA7JOfD7//gGp9i3CQ==
            "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwl02dXiAEAhuHXSGZlFillZm9ZlVH2DGVLZKtsmSF7j4wQGdlUyF6R+Fdd
jg/Xub8/5zzx2XnpuQ2CIPjD0oZB0EgbE0ITQmlKM5rTgpa0IoxwImhNG9rS
jvZ0IJIoOtKJaDoTQyxdiCOernSjOz3oSS8S6E0f+tKP/gxgIIMYzBCGMozh
jCCRkYxiNGMYSxLJpDCO8UxgIqmkMYnJTGEq05jODGYyi9nMYS7pzGM+C8gg
k4UsYjFL/u3MMpazgixWks0qVpPDGtayjvVsYCOb2EwueeSzha1sYzs72Mku
dlPAHvayj/0c4CCFHOIwRyjiKMc4zglOcorTnOEs5zjPBS5yictcoZirXOM6
NyjhJre4TSl3uEsZ97jPAx5SziMe84SnPOM5L3jJKyqopIrXvOEt1bzjPR/4
yCc+84WvfOM7P6jhJ7+o5Td1wf9v/KUe0qNSJA==
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3jIxU9kgpM3vLSkbZM5SVSNmp7FGE7O1fOdnJzgqpyJ4R
lw/XuT8/5zzx2flp20KCILhCZmgQlOlVrnGdG9zkFrcp5w4V3OUe93nAQx7x
mEqe8JRnPOcFVbzkFa+p5g011FLHW95Rz3s+8JFPfOYLX/nGd37wk1808Js/
NPKXwMAQQmlCU5rRnDBa0JJWtCacNkQQSRRtaUd7OtCRTnSmC13pRjTdiSGW
HsQRT0960Zs+9KUfCfRnAAMZxGCGMJRhDGcEIxnFaMaQyFjGMZ4JTCSJSSQz
mSlMZRoppDKdGcxkFrOZw1zmMZ8FLGQRaSxmCUtJJ4NlLGcFK1lFJqvJYg1r
yWYdOeSyng1sZBOb2cJW8vh/zHwKKGQ7O9jJLnazh73sYz8HKKKYgxyihMMc
4SilHOM4JzjJKU5zhrOc4zwXuMglLvMPNx5cww==
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvsjMiMyOVUvZKdmVWVETm87jwA/g7yMgeSWTvkWwykxky
MiKjZDsuzsV7/cYsW5G3PCQIgnKWhgbBSrGK1RSwhrWsYz2FbGAjm9jMFray
je3sYCdF7KKY3ZSwh72Uso/9HOAghzjMEY5yjOOc4CSnOM0ZzlLGOco5zwUu
conLXOEq17hOBTe4yS1uc4e7VHKPKu7zgIc84jFPqOYpz3hODS94ySteU8sb
3vKO99TxgY/U84nPfOErDTTyjSa+84Of/OI3f/j7f5RHIYQSRjOa04KWtKI1
bQinLe1oTwci6EgnIulMF7rSje70IIqe9KI3fYimLzHEEkc/4kmgP4kkMYCB
DGIwQxjKMIYzgpGMIpnRpDCGsYxjPBOYyCRSSSOdyUxhKtOYzgwyyCSLmcwi
mxxymc0c8pjLPPKZzwIWsojFLOEfL6hm/w==
           "]]}}}], {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1: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
7Xd1+13dfpfP7/a7zrff9W8RorKb
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1GV0FgQUBuDR3TBywOiG0Tm6axsxcizJBV2ju0O6URolDDDAAKUOtjRK
2BJ2S/h8P557z3n/3R/vDY1Pi0rNGBQUlIE1xloGCQJZJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4RgilKM4pSgJKUIoTRlKEso5ShPBSpSicpUoSrVqE4N
alKL2tQhjLrUoz4NaEgjGtOEpjSjOS0IpyWtaE0b2tKO9nSgI53oTBe60o3u
9KAnEUQSRS9604e+RNOP/gxgIIMYTAxDiCWOeBJIJImhDGM4IxjJKJJJIZU0
RjOGsYxjPBOYyCQmM4WppDON6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0zrGEt61jPBjayic1sYSvb2M4OdvIsz7GL3exhL/vYzwEO8jwvcIjDHOEo
L/ISL/MKxzjOq7zG67zBCU7yJm/xNu9witO8y3uc4SznOM+FwH16sppVrGQF
y1nGUpawmEUsZAHzmcdc5jCbWcxkBtOZRjpTmcJkJjGRCYxnHGMZw2jSSCWF
ZEYxkhEMZxhDSSKRBOKJI5YhxDA40H0GMoD+9COavvShN72IIpIIetKD7nSj
K13oTCc60oH2tKMtbWhNK1oSTgua04ymNKExjWhIA+pTj7qEUYfa1KImNahO
NapShcpUoiIVKE85QilLGUoTQilKUoLiFKMowRShMIUoSAHyk4+85CE3uchJ
DrKTjaxkITOZyEgGAo/3qfWExzziP/7lH/7mL/7kD37nN37lF37mJ37kIQ+4
zz1+4Hu+41u+4Wu+4kvucofb3OILPucmN7jONa5yhctc4jM+5RM+5iM+5APe
52Kg8+76Hx7trQY=
            "]]]}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[{{202, 605, 405, 404, 1}}]]}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Wd4DgYQAOBPjBixR2xiS2xib2LPIGaVlC41qkar1OwwWntvsbcgEVvM
1OikqE5ttaWlAzVaXvXjvXue+3n33F1Y7ODoQUGBQCAVs4TZ9FaYJ89nAQtZ
xGKWsJRlLGcFK1lFHKtZw1rWsZ4NbGQTm9nCVraxnR3Es5Nd7CaBRPaQxF72
sZ8DHOQQhzlCMkc5xnFOcJJTpPAhpznDWc7xER/zCZ/yGZ9zngt8wUUucZkv
ucJXfM03fMt3fM9VfuBHfuIaP/MLv3KdG/zG79zkFn/wJ3/xN7e5w13+4R73
ecBD/uU/Hj0ZmlmlIojUpCEt6QgmPRnISCZCyEwWspKN7OQgJ7nITR5CyUs+
8lOAghSiMEUoShjFKE4JSlKK0pShLOFEUI7yVKAilahMFapSjUiqU4Oa1KI2
dahLPerTgIY0ojFNaEoUzWhOC1rSita0oS3taE8HOhJNJzrThRi60o3u9KAn
KVp+ipOc4DjHOEoyRzjMIQ5ygP3sYy9J7CGRBHazi53Es4PtbGMrW9jMJjay
gfWsYy1rWE0cq1jJCpazjKUsYTGLWMgC5jOPucxh9pP9ZyYzmM4HvM80pjKF
ybzHu7zD20xiIhMYzzjG8hZjGM2bjOINXmckIxjOMF5jKK8yhMEMYiCvMICX
eYkXeYHn6U8/niOWvvThWXrzDL3oSQ+6042uxNCFznQimo50oD3taEsbWtOK
lrSgOc2IoilNaEwjGtKA+tSjLnWoTS1qUoPqRFKNqlShMpWoSAXKU44IwilL
GUpTipKUoDjFCKMoRShMIQpSgPzkIy+h5CE3uchJDrKTjaxkITMhZCIjGUhP
MOlISxpSB/4/RYFeQU9/yWMTT7g9
            "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwl0wdTyAEAxuG/kczKLFLKzN6yKqPsGcqWyFbZMkP2HhkhMrKpkL0i8a16
nLv3+QLv3S8+Oy89t0EQBH9Z2jAILGhEY0JoQihNaUZzWtCSVoQRTgStaUNb
2tGeDkQSRUc6EU1nYoilC3HE05VudKcHPelFAr3pQ1/60Z8BDGQQgxnCUIYx
nBEkMpJRjGYMY0kimRTGMZ4JTCSVNCYxmSlMZRrTmcFMZjGbOcwlnXnMZwEZ
ZLKQRSxmyb+vWcZyVpDFSrJZxWpyWMNa1rGeDWxkE5vJJY98trCVbWxnBzvZ
xW4K2MNe9rGfAxykkEMc5ghFHOUYxznBSU5xmjOc5RznucBFLnGZKxRzlWtc
5wYl3OQWtynlDncp4x73ecBDynnEY57wlGc85wUveUUFlVTxmje8pZp3vOcD
H/nEZ77wlW985wc1/OQXtfymjj/B/0bqAedzUic=
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0mdXiAEABeC3IVt2yCgje2Zla9mlUFZGZkKZkRkysp3jT2Vmj5AtI0LI
fvrwnHPvx3vOjc0tyNwcEgRBOTmhQXBRuSRf5gpXucZ1KrjBTW5xmzvc5R73
ecBDKnnEY55QxVOe8ZwXvOQVr3lDNW95x3s+UMNHPlHLZ77wlTq+8Z0f1POT
X/zmD3/5R2BXCKGEEU4jImhME5rSjOa0oCWtiKQ1bWhLO9rTgY5E0YnOdCGa
rnSjOz2IIZae9KI3fYijL/3ozwAGMojBDGEowxjOCOIZyShGM4axJDCO8Uxg
IpOYzBSmkkgSyaSQyjSmM4OZzGI2c0gjnblkkMk85rOALLJZyCIWs4Sl5LCM
5axgJbmsYjVrWMs61pPHBvLZyCYazllAIVvYyja2s4OdFLGL3RSzh73sYz8H
OEgJhzjMEUo5yjGOc4IyTnKK05zhLOc4zwX+AxzvXVo=
           "]]}, 
         {Opacity[0], LineBox[CompressedData["
1:eJwV0VdbjgEAgOG3skPICslnJjMiZCV7RTbX5cAPyL/JzgghlJW9I9kZyc4u
M6uSeTu4D57jJ7RiZUZmWBAExSwPD4IssYrVrGEt61jPBrLZyCY2s4UctrKN
7eSyg53sIo/d7GEv+RSwj/0c4CCHKOQwRzjKMY5zgpOc4jRnOMs5zlPEBS5S
zCVKuMwVrnKN69zgJqXc4jZ3uEsZ9yjnPg94yCMe84SnVPCM57zgJa94zRsq
qeIt73jPBz7yiWo+84WvfOM7NdRSxw/q+ckvfvOHv/+HeRVGOBE0oCGNaEwT
mtKMSJrTgpZE0YrWtCGatrSjPR3oSAyd6EwXYulKHN0I0Z0e9KQXvelDPH1J
oB/9GcBABjGYRIYwlCSGMZxkRjCSUaQwmjGMZRzjSWUCaUxkEpOZwlSmMZ0Z
zGQWs0lnDnPJYB7zWcBCFrGYJSxlGf8A8+NoMA==
           "]]}}}], {{}, {}}}, {{}, {{}, {}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJxdzUeKEFEUBdCLI4cOHDhw0IqIiIg5a39zTm3OZWsbRm7hLaWW8qbuopbg
ElRakD4FxeP8y+XuWf+xtrEtyc8//9+7+f1a3bz7xr+HsdXb8Q68E+/Cu/EK
3ou9+/EBfBAfwofxEXwUH8PH8Ql8Ep/Cp/EZfBafw+fxBXwRX8KreGx14Vwm
x7lCjnOVHOcaOc51cpwb5Dg3yXFukePcJse5Q45zlxznHjnOfXKcB+Q4D8lx
Hm31wIUb5zF9XLhx1ujjwo3zhD4u3DhP6ePCjfOMPi7cOM/p48KN84I+Ltw4
L+njwo3zij4u3Div6ePCjfOGPi7cOG/p48KN844+Ltw47+njwo3zgT4u3DjT
Vq/ggSdceMaNF5yP7OOBJ1x4xo0XnHX28cATLjzjxgvOJ/bxwBMuPOPGC85n
9vHAEy4848YLzgb7eOAJF55x4wXnC/t44AkXnnHjBecr+3jgCReeceMF5xv7
eOAJF55x4wXnO/v//Rt4VQSr
         "]]}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"MAP-Elites\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Random\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Upper Boundary\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.99, 0.3}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 5.},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"Step\"", TraditionalForm], 
     FormBox["\"Elite Number\"", TraditionalForm]},
   FrameStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->{{
      Thickness[Large], 
      Thickness[Large]}, {
      Thickness[Large], 
      Thickness[Large]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->350,
   LabelStyle->{
     GrayLevel[0], 
     Directive[
      GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 201.}, {5, 10.5}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, 
       GraphicsComplex[CompressedData["
1:eJzt2m1olWUYB/Cb3rQymua7qx1PY8211tzmNufOdi1NTed08yU1zaflSy8f
LK3AErslrezVqFSM4BDDxBcqMQ0yulMEM81kBgORPfol7EX7kBgV2Z3PdR24
/hJEfRJuv9z8zv9cXIdtyPnz3EPbF7ctuMIY8/FVxvx9Jv9+bkzOvtRj6bC8
C4sMiZOzZ3I6cV5yUn/9PhrI5tMNYudzPpidYg9hp/n9/D5TmJz2ZnYRv/8W
djG7gF3C8+LS5EzxHlPGubg8OWPxcHAFzw9lV/I+cVVyRuIR/HnF1eAa3i+u
BY/k/eI68Cj+PGl2PX8ecQbcwJ9P3MifR0zJmWVbsGni81bOweYuyMFmNORg
MwZysLkbcrAZm5wpycFmHORgMz45SXKwuQdysJkAOdhMhJwdSd6sbcFmEuRs
K3mLtgWbyZCDzRRtAluwY2dlvlWbwJbtZB5s2rQJbMEObKbCPDuWebb8P+LA
Zpo2gS3Ygc10mAdbsAObGTAPtmAHNvfCPNiCHdjMhHmwBTuwmQXzYAt2YDMb
5sEW7MDmPpgHW7ADmzkwD7ZgBzZzYR5swQ5s7od5sAU7sJkH82ALdmATaafA
BI7AFpwFO3AMNg/AfjCBI7AFZ8EOHINNO+wHEzgCW3AW7MAx2DwI+8EEjsAW
nAU7cAw282E/mMAR2IKzYAeOwWYB7AcTOAJbcBbswDHYLIT9YAJHYAvOgh04
BptFsB9M4AhswVmwA8dg8xDsBxM4AltwFuzAMdg8DPvB/7qPDGDnUW3/X+t6
Dxmce9/JTzYVpKz0iYG079XSaStbpU/kU/VL3V8sWylO0WPHl26/c530izR1
nfnu+5YZ0gcKaWPPc58VrRYX0ZD9Z+M9uT5RTD8smz+ldol8Xy+h6zIdu5/9
VFya+HdxGfWtP3CqckuaXU4nx/bf4jaLh4MrKP/65e++eIN8/6mk23aO+baj
WVxF57sG7+xXIB5BTa3ds5dWi6vBNfTLe9mzV5eLa8EjaQed2FBRL64Dj0q8
XFyfzH8ozoAbqLNn2/RHPhA3UsWVs57Y+L6YaPPetq9GH5Pvb2DfR95YVVh9
dLT8/YF9H9E52PcRnYN9H9E52PcRnYN9H+kYXzY11S452PcRnYN9H5nTuffI
heWSg30f0TnY9xGdg30f0fnE5Of7luTN2hbs+4jOJ/HvT/IWbQv2fUTnYN9H
lAlswb6PFP/0+KGnd8l8qzaBc31E5sG5PiLzYAt24FwfkXl2JPOhj+j50Ef0
fOgjyqGPwH5w6COwHxz6COwPfUTv/+99RJt7iOF+4nqTev0fn5cMpMySzq0r
ysT5dPDJVMPzf4pTtLbwlbZvTku/SdOUdHlJe6c8Xymkw2f6rdpxTp6vFPG8
9J9iGtarZt7r78jzlRL6cfXuteZa6UOlideIy6jrhcV1G7ZKHyrnzyd9aDi4
gg6c7rH/zHxxJX20/qnpuxaKq6hPy8H1x5rkecwIWjG3acKgN8XV4BrqNXde
3m+TpU/VgkdSy+fpRYefE9eBRyXeJ65P5o+IM+AGuuP89i1v50kfa6Sv/9j0
8oKZYqKZme1Vex5lW7DvI4ufOf5l2R7Jwb6P6Bzs+4jOwb6P6Bzs+4jOwb6P
zNl9dFv3CcnBvo/oHOz7SEdpptxcmeYc7PuIzsG+j+gc7PuIzicmP9/bJW/W
tmDfR3Q+iX9/krdoW7DvIzoH+z6iTGAL9n2kq89rlavXyHyrNoFzfUTmwbk+
IvNgC3bgXB+Reekj4flIMh/6iJ4PfUTPhz6i94NDH4H94NBHYH/oI3r//+0j
1/B56fORAeu2narL9RQ4w/0sdrifpfNwP+viGe5n8Xy4n6XnQ//Q86F/6PnQ
P/T+0D/0/tA/9P7QP/T+y61/XPr84+J9pEM3kXo93M9ih/tZ4X5WuJ8V7mfJ
fOgjej70ET0f+ojeH/qI3h/6iN4f+ojeH/pIch/pRlKv5+5n5fH9pT7svlQw
blbcfUH6S7ifFe5nhftZ4X6WzIf7WXo+9BE9H/qIng99RO8PfUTvD31E7w99
RO+/fPvIX/NVdqA=
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1GVUEAYQB3CwsFGwxUDsbsHExkTBbrALVBQ7AMEAc9PNjvV0PV3oppv9
1IWupwtjoZuuUzd/PD/8/ndf7967C09MjkvKExAQEMgGkduPEHnVfOSnAEEU
pBCFKUJRilGcYEpQkhBCKUVpylCWcpSnAhUJoxKVqUJVwqlGBNWpQU1qUZs6
1KUe9WlAQxrRmCY0pRnNaUFLWhFJFK1pQ1va0Z4ORNORTnSmC13pRndi6EFP
etGbPvQlln70J454BjCQQQxmCEMZxvDcPTOSUYxmDAkkMpZxjGcCE5nEZKYw
lWlMJ4lkZjCTWaQwmzmkMpd5zGcBC1nEYpawlGWkkU4Gy8kkixWsZBWrySaH
NaxlHevZwEYe4EE2sZmHeJgtbGUb29nBTnaxmz3s5REe5TEe5wme5CmeZh/7
eYZneY7neYEXeYmXOcBBXuFVXuN1DnGYN3iTIxzlLd7mGMc5wUlOcZozufMF
3r+V9axjLWvIIZvVrGIlK8gik+VkkE4ay1jKEhaziIUsYD7zmEsqc5hNCrOY
yQySSWI605jKFCYziYlMYDzjGEsiCYxhNKMYyQiGM4yhDGEwgxjIAOKJoz/9
iKUvfehNL3rSgxi6042udKEznehINB1oTzva0obWRBFJK1rSguY0oylNaEwj
GtKA+tSjLnWoTS1qUoPqRFCNcKpShcpUIoyKVKA85ShLGUpTilBCKEkJgilO
MYpShMIUoiBBFCA/+chLHgLJfbr/K/9xlzv8yz/8zV/8yR/8zm/8yi/8zE/c
5hY/8gM3ucH3fMe3fMN1rnGVK3zNV3zJF1zmEp/zGZ/yCR/zER/yARe5wPu8
x7u8w3nOcZZ7q16r2Q==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{202, 605, 203, 2, 1}}]}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1VOQGAYQBuDLxbZ5sW3bvNi2k7axbdu2bdtGmzZuU8Vp43w3efh2Z/bx
35ndoBZdg7sEBgQEhGKSMo0mBrP1OcxlHvNZwEIWsZglLGUZy1nBSlaxmjWs
ZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zl
HOe5wEUucZkrXOUa17nBTW5xmzvc5Wd+4R6/8hv3ecBDHvGYJzzld/7gGX/y
F3/zD//ynBe85BWvecNb3vEf//OeD3zkE5/5wteQZdlRKAIJTRjCEo7wRCAi
kYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCCIlKQiNWlISzrSk4GM
ZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpU
ojJVqEo1qlODYGpSi9rUoS71qE8DGnJG5Kc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxl
DrOZxUxmMJ1pTGUKk0NuABOZwHjGMZYxjGYUIxnBcIYxlCEMZhADGUB/+tGX
PvSmFz/xIz/Qkx50pxtd6UJnOtGRDrSnHW1pQ2ta0ZIWNKcZTWlCYxrRkAbU
px51qUNtalGTYGpQnWpUpQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQ
n3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50pCUNqUlFSoJIQXKSkZQkJCYRCUlA
fOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhA7JOfD7//gGp9i3CQ==
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 120]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           Line[CompressedData["
1:eJwl02dXiAEAhuHXSGZlFillZm9ZlVH2DGVLZKtsmSF7j4wQGdlUyF6R+Fdd
jg/Xub8/5zzx2XnpuQ2CIPjD0oZB0EgbE0ITQmlKM5rTgpa0IoxwImhNG9rS
jvZ0IJIoOtKJaDoTQyxdiCOernSjOz3oSS8S6E0f+tKP/gxgIIMYzBCGMozh
jCCRkYxiNGMYSxLJpDCO8UxgIqmkMYnJTGEq05jODGYyi9nMYS7pzGM+C8gg
k4UsYjFL/u3MMpazgixWks0qVpPDGtayjvVsYCOb2EwueeSzha1sYzs72Mku
dlPAHvayj/0c4CCFHOIwRyjiKMc4zglOcorTnOEs5zjPBS5yictcoZirXOM6
NyjhJre4TSl3uEsZ97jPAx5SziMe84SnPOM5L3jJKyqopIrXvOEt1bzjPR/4
yCc+84WvfOM7P6jhJ7+o5Td1wf9v/KUe0qNSJA==
            "]]}, {
           Style[{
             Line[CompressedData["
1:eJwV0mdXiAEAhuG3jIxU9kgpM3vLSkbZM5SVSNmp7FGE7O1fOdnJzgqpyJ4R
lw/XuT8/5zzx2flp20KCILhCZmgQlOlVrnGdG9zkFrcp5w4V3OUe93nAQx7x
mEqe8JRnPOcFVbzkFa+p5g011FLHW95Rz3s+8JFPfOYLX/nGd37wk1808Js/
NPKXwMAQQmlCU5rRnDBa0JJWtCacNkQQSRRtaUd7OtCRTnSmC13pRjTdiSGW
HsQRT0960Zs+9KUfCfRnAAMZxGCGMJRhDGcEIxnFaMaQyFjGMZ4JTCSJSSQz
mSlMZRoppDKdGcxkFrOZw1zmMZ8FLGQRaSxmCUtJJ4NlLGcFK1lFJqvJYg1r
yWYdOeSyng1sZBOb2cJW8vh/zHwKKGQ7O9jJLnazh73sYz8HKKKYgxyihMMc
4SilHOM4JzjJKU5zhrOc4zwXuMglLvMPNx5cww==
              "]]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             Line[CompressedData["
1:eJwV0VdbiAEAgNGvsjMiMyOVUvZKdmVWVETm87jwA/g7yMgeSWTvkWwykxky
MiKjZDsuzsV7/cYsW5G3PCQIgnKWhgbBSrGK1RSwhrWsYz2FbGAjm9jMFray
je3sYCdF7KKY3ZSwh72Uso/9HOAghzjMEY5yjOOc4CSnOM0ZzlLGOco5zwUu
conLXOEq17hOBTe4yS1uc4e7VHKPKu7zgIc84jFPqOYpz3hODS94ySteU8sb
3vKO99TxgY/U84nPfOErDTTyjSa+84Of/OI3f/j7f5RHIYQSRjOa04KWtKI1
bQinLe1oTwci6EgnIulMF7rSje70IIqe9KI3fYimLzHEEkc/4kmgP4kkMYCB
DGIwQxjKMIYzgpGMIpnRpDCGsYxjPBOYyCRSSSOdyUxhKtOYzgwyyCSLmcwi
mxxymc0c8pjLPPKZzwIWsojFLOEfL6hm/w==
              "]]}, {
             Directive[
              Opacity[0]]}]}}}], {{}, {}}}, {{}, 
       GraphicsComplex[CompressedData["
1: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
7Xd1+13dfpfP7/a7zrff9W8RorKb
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwV1GV0FgQUBuDR3TBywOiG0Tm6axsxcizJBV2ju0O6URolDDDAAKUOtjRK
2BJ2S/h8P557z3n/3R/vDY1Pi0rNGBQUlIE1xloGCQJZJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4RgilKM4pSgJKUIoTRlKEso5ShPBSpSicpUoSrVqE4N
alKL2tQhjLrUoz4NaEgjGtOEpjSjOS0IpyWtaE0b2tKO9nSgI53oTBe60o3u
9KAnEUQSRS9604e+RNOP/gxgIIMYTAxDiCWOeBJIJImhDGM4IxjJKJJJIZU0
RjOGsYxjPBOYyCQmM4WppDON6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWr
WM0zrGEt61jPBjayic1sYSvb2M4OdvIsz7GL3exhL/vYzwEO8jwvcIjDHOEo
L/ISL/MKxzjOq7zG67zBCU7yJm/xNu9witO8y3uc4SznOM+FwH16sppVrGQF
y1nGUpawmEUsZAHzmcdc5jCbWcxkBtOZRjpTmcJkJjGRCYxnHGMZw2jSSCWF
ZEYxkhEMZxhDSSKRBOKJI5YhxDA40H0GMoD+9COavvShN72IIpIIetKD7nSj
K13oTCc60oH2tKMtbWhNK1oSTgua04ymNKExjWhIA+pTj7qEUYfa1KImNahO
NapShcpUoiIVKE85QilLGUoTQilKUoLiFKMowRShMIUoSAHyk4+85CE3uchJ
DrKTjaxkITOZyEgGAo/3qfWExzziP/7lH/7mL/7kD37nN37lF37mJ37kIQ+4
zz1+4Hu+41u+4Wu+4kvucofb3OILPucmN7jONa5yhctc4jM+5RM+5iM+5APe
52Kg8+76Hx7trQY=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{202, 605, 405, 404, 1}}]}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwl1Wd4DgYQAOBPjBixR2xiS2xib2LPIGaVlC41qkar1OwwWntvsbcgEVvM
1OikqE5ttaWlAzVaXvXjvXue+3n33F1Y7ODoQUGBQCAVs4TZ9FaYJ89nAQtZ
xGKWsJRlLGcFK1lFHKtZw1rWsZ4NbGQTm9nCVraxnR3Es5Nd7CaBRPaQxF72
sZ8DHOQQhzlCMkc5xnFOcJJTpPAhpznDWc7xER/zCZ/yGZ9zngt8wUUucZkv
ucJXfM03fMt3fM9VfuBHfuIaP/MLv3KdG/zG79zkFn/wJ3/xN7e5w13+4R73
ecBD/uU/Hj0ZmlmlIojUpCEt6QgmPRnISCZCyEwWspKN7OQgJ7nITR5CyUs+
8lOAghSiMEUoShjFKE4JSlKK0pShLOFEUI7yVKAilahMFapSjUiqU4Oa1KI2
dahLPerTgIY0ojFNaEoUzWhOC1rSita0oS3taE8HOhJNJzrThRi60o3u9KAn
KVp+ipOc4DjHOEoyRzjMIQ5ygP3sYy9J7CGRBHazi53Es4PtbGMrW9jMJjay
gfWsYy1rWE0cq1jJCpazjKUsYTGLWMgC5jOPucxh9pP9ZyYzmM4HvM80pjKF
ybzHu7zD20xiIhMYzzjG8hZjGM2bjOINXmckIxjOMF5jKK8yhMEMYiCvMICX
eYkXeYHn6U8/niOWvvThWXrzDL3oSQ+6042uxNCFznQimo50oD3taEsbWtOK
lrSgOc2IoilNaEwjGtKA+tSjLnWoTS1qUoPqRFKNqlShMpWoSAXKU44IwilL
GUpTipKUoDjFCKMoRShMIQpSgPzkIy+h5CE3uchJDrKTjaxkITMhZCIjGUhP
MOlISxpSB/4/RYFeQU9/yWMTT7g9
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 120]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           Line[CompressedData["
1:eJwl0wdTyAEAxuG/kczKLFLKzN6yKqPsGcqWyFbZMkP2HhkhMrKpkL0i8a16
nLv3+QLv3S8+Oy89t0EQBH9Z2jAILGhEY0JoQihNaUZzWtCSVoQRTgStaUNb
2tGeDkQSRUc6EU1nYoilC3HE05VudKcHPelFAr3pQ1/60Z8BDGQQgxnCUIYx
nBEkMpJRjGYMY0kimRTGMZ4JTCSVNCYxmSlMZRrTmcFMZjGbOcwlnXnMZwEZ
ZLKQRSxmyb+vWcZyVpDFSrJZxWpyWMNa1rGeDWxkE5vJJY98trCVbWxnBzvZ
xW4K2MNe9rGfAxykkEMc5ghFHOUYxznBSU5xmjOc5RznucBFLnGZKxRzlWtc
5wYl3OQWtynlDncp4x73ecBDynnEY57wlGc85wUveUUFlVTxmje8pZp3vOcD
H/nEZ77wlW985wc1/OQXtfymjj/B/0bqAedzUic=
            "]]}, {
           Style[{
             Line[CompressedData["
1:eJwV0mdXiAEABeC3IVt2yCgje2Zla9mlUFZGZkKZkRkysp3jT2Vmj5AtI0LI
fvrwnHPvx3vOjc0tyNwcEgRBOTmhQXBRuSRf5gpXucZ1KrjBTW5xmzvc5R73
ecBDKnnEY55QxVOe8ZwXvOQVr3lDNW95x3s+UMNHPlHLZ77wlTq+8Z0f1POT
X/zmD3/5R2BXCKGEEU4jImhME5rSjOa0oCWtiKQ1bWhLO9rTgY5E0YnOdCGa
rnSjOz2IIZae9KI3fYijL/3ozwAGMojBDGEowxjOCOIZyShGM4axJDCO8Uxg
IpOYzBSmkkgSyaSQyjSmM4OZzGI2c0gjnblkkMk85rOALLJZyCIWs4Sl5LCM
5axgJbmsYjVrWMs61pPHBvLZyCYazllAIVvYyja2s4OdFLGL3RSzh73sYz8H
OEgJhzjMEUo5yjGOc4IyTnKK05zhLOc4zwX+AxzvXVo=
              "]]}, {
             Directive[
              Opacity[0]]}]}, {
           Style[{
             Line[CompressedData["
1:eJwV0VdbjgEAgOG3skPICslnJjMiZCV7RTbX5cAPyL/JzgghlJW9I9kZyc4u
M6uSeTu4D57jJ7RiZUZmWBAExSwPD4IssYrVrGEt61jPBrLZyCY2s4UctrKN
7eSyg53sIo/d7GEv+RSwj/0c4CCHKOQwRzjKMY5zgpOc4jRnOMs5zlPEBS5S
zCVKuMwVrnKN69zgJqXc4jZ3uEsZ9yjnPg94yCMe84SnVPCM57zgJa94zRsq
qeIt73jPBz7yiWo+84WvfOM7NdRSxw/q+ckvfvOHv/+HeRVGOBE0oCGNaEwT
mtKMSJrTgpZE0YrWtCGatrSjPR3oSAyd6EwXYulKHN0I0Z0e9KQXvelDPH1J
oB/9GcBABjGYRIYwlCSGMZxkRjCSUaQwmjGMZRzjSWUCaUxkEpOZwlSmMZ0Z
zGQWs0lnDnPJYB7zWcBCFrGYJSxlGf8A8+NoMA==
              "]]}, {
             Directive[
              Opacity[0]]}]}}}], {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 72]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          Line[CompressedData["
1:eJxdzUeKEFEUBdCLI4cOHDhw0IqIiIg5a39zTm3OZWsbRm7hLaWW8qbuopbg
ElRakD4FxeP8y+XuWf+xtrEtyc8//9+7+f1a3bz7xr+HsdXb8Q68E+/Cu/EK
3ou9+/EBfBAfwofxEXwUH8PH8Ql8Ep/Cp/EZfBafw+fxBXwRX8KreGx14Vwm
x7lCjnOVHOcaOc51cpwb5Dg3yXFukePcJse5Q45zlxznHjnOfXKcB+Q4D8lx
Hm31wIUb5zF9XLhx1ujjwo3zhD4u3DhP6ePCjfOMPi7cOM/p48KN84I+Ltw4
L+njwo3zij4u3Div6ePCjfOGPi7cOG/p48KN844+Ltw47+njwo3zgT4u3DjT
Vq/ggSdceMaNF5yP7OOBJ1x4xo0XnHX28cATLjzjxgvOJ/bxwBMuPOPGC85n
9vHAEy4848YLzgb7eOAJF55x4wXnC/t44AkXnnHjBecr+3jgCReeceMF5xv7
eOAJF55x4wXnO/v//Rt4VQSr
           "]]}}}, {{}, {}}}}, {LabelStyle -> {
        GrayLevel[0], 
        Directive[
         GrayLevel[0], FontColor -> GrayLevel[0], FontSize -> 14]}, 
      FrameLabel -> {"Step", "Elite Number"}, Frame -> True, FrameStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, FrameTicksStyle -> {{
         Thickness[Large], 
         Thickness[Large]}, {
         Thickness[Large], 
         Thickness[Large]}}, ImageSize -> 350, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 5.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0., 201.}, {5, 10.5}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       Unevaluated[
        LineLegend[{
          Directive[
           PointSize[
            Rational[1, 72]], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}, {"Upper Boundary"}, 
         LegendMarkers -> {{False, Automatic}}, Joined -> {True}, 
         LabelStyle -> {}, LegendLayout -> "Column"]]]], {Right, 0.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.8322341439315405`*^9, {3.8322341782668056`*^9, 3.8322341884906197`*^9}, 
   3.832234288901206*^9, 3.8322346352925663`*^9, 3.8322346780737247`*^9, 
   3.832234946659666*^9, 3.8322360744409285`*^9, {3.8322361270660295`*^9, 
   3.8322361484051495`*^9}, 3.832236359197796*^9, 3.8322369130745974`*^9, {
   3.832236967029703*^9, 3.8322369826648064`*^9}, 3.8322370236057043`*^9, 
   3.832237056615398*^9, {3.8322371634358783`*^9, 3.832237186837209*^9}, 
   3.832237257310459*^9, 3.832251762212618*^9, 3.832252401003948*^9, 
   3.832502194493083*^9, 3.8325024516151066`*^9, 3.832505400113649*^9, 
   3.833024193715678*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"97375115-9c66-43a3-ae69-585e754d39c9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 475},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2255613a-8c4d-4e55-97ab-59822b9ba931"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 297, 5, 87, "Title",ExpressionUUID->"d5cba4f6-30b5-4420-abe2-51c097d78476"],
Cell[880, 29, 321, 8, 85, "Subsubsection",ExpressionUUID->"00e65c47-0df5-4887-ae6d-82e78d497849"],
Cell[CellGroupData[{
Cell[1226, 41, 161, 3, 47, "Section",ExpressionUUID->"285c1564-0916-43b4-b0e7-3a1f6033fee9"],
Cell[1390, 46, 7183, 171, 585, "Input",ExpressionUUID->"81839cac-37d5-4d8f-90ce-fbe49998178f"],
Cell[8576, 219, 3564, 88, 414, "Input",ExpressionUUID->"d9b20218-0b0c-41b5-b6d3-87e163d8424a"],
Cell[12143, 309, 3754, 85, 296, "Input",ExpressionUUID->"3b04d7cb-01fa-4db8-8b68-a83e9a30b89e"],
Cell[15900, 396, 4760, 124, 250, "Input",ExpressionUUID->"b36965ea-d38f-4d59-b223-0840122d5a93"],
Cell[20663, 522, 2611, 60, 140, "Input",ExpressionUUID->"2938d90f-6d0a-45a8-a58e-bda930cb6dad"],
Cell[23277, 584, 20256, 467, 1037, "Input",ExpressionUUID->"fbeb9c1b-2b5d-4233-a67d-dc7520ceccd7"],
Cell[43536, 1053, 8830, 207, 313, "Input",ExpressionUUID->"4f79cbdc-f42e-4149-86ea-49e21191d064"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52403, 1265, 156, 3, 59, "Section",ExpressionUUID->"2cadae6f-cd35-4099-8a34-085c94fd7775"],
Cell[52562, 1270, 1595, 38, 120, "Input",ExpressionUUID->"7e89e2c6-5867-4ca0-a6c9-9aa16e23e8a5"],
Cell[54160, 1310, 2796, 44, 43, "Input",ExpressionUUID->"89d2d4d9-d061-4d35-9dbc-42bef7c98b88"],
Cell[56959, 1356, 2989, 79, 228, "Input",ExpressionUUID->"485d1540-b7a5-4074-84c8-dba5b33455b6"],
Cell[59951, 1437, 5496, 105, 279, "Input",ExpressionUUID->"f12bc893-543d-4d6e-a459-b14aecd7998a"],
Cell[65450, 1544, 399, 10, 25, "Input",ExpressionUUID->"b2ea8291-3498-4ee8-9e82-b8bcea57afe2"],
Cell[65852, 1556, 3995, 89, 279, "Input",ExpressionUUID->"c67b06ec-2684-471d-b6e9-6b04e2956f15"],
Cell[69850, 1647, 754, 14, 25, "Input",ExpressionUUID->"5edc334f-12a7-474b-bb0b-f5c35e9e5370"],
Cell[70607, 1663, 844, 17, 43, "Input",ExpressionUUID->"6125f4c2-6ba4-4fec-8f42-9ae487c2c517"],
Cell[71454, 1682, 1013, 23, 43, "Input",ExpressionUUID->"6b85df37-348e-4c50-8054-30418dd3aa9d"],
Cell[CellGroupData[{
Cell[72492, 1709, 3811, 94, 93, "Input",ExpressionUUID->"a4064425-bc41-4d7c-b0fc-ec44cf96664f"],
Cell[76306, 1805, 728, 13, 28, "Output",ExpressionUUID->"236a8b9c-a285-4156-aea5-ceb2d64ea581"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77071, 1823, 3877, 94, 93, "Input",ExpressionUUID->"ffee5c99-45d8-4d6c-802c-4ea69732e67d"],
Cell[80951, 1919, 726, 13, 28, "Output",ExpressionUUID->"88c89d08-95ed-4262-be71-6d43b78ba172"]
}, Open  ]],
Cell[81692, 1935, 5218, 142, 144, "Input",ExpressionUUID->"1a51f26b-fa62-4cfd-80f5-7db1bc4e3589"],
Cell[86913, 2079, 4218, 84, 76, "Input",ExpressionUUID->"34f2b7ed-9d9e-4921-9d90-10eb4740ca82"],
Cell[CellGroupData[{
Cell[91156, 2167, 2273, 62, 93, "Input",ExpressionUUID->"980989a3-425a-4c0a-b8c0-5ddfc990d43a"],
Cell[93432, 2231, 17735, 487, 28, "Output",ExpressionUUID->"cf67f34c-3f2e-4601-a796-dba96047fba8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111204, 2723, 3147, 74, 110, "Input",ExpressionUUID->"cadf0727-f383-4b90-abba-f7f8bbe31982"],
Cell[114354, 2799, 306013, 5442, 325, "Output",ExpressionUUID->"8d2469d2-cd4c-43c6-b865-e9bde6312310"],
Cell[420370, 8243, 769, 11, 63, "Output",ExpressionUUID->"bf25d751-9554-4886-aaa1-66c6f7a377d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[421188, 8260, 223, 5, 59, "Section",ExpressionUUID->"e1c5df26-8349-43d5-806b-c3ad12c8c57d"],
Cell[421414, 8267, 3279, 69, 127, "Input",ExpressionUUID->"a60966a2-5010-45e4-a8d5-fde788d4df7d"],
Cell[424696, 8338, 428, 9, 25, "Input",ExpressionUUID->"982d321d-0c5f-42f2-8675-93c9359d88bc"],
Cell[425127, 8349, 274, 7, 25, "Input",ExpressionUUID->"9e65e77c-4562-4969-a9b7-f72183c6ff08"],
Cell[425404, 8358, 2217, 51, 127, "Input",ExpressionUUID->"5e3502fb-3955-4bf8-9e64-8a16d6f223c5"],
Cell[427624, 8411, 2037, 48, 127, "Input",ExpressionUUID->"b2778bf2-8474-427e-8c86-b106cb54fc0c"],
Cell[429664, 8461, 999, 22, 59, "Input",ExpressionUUID->"0a667c9c-7e45-4900-a6d6-3c7d5b33b97c"],
Cell[430666, 8485, 3390, 73, 194, "Input",ExpressionUUID->"ecbca38e-3d1d-40b6-b23d-cb1b5260d483"],
Cell[434059, 8560, 688, 17, 25, "Input",ExpressionUUID->"9425394f-5712-48a8-8473-0f598c0cb2e7"],
Cell[434750, 8579, 2967, 69, 127, "Input",ExpressionUUID->"2f456715-4be5-444e-a7f2-89129f8d30da"],
Cell[CellGroupData[{
Cell[437742, 8652, 4734, 119, 221, "Input",ExpressionUUID->"312e1c2e-972b-4738-b1fe-497bb62fbba8"],
Cell[442479, 8773, 67766, 1286, 217, "Output",ExpressionUUID->"45d3ae19-782f-4c04-af05-ff3df7695f0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510282, 10064, 4472, 116, 221, "Input",ExpressionUUID->"63bbe2ff-10a9-4ea2-87ee-12608997b3ed"],
Cell[514757, 10182, 48983, 981, 224, "Output",ExpressionUUID->"97375115-9c66-43a3-ae69-585e754d39c9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

